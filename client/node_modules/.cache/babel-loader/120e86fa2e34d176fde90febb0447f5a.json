{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\decitude\\\\client\\\\src\\\\components\\\\Grille.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../styles/Grille.css';\nimport Piece from \"./pieces/Piece\";\nimport { useScrollTrigger } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Grille = ({\n  nbColonnes,\n  nbLignes,\n  carte,\n  position,\n  mursH,\n  mursV\n}) => {\n  _s();\n\n  const [maxLignesPiece, setMaxLignesPiece] = useState(0);\n  const [maxColonnesPiece, setMaxColonnesPiece] = useState(0);\n\n  const getDistance = (min, max) => {\n    return Math.sqrt((min[0] - max[0]) * (min[0] - max[0]) + (min[1] - max[1]) * (min[1] - max[1]));\n  };\n\n  const associate = (minimums, maximums) => {\n    var anchors = [];\n    var maxUsed = [];\n    var maxCPiece = 0;\n    var maxLPiece = 0; // maximums.sort((a,b)=>b[1]-a[1]).sort((a,b)=>a[0]-b[0])\n\n    var firstAssociation = [];\n    minimums.forEach(min => {\n      // var Max =[nbLignes,nbColonnes]\n      var possiblesMax = [];\n      maximums.forEach(max => {\n        // if((max[0]>=min[0] && max[1]>=min[1]) && (max[0]<=Max[0] &&  max[1]<=Max[1]) && (min[0]<max[0] || min[1]<max[1]) && !maxUsed.includes(max)){\n        //     Max = max\n        // }\n        if (max[0] >= min[0] && max[1] >= min[1] && (min[0] < max[0] || min[1] < max[1])) {\n          possiblesMax.push(max);\n        }\n      });\n      console.log(\"min : \" + min + \" => \" + possiblesMax); // maxUsed.push(Max)\n      // anchors.push([min,Max])\n      // if(maxCPiece<Max[1]-min[1]){\n      //     maxCPiece=Max[1]-min[1]+1\n      // }\n      // if(maxLPiece<Max[0]-min[0]){\n      //     maxLPiece=Max[0]-min[0]+1\n      // }\n    });\n\n    if (maxColonnesPiece == 0) {\n      setMaxColonnesPiece(maxCPiece);\n    }\n\n    if (maxLignesPiece == 0) {\n      setMaxLignesPiece(maxLPiece);\n    }\n\n    console.log(\"Anchors : \", anchors);\n    return anchors;\n  };\n\n  useEffect(() => {\n    console.log(maxColonnesPiece, maxLignesPiece);\n  }, [maxColonnesPiece, maxLignesPiece]);\n\n  const getAnchors = () => {\n    var minimums = [];\n    var maximums = [];\n\n    for (let i = 0; i < mursV.length; i++) {\n      for (let j = 0; j < mursH[i].length; j++) {\n        if (mursV[i][j] > 0 && mursH[i][j] > 0) {\n          minimums.push([i, j]);\n        }\n\n        if (mursV[i][j + 1] > 0 && mursH[i + 1][j] > 0) {\n          maximums.push([i, j]);\n        }\n      }\n    }\n\n    return associate(minimums, maximums);\n  };\n\n  const getAnchor = (anchors, pos) => {\n    var Min = [-1, -1];\n    var Index = -1;\n    anchors.forEach((a, index) => {\n      const min = a[0];\n      const max = a[1];\n      console.log(\"Test anchor : \", min, max, pos);\n\n      if (pos[0] >= min[0] && pos[1] >= min[1] && pos[0] <= max[0] && pos[1] <= max[1]) {\n        Min = min;\n        Index = index;\n      }\n    });\n    return [Min, Index];\n  };\n\n  const renderPieces = () => {\n    var components = [];\n    const anchors = getAnchors();\n    const [anchor, idAnchor] = getAnchor(anchors, position);\n    let nbL;\n    let nbC;\n\n    if (anchor[0] < 0 && anchor[1] < 0) {\n      nbL = nbLignes;\n      nbC = nbColonnes; // setMaxLignesPiece(nbLignes)\n      // setMaxColonnesPiece(nbColonnes)\n    } else {\n      const area = anchors[idAnchor];\n      nbL = area[1][0] - area[0][0] + 1;\n      nbC = area[1][1] - area[0][1] + 1;\n    }\n\n    components.push( /*#__PURE__*/_jsxDEV(Piece, {\n      idPiece: idAnchor,\n      mursH: mursH,\n      mursV: mursV,\n      carte: carte,\n      position: position,\n      nbLignes: nbL,\n      nbColonnes: nbC,\n      maxLignesPiece: nbL == nbLignes ? nbL : maxLignesPiece,\n      maxColonnesPiece: nbC == nbColonnes ? nbC : maxColonnesPiece // nbLignes={nbLignes}\n      // nbColonnes={nbColonnes}\n      // maxColonnesPiece={nbColonnes}\n      // maxLignesPiece={nbLignes}\n      ,\n      anchor: anchor[0] < 0 && anchor[1] < 0 ? [0, 0] : anchor\n    }, idAnchor, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this));\n    return components;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"piece-container\",\n      children: renderPieces()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AHAH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Grille, \"LD/8RZ+8AzLdjOL0HIIfcJ5QDFw=\");\n\n_c = Grille;\nexport default Grille;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grille\");","map":{"version":3,"sources":["C:/Users/hugod/decitude/client/src/components/Grille.js"],"names":["React","useEffect","useState","makeStyles","Piece","useScrollTrigger","Grille","nbColonnes","nbLignes","carte","position","mursH","mursV","maxLignesPiece","setMaxLignesPiece","maxColonnesPiece","setMaxColonnesPiece","getDistance","min","max","Math","sqrt","associate","minimums","maximums","anchors","maxUsed","maxCPiece","maxLPiece","firstAssociation","forEach","possiblesMax","push","console","log","getAnchors","i","length","j","getAnchor","pos","Min","Index","a","index","renderPieces","components","anchor","idAnchor","nbL","nbC","area"],"mappings":"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","sourcesContent":["import React ,{useEffect, useState}from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport '../styles/Grille.css';\r\n\r\nimport Piece from \"./pieces/Piece\"\r\nimport { useScrollTrigger } from '@material-ui/core';\r\n\r\n\r\n\r\nconst Grille = ({\r\n    nbColonnes,\r\n    nbLignes,\r\n    carte,\r\n    position,\r\n    mursH,\r\n    mursV\r\n}) => {\r\n\r\n    const [maxLignesPiece,setMaxLignesPiece]=useState(0)\r\n    const [maxColonnesPiece,setMaxColonnesPiece]=useState(0)\r\n\r\n    const getDistance=(min,max)=>{\r\n        return Math.sqrt((min[0]-max[0])*(min[0]-max[0]) + (min[1]-max[1])*(min[1]-max[1]))\r\n    }\r\n\r\n    const associate=(minimums,maximums)=>{\r\n        var anchors=[]\r\n        var maxUsed=[]\r\n        var maxCPiece =0\r\n        var maxLPiece =0\r\n\r\n        // maximums.sort((a,b)=>b[1]-a[1]).sort((a,b)=>a[0]-b[0])\r\n        var firstAssociation=[]\r\n        minimums.forEach(min => {\r\n            // var Max =[nbLignes,nbColonnes]\r\n            var possiblesMax=[]\r\n            maximums.forEach(max => {\r\n                // if((max[0]>=min[0] && max[1]>=min[1]) && (max[0]<=Max[0] &&  max[1]<=Max[1]) && (min[0]<max[0] || min[1]<max[1]) && !maxUsed.includes(max)){\r\n                //     Max = max\r\n                // }\r\n                if((max[0]>=min[0] && max[1]>=min[1]) && (min[0]<max[0] || min[1]<max[1])){\r\n                    possiblesMax.push( max)\r\n                }\r\n            });\r\n            console.log(\"min : \"+min+\" => \"+possiblesMax)\r\n            // maxUsed.push(Max)\r\n            // anchors.push([min,Max])\r\n\r\n            // if(maxCPiece<Max[1]-min[1]){\r\n            //     maxCPiece=Max[1]-min[1]+1\r\n            // }\r\n            // if(maxLPiece<Max[0]-min[0]){\r\n            //     maxLPiece=Max[0]-min[0]+1\r\n            // }\r\n        })\r\n\r\n\r\n        if(maxColonnesPiece==0){\r\n            setMaxColonnesPiece(maxCPiece)\r\n        }\r\n        if(maxLignesPiece==0){\r\n            setMaxLignesPiece(maxLPiece)\r\n        }\r\n        console.log(\"Anchors : \",anchors)\r\n\r\n        return(anchors)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log(maxColonnesPiece,maxLignesPiece)\r\n    },[maxColonnesPiece,maxLignesPiece])\r\n\r\n    const getAnchors=()=>{   \r\n        var minimums=[]\r\n        var maximums=[]\r\n        \r\n        for(let i=0;i<mursV.length;i++){\r\n            for(let j=0;j<mursH[i].length;j++){\r\n                if(mursV[i][j]>0 && mursH[i][j]>0){\r\n                    minimums.push([i,j])\r\n                }   \r\n                if(mursV[i][j+1]>0 && mursH[i+1][j]>0){\r\n                    maximums.push([i,j])\r\n                }\r\n            }\r\n        }\r\n        return associate(minimums,maximums)\r\n    }\r\n\r\n    const getAnchor=(anchors,pos)=>{\r\n        \r\n        var Min=[-1,-1]\r\n        var Index=-1\r\n        anchors.forEach((a,index) => {\r\n            const min = a[0]\r\n            const max = a[1]\r\n            console.log(\"Test anchor : \",min,max,pos)\r\n            if(pos[0]>=min[0] && pos[1]>=min[1] && pos[0]<=max[0] && pos[1]<=max[1]){\r\n                Min= min\r\n                Index=index\r\n            }\r\n        });\r\n        return [Min,Index]\r\n    }\r\n\r\n   \r\n\r\n\r\n    const renderPieces=()=>{\r\n        var components =[]\r\n        \r\n        const anchors = getAnchors()\r\n\r\n        const [anchor,idAnchor]=getAnchor(anchors,position) \r\n        let nbL\r\n        let nbC\r\n\r\n        if(anchor[0]< 0 && anchor[1]<0){\r\n            nbL = nbLignes\r\n            nbC = nbColonnes\r\n            // setMaxLignesPiece(nbLignes)\r\n            // setMaxColonnesPiece(nbColonnes)\r\n        }else{\r\n            const area=anchors[idAnchor]\r\n            nbL = area[1][0]-area[0][0]+1\r\n            nbC = area[1][1]-area[0][1]+1\r\n        }\r\n\r\n\r\n        components.push(\r\n            <Piece\r\n                key={idAnchor}\r\n                idPiece={idAnchor}\r\n                mursH={mursH}\r\n                mursV={mursV}\r\n                carte={carte}\r\n                position={position}\r\n                nbLignes={nbL}\r\n                nbColonnes={nbC}    \r\n                maxLignesPiece={nbL==nbLignes ? nbL : maxLignesPiece}\r\n                maxColonnesPiece={nbC==nbColonnes ? nbC : maxColonnesPiece}\r\n                // nbLignes={nbLignes}\r\n                // nbColonnes={nbColonnes}\r\n                // maxColonnesPiece={nbColonnes}\r\n                // maxLignesPiece={nbLignes}\r\n                anchor={anchor[0]< 0 && anchor[1]<0 ?  [0,0] : anchor }\r\n            />\r\n        )\r\n        return components\r\n    }\r\n    \r\n\r\n    return ( \r\n        <>\r\n        <div \r\n            className=\"piece-container\"\r\n        >   \r\n            {renderPieces()}\r\n        </div>\r\n        <h1>AHAH</h1>\r\n        </>\r\n    )\r\n}\r\n \r\nexport default Grille;"]},"metadata":{},"sourceType":"module"}