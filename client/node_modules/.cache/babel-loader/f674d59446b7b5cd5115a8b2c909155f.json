{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hugo Dufr\\xEAne\\\\decitude\\\\client\\\\src\\\\components\\\\interfaceJoueur\\\\InterInterventions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport '../../styles/Interfaces.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InterInterventions = ({\n  budget,\n  cycles,\n  handleBudgetChange,\n  type,\n  currentCycle,\n  budgetSim\n}) => {\n  _s();\n\n  const lastRow = useRef(null);\n  const nbPompiers = 6;\n  const [numCycle, setNumCycle] = useState(1);\n  const [lastCycle, setLastCycle] = useState(budgetSim);\n\n  const renderHeaders = () => {\n    var components = [];\n    components.push( /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"center\",\n      component: \"th\",\n      children: \"S\\xE9quence\"\n    }, 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this));\n    components.push( /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"center\",\n      component: \"th\",\n      children: \"Cycle\"\n    }, 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this));\n\n    if (type == \"equipements\") {\n      components.push( /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"center\",\n        component: \"th\",\n        children: \"Type\"\n      }, 2, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this));\n    }\n\n    for (let i = 1; i <= nbPompiers; i++) {\n      components.push( /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"center\",\n        component: \"th\",\n        children: [\"Pompier \", i]\n      }, i + \" : \" + type == \"equipements\" ? 2 : 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this));\n    }\n\n    components.push( /*#__PURE__*/_jsxDEV(TableCell, {\n      align: \"center\",\n      component: \"th\",\n      children: \"Total\"\n    }, 1000, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(TableRow, {\n      children: components\n    }, \"header\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  };\n\n  const styles = {\n    root: {\n      background: \"black\"\n    },\n    input: {\n      color: \"white\"\n    }\n  };\n\n  const renderPropositionsBudget = (nCycle, numPompier) => {\n    let cycle = cycles.sort((a, b) => a.numCycle - b.numCycle)[nCycle - 1];\n    if (cycle == null && nCycle > cycles.length) cycle = lastCycle;\n    let sum = 0;\n\n    if (cycle != null) {\n      Object.keys(cycle).forEach((key, index) => {\n        if (key != \"numCycle\" && key !== \"numSeq\" && (numPompier !== index - 1 || nCycle < numCycle)) {\n          sum += cycle[key];\n        }\n      });\n    } // console.log(nCycle)\n\n\n    var components = [];\n    const maxValue = cycle != null && nCycle < numCycle ? Math.floor(sum / 100) : Math.floor((budget.sequence.total - budget.sequence.depense - sum) / 100); // console.log(nCycle,maxValue,cycle,sum)\n\n    for (let i = 0; i <= maxValue; i++) {\n      components.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: i * 100,\n        align: \"right\",\n        children: i * 100 + \"€\"\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this));\n    }\n\n    return components;\n  };\n\n  const renderSelectBudgetCycle = (nCycle, disabled, numPompier, value) => {\n    return /*#__PURE__*/_jsxDEV(FormControl, {\n      disabled: disabled,\n      variant: \"outlined\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        value: value,\n        onChange: value => handleChangeSelect(numPompier, value) // displayEmpty\n        ,\n        color: \"secondary\",\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          disabled: true,\n          align: \"center\",\n          children: [\"Budget \", numPompier]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), renderPropositionsBudget(nCycle, numPompier)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, numPompier, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderRowBudgetCycle = cycle => {\n    if (cycle.numCycle < currentCycle + 2) {\n      var comp = [];\n      var sum = 0;\n\n      if (cycle.numCycle % 2 == 1) {\n        comp.push( /*#__PURE__*/_jsxDEV(TableCell, {\n          scope: \"row\",\n          align: \"center\",\n          component: \"th\",\n          rowSpan: 2,\n          children: [\"S\\xE9quence n\\xB0\", cycle.numSeq]\n        }, 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this));\n      }\n\n      comp.push( /*#__PURE__*/_jsxDEV(TableCell, {\n        scope: \"row\",\n        align: \"center\",\n        component: \"th\",\n        children: [\"Cycle n\\xB0\", cycle.numCycle]\n      }, 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this));\n      Object.keys(cycle).forEach((key, index) => {\n        if (key != \"numCycle\" && key != \"numSeq\") {\n          comp.push( /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: renderSelectBudgetCycle(cycle[\"numCycle\"], numCycle != cycle[\"numCycle\"], index - 1, cycle[key])\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this));\n          sum += cycle[key];\n        }\n      });\n      comp.push( /*#__PURE__*/_jsxDEV(TableCell, {\n        scope: \"row\",\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          variant: \"outlined\",\n          disabled: true,\n          value: sum + \" €\",\n          inputProps: {\n            style: {\n              color: numCycle == cycle[\"numCycle\"] ? sum > budget.sequence.total - budget.sequence.depense ? \"red\" : \"green\" : null,\n              fontWeight: numCycle == cycle[\"numCycle\"] ? \"bold\" : null,\n              fontStyle: numCycle != cycle[\"numCycle\"] ? \"italic\" : null,\n              textAlign: \"center\",\n              backgroundColor: \"#f1f1f1\",\n              borderRadius: 5,\n              minWidth: 70\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)\n      }, 1000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this));\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        hover: true,\n        ref: cycle.numCycle >= currentCycle ? lastRow : null,\n        children: comp\n      }, cycle.numSeq + \" : \" + cycle.numCycle, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  };\n\n  const renderBudgetsCycles = () => {\n    if (cycles.length + 1 !== lastCycle.numCycle) initLastCycle();\n    const cyclesSorted = cycles.sort((a, b) => a.numCycle - b.numCycle);\n    var components = [];\n    cyclesSorted.forEach(cycle => {\n      components.push(renderRowBudgetCycle(cycle));\n    });\n    components.push(renderRowBudgetCycle(lastCycle));\n    return components;\n  };\n\n  const handleChangeSelect = (numPompier, event) => {\n    var c = { ...lastCycle\n    };\n    c[\"pomp\" + numPompier] = event.target.value;\n    setLastCycle(c);\n    handleBudgetChange(type, c);\n    console.log(numPompier, c);\n  };\n\n  const initLastCycle = () => {\n    setLastCycle({\n      numSeq: 1,\n      numCycle: cycles.length + 1,\n      pomp1: 0,\n      pomp2: 0,\n      pomp3: 0,\n      pomp4: 0,\n      pomp5: 0,\n      pomp6: 0\n    });\n  };\n\n  useEffect(() => {\n    // console.log(lastCycle)\n    setNumCycle(cycles.length + 1);\n    lastRow.current.scrollIntoView();\n  }, [lastCycle]);\n\n  const renderPropositionsStock = (nCycle, numPompier) => {\n    let cycle = cycles.sort((a, b) => a.numCycle - b.numCycle)[nCycle - 1];\n    if (cycle == null && nCycle > cycles.length) cycle = lastCycle;\n    let sum = 0;\n\n    if (cycle != null) {\n      Object.keys(cycle).forEach((key, index) => {\n        if (key != \"numCycle\" && key !== \"numSeq\" && key !== \"type\" && (numPompier !== index - 2 || nCycle < numCycle)) {\n          sum += cycle[key];\n        }\n      });\n    } // console.log(nCycle)\n\n\n    var components = []; // const maxValue =cycle!=null && nCycle<numCycle ?  Math.floor((sum ) / 100) : Math.floor((budget.sequence.total - budget.sequence.depense - sum) / 100)\n\n    const maxValue = 50;\n\n    for (let i = 0; i <= maxValue; i++) {\n      components.push( /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: i,\n        align: \"right\",\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this));\n    }\n\n    return components;\n  };\n\n  const renderSelectStockCycle = (nCycle, disabled, numPompier, value) => {\n    return /*#__PURE__*/_jsxDEV(FormControl, {\n      disabled: disabled,\n      variant: \"outlined\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        value: value,\n        onChange: value => handleChangeSelect(numPompier, value) // displayEmpty\n        ,\n        color: \"secondary\",\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"\",\n          disabled: true,\n          align: \"center\",\n          children: [\"Stock \", numPompier]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), renderPropositionsStock(nCycle, numPompier)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)\n    }, numPompier, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderRowStocksCycle = (cycle, key, data) => {\n    console.log(cycle, key, data);\n\n    if (cycle.numCycle < currentCycle + 2) {\n      var comp = [];\n      var sum = 0;\n      console.log(key, data); // if(cycle.numCycle%2==1){\n\n      comp.push( /*#__PURE__*/_jsxDEV(TableCell, {\n        scope: \"row\",\n        align: \"center\",\n        component: \"th\",\n        rowSpan: 1,\n        children: [\"S\\xE9quence n\\xB0\", cycle.numSeq]\n      }, 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }, this)); // }\n\n      comp.push( /*#__PURE__*/_jsxDEV(TableCell, {\n        scope: \"row\",\n        align: \"center\",\n        component: \"th\",\n        children: [\"Cycle n\\xB0\", cycle.numCycle]\n      }, 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this));\n      comp.push( /*#__PURE__*/_jsxDEV(TableCell, {\n        scope: \"row\",\n        align: \"center\",\n        component: \"th\",\n        children: key\n      }, 2, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this));\n\n      if (data !== null && data !== undefined) {\n        Object.keys(data).forEach((key, index) => {\n          if (key != \"numCycle\" && key != \"numSeq\" && key !== \"type\") {\n            comp.push( /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: renderSelectStockCycle(cycle[\"numCycle\"], numCycle != cycle[\"numCycle\"], index - 1, data[key])\n            }, index + 3, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this));\n            sum += cycle[key];\n          }\n        });\n      }\n\n      comp.push( /*#__PURE__*/_jsxDEV(TableCell, {\n        scope: \"row\",\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          variant: \"outlined\",\n          disabled: true,\n          value: sum,\n          inputProps: {\n            style: {\n              color: numCycle == cycle[\"numCycle\"] ? sum > budget.sequence.total - budget.sequence.depense ? \"red\" : \"green\" : null,\n              fontWeight: numCycle == cycle[\"numCycle\"] ? \"bold\" : null,\n              fontStyle: numCycle != cycle[\"numCycle\"] ? \"italic\" : null,\n              textAlign: \"center\",\n              backgroundColor: \"#f1f1f1\",\n              borderRadius: 5,\n              minWidth: 70\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this)\n      }, 1000, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this));\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        hover: true,\n        ref: cycle.numCycle >= currentCycle ? lastRow : null,\n        children: comp\n      }, cycle.numSeq + \" : \" + cycle.numCycle + \" : \" + key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this);\n    } else {\n      return null;\n    }\n  };\n\n  const renderStocksCycle = () => {\n    if (cycles.length + 1 !== lastCycle.numCycle) initLastCycle();\n    const cyclesSorted = cycles.sort((a, b) => a.numCycle - b.numCycle);\n    console.log(cycles);\n    var components = [];\n    cyclesSorted.forEach(cycle => {\n      Object.keys(cycle).forEach(key => {\n        if (key !== \"numSeq\" && key !== \"numCycle\") {\n          components.push(renderRowStocksCycle(cycle, key, cycle[key]));\n        }\n      });\n    });\n    components.push(renderRowStocksCycle(lastCycle));\n    return components;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      className: \"tableau\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: renderHeaders()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [type == \"interventions\" ? renderBudgetsCycles() : null, type == \"equipements\" ? renderStocksCycle() : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InterInterventions, \"pcwjXR8vqermX2RfdqJXRu6n0M0=\");\n\n_c = InterInterventions;\nexport default InterInterventions;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterInterventions\");","map":{"version":3,"sources":["C:/Users/Hugo Dufrêne/decitude/client/src/components/interfaceJoueur/InterInterventions.js"],"names":["React","useEffect","useState","useRef","Grid","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","InputLabel","MenuItem","FormHelperText","FormControl","Select","TextField","InterInterventions","budget","cycles","handleBudgetChange","type","currentCycle","budgetSim","lastRow","nbPompiers","numCycle","setNumCycle","lastCycle","setLastCycle","renderHeaders","components","push","i","styles","root","background","input","color","renderPropositionsBudget","nCycle","numPompier","cycle","sort","a","b","length","sum","Object","keys","forEach","key","index","maxValue","Math","floor","sequence","total","depense","renderSelectBudgetCycle","disabled","value","handleChangeSelect","renderRowBudgetCycle","comp","numSeq","style","fontWeight","fontStyle","textAlign","backgroundColor","borderRadius","minWidth","renderBudgetsCycles","initLastCycle","cyclesSorted","event","c","target","console","log","pomp1","pomp2","pomp3","pomp4","pomp5","pomp6","current","scrollIntoView","renderPropositionsStock","renderSelectStockCycle","renderRowStocksCycle","data","undefined","renderStocksCycle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport '../../styles/Interfaces.css';\r\n\r\n\r\nconst InterInterventions = ({\r\n    budget,\r\n    cycles,\r\n    handleBudgetChange,\r\n    type,\r\n    currentCycle,\r\n    budgetSim\r\n\r\n}) => {\r\n    const lastRow = useRef(null)\r\n\r\n    const nbPompiers = 6\r\n\r\n    const [numCycle, setNumCycle] = useState(1)\r\n    const [lastCycle, setLastCycle] = useState(budgetSim)\r\n\r\n\r\n\r\n    const renderHeaders = () => {\r\n        var components = []\r\n        components.push(\r\n            <TableCell key={0} align=\"center\" component=\"th\">Séquence</TableCell>\r\n        )\r\n        components.push(\r\n            <TableCell key={1} align=\"center\" component=\"th\">Cycle</TableCell>\r\n        )\r\n        if(type==\"equipements\"){\r\n            components.push(\r\n                <TableCell key={2} align=\"center\" component=\"th\">Type</TableCell>\r\n            )\r\n        }\r\n        \r\n        for (let i = 1; i <= nbPompiers; i++) {\r\n            components.push(\r\n                <TableCell key={i+\" : \"+type==\"equipements\" ? 2 : 1} align=\"center\" component=\"th\">Pompier {i}</TableCell>\r\n            )\r\n        }\r\n        components.push(\r\n            <TableCell key={1000} align=\"center\" component=\"th\">Total</TableCell>\r\n        )\r\n        return ( \r\n            <TableRow key={\"header\"}>\r\n                {components}\r\n            </TableRow>\r\n        )\r\n    }\r\n\r\n\r\n    const styles = {\r\n        root: {\r\n            background: \"black\"\r\n        },\r\n        input: {\r\n            color: \"white\"\r\n        }\r\n    };\r\n\r\n\r\n    const renderPropositionsBudget = (nCycle, numPompier) => {\r\n        \r\n        let cycle = cycles.sort((a, b) => a.numCycle - b.numCycle)[nCycle - 1]\r\n        if(cycle==null && nCycle>cycles.length) cycle=lastCycle\r\n        let sum = 0\r\n        if(cycle!=null){\r\n            Object.keys(cycle).forEach((key, index) => {\r\n                if (key != \"numCycle\" && key!==\"numSeq\" && (numPompier !== index-1 || nCycle<numCycle) ) {\r\n                    sum += cycle[key]\r\n                }\r\n            })\r\n        }\r\n        // console.log(nCycle)\r\n       \r\n        var components = []\r\n        const maxValue =cycle!=null && nCycle<numCycle ?  Math.floor((sum ) / 100) : Math.floor((budget.sequence.total - budget.sequence.depense - sum) / 100)\r\n        \r\n        // console.log(nCycle,maxValue,cycle,sum)\r\n\r\n        for (let i = 0; i <=maxValue; i++) {\r\n            components.push(\r\n                <MenuItem key={i} value={i * 100} align=\"right\" >{i * 100 + \"€\"}</MenuItem>\r\n            )\r\n        }\r\n        return components\r\n    }\r\n\r\n    const renderSelectBudgetCycle = (nCycle, disabled, numPompier, value) => {\r\n        return (\r\n            <FormControl disabled={disabled} variant=\"outlined\" key={numPompier}>\r\n                <Select\r\n                    value={value}\r\n                    onChange={(value) => handleChangeSelect(numPompier, value)}\r\n                    // displayEmpty\r\n                    color=\"secondary\"\r\n                >\r\n                    <MenuItem value=\"\" disabled align=\"center\">\r\n                        Budget {numPompier}\r\n                    </MenuItem>\r\n\r\n                    {renderPropositionsBudget(nCycle, numPompier)}\r\n\r\n                </Select >\r\n            </FormControl>\r\n        )\r\n    }\r\n\r\n    const renderRowBudgetCycle = (cycle) => {\r\n        if(cycle.numCycle<currentCycle+2){\r\n            var comp = []\r\n            var sum = 0\r\n            if(cycle.numCycle%2==1){\r\n                comp.push(\r\n                    <TableCell key={0} scope=\"row\" align=\"center\" component=\"th\" rowSpan={2}>\r\n                        Séquence n°{cycle.numSeq}\r\n                    </TableCell>\r\n                )\r\n            }\r\n            \r\n            comp.push(\r\n                <TableCell key={1} scope=\"row\" align=\"center\" component=\"th\" >\r\n                    Cycle n°{cycle.numCycle}\r\n                </TableCell>\r\n            )\r\n    \r\n            Object.keys(cycle).forEach((key, index) => {\r\n                if (key != \"numCycle\" && key!=\"numSeq\") {\r\n                    comp.push(\r\n                        <TableCell key={index} align=\"center\">{renderSelectBudgetCycle(cycle[\"numCycle\"], numCycle != cycle[\"numCycle\"], index-1, cycle[key])}</TableCell>\r\n                    )\r\n                    sum += cycle[key]\r\n                }\r\n            })\r\n            comp.push(\r\n                <TableCell scope=\"row\" align=\"center\" key={1000} >\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        variant=\"outlined\"\r\n                        disabled\r\n                        value={sum + \" €\"}\r\n                        inputProps={{\r\n                            style: {\r\n                                color: numCycle == cycle[\"numCycle\"] ? sum > budget.sequence.total - budget.sequence.depense ? \"red\" : \"green\" : null,\r\n                                fontWeight: numCycle == cycle[\"numCycle\"] ? \"bold\" : null,\r\n                                fontStyle: numCycle != cycle[\"numCycle\"] ? \"italic\" : null,\r\n                                textAlign: \"center\",\r\n                                backgroundColor: \"#f1f1f1\",\r\n                                borderRadius: 5,\r\n                                minWidth: 70\r\n    \r\n                            },\r\n                        }}\r\n                    />\r\n    \r\n    \r\n                </TableCell>\r\n            )\r\n            return (\r\n                <TableRow hover key={cycle.numSeq+\" : \"+cycle.numCycle} ref={cycle.numCycle>=currentCycle ? lastRow : null}>\r\n                    {comp}\r\n                </TableRow>\r\n            )\r\n\r\n        }else{\r\n            return null\r\n        }\r\n    }\r\n    const renderBudgetsCycles = () => {\r\n        if(cycles.length+1!==lastCycle.numCycle) initLastCycle()\r\n        const cyclesSorted = cycles.sort((a, b) => a.numCycle - b.numCycle)\r\n        var components = []\r\n        cyclesSorted.forEach((cycle) => {\r\n\r\n            components.push(\r\n                renderRowBudgetCycle(cycle)\r\n            )\r\n\r\n        })\r\n        components.push(renderRowBudgetCycle(lastCycle))\r\n        return (\r\n            components\r\n        )\r\n    }\r\n\r\n    const handleChangeSelect = (numPompier, event) => {\r\n        var c = {...lastCycle}\r\n        c[\"pomp\" + numPompier] = event.target.value\r\n        setLastCycle(c)\r\n        handleBudgetChange(type,c)\r\n        console.log(numPompier,c)\r\n    }\r\n\r\n    const initLastCycle=()=>{\r\n        setLastCycle(\r\n            {\r\n                numSeq:1,\r\n                numCycle: cycles.length+1,\r\n                pomp1: 0,\r\n                pomp2: 0,\r\n                pomp3: 0,\r\n                pomp4: 0,\r\n                pomp5: 0,\r\n                pomp6: 0,\r\n            }\r\n        )\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        // console.log(lastCycle)\r\n        setNumCycle(cycles.length+1)\r\n        lastRow.current.scrollIntoView()\r\n    }, [lastCycle])\r\n\r\n    const renderPropositionsStock= (nCycle, numPompier) => {\r\n        let cycle = cycles.sort((a, b) => a.numCycle - b.numCycle)[nCycle - 1]\r\n        if(cycle==null && nCycle>cycles.length) cycle=lastCycle\r\n        let sum = 0\r\n        if(cycle!=null){\r\n            Object.keys(cycle).forEach((key, index) => {\r\n                if (key != \"numCycle\" && key!==\"numSeq\" && key!==\"type\" && (numPompier !== index-2 || nCycle<numCycle) ) {\r\n                    sum += cycle[key]\r\n                }\r\n            })\r\n        }\r\n        // console.log(nCycle)\r\n       \r\n        var components = []\r\n        // const maxValue =cycle!=null && nCycle<numCycle ?  Math.floor((sum ) / 100) : Math.floor((budget.sequence.total - budget.sequence.depense - sum) / 100)\r\n        \r\n        const maxValue = 50\r\n\r\n        for (let i = 0; i <=maxValue; i++) {\r\n            components.push(\r\n                <MenuItem key={i} value={i } align=\"right\" >{i}</MenuItem>\r\n            )\r\n        }\r\n        return components\r\n    }\r\n\r\n    const renderSelectStockCycle = (nCycle, disabled, numPompier, value) => {\r\n        return (\r\n            <FormControl disabled={disabled} variant=\"outlined\" key={numPompier}>\r\n                <Select\r\n                    value={value}\r\n                    onChange={(value) => handleChangeSelect(numPompier, value)}\r\n                    // displayEmpty\r\n                    color=\"secondary\"\r\n                >\r\n                    <MenuItem value=\"\" disabled align=\"center\">\r\n                        Stock {numPompier}\r\n                    </MenuItem>\r\n\r\n                    {renderPropositionsStock(nCycle, numPompier)}\r\n\r\n                </Select >\r\n            </FormControl>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    const renderRowStocksCycle = (cycle,key,data) => {\r\n        console.log(cycle,key,data)\r\n        if(cycle.numCycle<currentCycle+2){\r\n            var comp = []\r\n            var sum = 0\r\n\r\n            console.log(key,data)\r\n            // if(cycle.numCycle%2==1){\r\n                comp.push(\r\n                    <TableCell key={0} scope=\"row\" align=\"center\" component=\"th\" rowSpan={1}>\r\n                        Séquence n°{cycle.numSeq}\r\n                    </TableCell>\r\n                )\r\n            // }\r\n            comp.push(\r\n                <TableCell key={1} scope=\"row\" align=\"center\" component=\"th\" >\r\n                    Cycle n°{cycle.numCycle}\r\n                </TableCell>\r\n            )\r\n            comp.push(\r\n                <TableCell key={2} scope=\"row\" align=\"center\" component=\"th\" >\r\n                   {key}\r\n                </TableCell>\r\n            )\r\n            if(data!==null && data!==undefined ){\r\n                Object.keys(data).forEach((key, index) => {\r\n                    if (key != \"numCycle\" && key!=\"numSeq\" && key!==\"type\") {\r\n                        comp.push(\r\n                            <TableCell key={index+3} align=\"center\">{renderSelectStockCycle(cycle[\"numCycle\"], numCycle != cycle[\"numCycle\"], index-1, data[key])}</TableCell>\r\n                        )\r\n                        sum += cycle[key]\r\n                    }\r\n                })\r\n            }\r\n           \r\n            comp.push(\r\n                <TableCell scope=\"row\" align=\"center\" key={1000} >\r\n                    <TextField\r\n                        id=\"outlined-basic\"\r\n                        variant=\"outlined\"\r\n                        disabled\r\n                        value={sum}\r\n                        inputProps={{\r\n                            style: {\r\n                                color: numCycle == cycle[\"numCycle\"] ? sum > budget.sequence.total - budget.sequence.depense ? \"red\" : \"green\" : null,\r\n                                fontWeight: numCycle == cycle[\"numCycle\"] ? \"bold\" : null,\r\n                                fontStyle: numCycle != cycle[\"numCycle\"] ? \"italic\" : null,\r\n                                textAlign: \"center\",\r\n                                backgroundColor: \"#f1f1f1\",\r\n                                borderRadius: 5,\r\n                                minWidth: 70\r\n    \r\n                            },\r\n                        }}\r\n                    />\r\n                </TableCell>\r\n            )\r\n\r\n            return (\r\n                <TableRow hover key={cycle.numSeq+\" : \"+cycle.numCycle+\" : \"+key} ref={cycle.numCycle>=currentCycle ? lastRow : null}>\r\n                    {comp}\r\n                </TableRow>\r\n            )\r\n\r\n        }else{\r\n            return null\r\n        }\r\n    }\r\n\r\n    const renderStocksCycle = () => {\r\n        if(cycles.length+1!==lastCycle.numCycle) initLastCycle()\r\n        const cyclesSorted = cycles.sort((a, b) => a.numCycle - b.numCycle)\r\n        console.log(cycles)\r\n        var components = []\r\n        cyclesSorted.forEach((cycle) => {\r\n            Object.keys(cycle).forEach(key => {\r\n                if(key!==\"numSeq\" && key!==\"numCycle\"){\r\n                    components.push(\r\n                        renderRowStocksCycle(cycle,key,cycle[key])\r\n                    )\r\n                }\r\n            });\r\n\r\n        })\r\n        components.push(renderRowStocksCycle(lastCycle))\r\n        return (\r\n            components\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <TableContainer component={Paper} className=\"tableau\">\r\n                <Table stickyHeader aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        {renderHeaders()}\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                        type==\"interventions\" ? \r\n                            renderBudgetsCycles()\r\n\r\n                        : null \r\n                        }\r\n                        {\r\n                        type==\"equipements\" ? \r\n                            renderStocksCycle()\r\n\r\n                        : null \r\n                        }\r\n\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InterInterventions;"]},"metadata":{},"sourceType":"module"}