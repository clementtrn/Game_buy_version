{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\d\\xE9citude\\\\client\\\\src\\\\components\\\\pieces\\\\Piece.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CaseGrille from \"../CaseGrille\";\nimport MurGrille from \"../MurGrille\";\nimport Grid from '@material-ui/core/Grid';\nimport '../Grille.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Piece = ({\n  carte,\n  position,\n  nbLignes,\n  nbColonnes,\n  maxColonnesPiece,\n  maxLignesPiece\n}) => {\n  const renderRow = i => {\n    var row = [];\n\n    for (let j = 0; j < nbColonnes; j++) {\n      row.push( /*#__PURE__*/_jsxDEV(CaseGrille, {\n        murs: [0, 1, 2, 3],\n        type: carte[i + position[1]][j + position[0]] // width={1/nbColonnes*100}\n        // height={1/nbLignes*100}\n\n      }, i + \",\" + j, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this));\n    }\n\n    return row;\n  };\n\n  const renderGrille = () => {\n    var grille = [];\n\n    for (let i = 0; i < nbLignes; i++) {\n      grille.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-piece\",\n        children: renderRow(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this));\n    }\n\n    return grille;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"piece\",\n    style: {\n      width: nbColonnes / maxColonnesPiece * 80 + \"%\"\n    },\n    children: renderGrille()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Piece;\nexport default Piece;\n\nvar _c;\n\n$RefreshReg$(_c, \"Piece\");","map":{"version":3,"sources":["C:/Users/hugod/dÃ©citude/client/src/components/pieces/Piece.js"],"names":["React","makeStyles","CaseGrille","MurGrille","Grid","Piece","carte","position","nbLignes","nbColonnes","maxColonnesPiece","maxLignesPiece","renderRow","i","row","j","push","renderGrille","grille","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAO,eAAP;;;AAKA,MAAMC,KAAK,GAAG,CAAC;AACXC,EAAAA,KADW;AAEXC,EAAAA,QAFW;AAGXC,EAAAA,QAHW;AAIXC,EAAAA,UAJW;AAKXC,EAAAA,gBALW;AAMXC,EAAAA;AANW,CAAD,KAQR;AAEF,QAAMC,SAAS,GAAEC,CAAD,IAAK;AACjB,QAAIC,GAAG,GAAC,EAAR;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,UAAd,EAAyBM,CAAC,EAA1B,EAA6B;AACzBD,MAAAA,GAAG,CAACE,IAAJ,eACI,QAAC,UAAD;AAEI,QAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAFV;AAGI,QAAA,IAAI,EAAEV,KAAK,CAACO,CAAC,GAACN,QAAQ,CAAC,CAAD,CAAX,CAAL,CAAqBQ,CAAC,GAACR,QAAQ,CAAC,CAAD,CAA/B,CAHV,CAII;AACA;;AALJ,SACSM,CAAC,GAAC,GAAF,GAAME,CADf;AAAA;AAAA;AAAA;AAAA,cADJ;AAWH;;AACD,WAAOD,GAAP;AACH,GAhBD;;AAmBA,QAAMG,YAAY,GAAC,MAAI;AACnB,QAAIC,MAAM,GAAC,EAAX;;AACA,SAAK,IAAIL,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACL,QAAf,EAAwBK,CAAC,EAAzB,EAA4B;AACxBK,MAAAA,MAAM,CAACF,IAAP,eACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACKJ,SAAS,CAACC,CAAD;AADd;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;;AACD,WAAOK,MAAP;AACH,GAXD;;AAeA,sBAEA;AACI,IAAA,SAAS,EAAC,OADd;AAEI,IAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAACV,UAAU,GAACC,gBAAX,GAA4B,EAA5B,GAA+B;AADlC,KAFX;AAAA,cAOIO,YAAY;AAPhB;AAAA;AAAA;AAAA;AAAA,UAFA;AAcH,CA1DD;;KAAMZ,K;AA4DN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CaseGrille from \"../CaseGrille\"\r\nimport MurGrille from \"../MurGrille\"\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport '../Grille.css';\r\n\r\n\r\n\r\n\r\nconst Piece = ({\r\n    carte,\r\n    position,\r\n    nbLignes,\r\n    nbColonnes,\r\n    maxColonnesPiece,\r\n    maxLignesPiece\r\n\r\n}) => {\r\n\r\n    const renderRow=(i)=>{\r\n        var row=[]\r\n        for(let j=0;j<nbColonnes;j++){\r\n            row.push( \r\n                <CaseGrille \r\n                    key={i+\",\"+j}\r\n                    murs={[0,1,2,3]}\r\n                    type={carte[i+position[1]][j+position[0]]}\r\n                    // width={1/nbColonnes*100}\r\n                    // height={1/nbLignes*100}\r\n                    \r\n                />\r\n                   \r\n            )\r\n        }\r\n        return row\r\n    }\r\n\r\n\r\n    const renderGrille=()=>{\r\n        var grille=[]\r\n        for (let i=0;i<nbLignes;i++){\r\n            grille.push(\r\n                <div className=\"row-piece\">\r\n                    {renderRow(i)}\r\n                </div>\r\n            )  \r\n            \r\n        }\r\n        return grille\r\n    }\r\n\r\n\r\n\r\n    return (  \r\n\r\n    <div\r\n        className=\"piece\"  \r\n        style={{\r\n            width:nbColonnes/maxColonnesPiece*80+\"%\"\r\n        }} \r\n       \r\n    >\r\n       {renderGrille()}\r\n    </div>\r\n        \r\n        \r\n    );\r\n}\r\n \r\nexport default Piece;"]},"metadata":{},"sourceType":"module"}