{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\decitude\\\\client\\\\src\\\\components\\\\Grille.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../styles/Grille.css';\nimport Piece from \"./pieces/Piece\";\nimport { useScrollTrigger } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Grille = ({\n  nbColonnesGrille,\n  nbLignesGrille,\n  carte,\n  position,\n  mursH,\n  mursV\n}) => {\n  _s();\n\n  const [maxLignesPiece, setMaxLignesPiece] = useState(0);\n  const [maxColonnesPiece, setMaxColonnesPiece] = useState(0);\n\n  const associate = (minimums, maximums) => {\n    var anchors = [];\n    var maxUsed = [];\n    var maxCPiece = 0;\n    var maxLPiece = 0; // maximums.sort((a,b)=>b[1]-a[1]).sort((a,b)=>a[0]-b[0])\n\n    var firstAssociation = [];\n    console.log(minimums.length);\n    minimums.forEach((min, index) => {\n      var Max = [nbLignesGrille, nbColonnesGrille]; // var possiblesMax=[]\n\n      maximums.forEach(max => {\n        if (max[0] >= min[0] && max[1] >= min[1] && max[0] <= Max[0] && max[1] <= Max[1] && (min[0] < max[0] || min[1] < max[1]) && !maxUsed.includes(max)) {\n          Max = max;\n        } // if((max[0]>=min[0] && max[1]>=min[1]) && (min[0]<max[0] || min[1]<max[1])){\n        //     possiblesMax.push( max)\n        // }\n\n      }); // console.log(\"min : \",index,min,possiblesMax)\n\n      maxUsed.push(Max);\n      anchors.push([min, Max]);\n\n      if (maxCPiece < Max[1] - min[1]) {\n        maxCPiece = Max[1] - min[1] + 1;\n      }\n\n      if (maxLPiece < Max[0] - min[0]) {\n        maxLPiece = Max[0] - min[0] + 1;\n      }\n    });\n\n    if (maxColonnesPiece == 0) {\n      setMaxColonnesPiece(maxCPiece);\n    }\n\n    if (maxLignesPiece == 0) {\n      setMaxLignesPiece(maxLPiece);\n    }\n\n    console.log(\"Anchors : \", anchors);\n    return anchors;\n  };\n\n  useEffect(() => {\n    console.log(maxColonnesPiece, maxLignesPiece);\n  }, [maxColonnesPiece, maxLignesPiece]);\n\n  const getAnchors = () => {\n    var minimums = [];\n    var maximums = [];\n\n    for (let i = 0; i < mursV.length; i++) {\n      for (let j = 0; j < mursH[i].length; j++) {\n        if (mursV[i][j] > 0 && mursH[i][j] > 0) {\n          minimums.push([i, j]);\n        }\n\n        if (mursV[i][j + 1] > 0 && mursH[i + 1][j] > 0) {\n          maximums.push([i, j]);\n        }\n      }\n    }\n\n    return associate(minimums, maximums);\n  };\n\n  const getAnchor = (anchors, pos) => {\n    var Min = [-1, -1];\n    var Index = -1;\n    anchors.forEach((a, index) => {\n      const min = a[0];\n      const max = a[1];\n\n      if (pos[0] >= min[0] && pos[1] >= min[1] && pos[0] <= max[0] && pos[1] <= max[1]) {\n        Min = min;\n        Index = index;\n      }\n    });\n    return [Min, Index];\n  };\n\n  const renderPieces = () => {\n    var components = [];\n    const anchors = getAnchors();\n    const [anchor, idAnchor] = getAnchor(anchors, position);\n    let nbL;\n    let nbC;\n\n    if (anchor[0] < 0 && anchor[1] < 0) {\n      nbL = nbLignesGrille;\n      nbC = nbColonnesGrille;\n    } else {\n      const area = anchors[idAnchor];\n      nbL = area[1][0] - area[0][0] + 1;\n      nbC = area[1][1] - area[0][1] + 1;\n    }\n\n    components.push( /*#__PURE__*/_jsxDEV(Piece, {\n      idPiece: idAnchor,\n      mursH: mursH,\n      mursV: mursV,\n      carte: carte,\n      position: position,\n      nbLignesPiece: nbL,\n      nbColonnesPiece: nbC,\n      nbLignesGrille: nbL == nbLignesGrille ? nbL : maxLignesPiece,\n      nbColonnesGrille: nbC == nbColonnesGrille ? nbC : maxColonnesPiece,\n      anchor: anchor[0] < 0 && anchor[1] < 0 ? [0, 0] : anchor\n    }, idAnchor, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this));\n    return components;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"piece-container\",\n      children: renderPieces()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AHAH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Grille, \"LD/8RZ+8AzLdjOL0HIIfcJ5QDFw=\");\n\n_c = Grille;\nexport default Grille;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grille\");","map":{"version":3,"sources":["C:/Users/hugod/decitude/client/src/components/Grille.js"],"names":["React","useEffect","useState","makeStyles","Piece","useScrollTrigger","Grille","nbColonnesGrille","nbLignesGrille","carte","position","mursH","mursV","maxLignesPiece","setMaxLignesPiece","maxColonnesPiece","setMaxColonnesPiece","associate","minimums","maximums","anchors","maxUsed","maxCPiece","maxLPiece","firstAssociation","console","log","length","forEach","min","index","Max","max","includes","push","getAnchors","i","j","getAnchor","pos","Min","Index","a","renderPieces","components","anchor","idAnchor","nbL","nbC","area"],"mappings":"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","sourcesContent":["import React ,{useEffect, useState}from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport '../styles/Grille.css';\r\n\r\nimport Piece from \"./pieces/Piece\"\r\nimport { useScrollTrigger } from '@material-ui/core';\r\n\r\n\r\n\r\nconst Grille = ({\r\n    nbColonnesGrille,\r\n    nbLignesGrille,\r\n    carte,\r\n    position,\r\n    mursH,\r\n    mursV\r\n}) => {\r\n\r\n    const [maxLignesPiece,setMaxLignesPiece]=useState(0)\r\n    const [maxColonnesPiece,setMaxColonnesPiece]=useState(0)\r\n\r\n    const associate=(minimums,maximums)=>{\r\n        var anchors=[]\r\n        var maxUsed=[]\r\n        var maxCPiece =0\r\n        var maxLPiece =0\r\n\r\n        // maximums.sort((a,b)=>b[1]-a[1]).sort((a,b)=>a[0]-b[0])\r\n        var firstAssociation=[]\r\n        console.log(minimums.length)\r\n        minimums.forEach((min,index) => {\r\n            var Max =[nbLignesGrille,nbColonnesGrille]\r\n            // var possiblesMax=[]\r\n            maximums.forEach(max => {\r\n                if((max[0]>=min[0] && max[1]>=min[1]) && (max[0]<=Max[0] &&  max[1]<=Max[1]) && (min[0]<max[0] || min[1]<max[1]) && !maxUsed.includes(max)){\r\n                    Max = max\r\n                }\r\n                // if((max[0]>=min[0] && max[1]>=min[1]) && (min[0]<max[0] || min[1]<max[1])){\r\n                //     possiblesMax.push( max)\r\n                // }\r\n            });\r\n            // console.log(\"min : \",index,min,possiblesMax)\r\n            maxUsed.push(Max)\r\n            anchors.push([min,Max])\r\n\r\n            if(maxCPiece<Max[1]-min[1]){\r\n                maxCPiece=Max[1]-min[1]+1\r\n            }\r\n            if(maxLPiece<Max[0]-min[0]){\r\n                maxLPiece=Max[0]-min[0]+1\r\n            }\r\n        })\r\n\r\n\r\n        if(maxColonnesPiece==0){\r\n            setMaxColonnesPiece(maxCPiece)\r\n        }\r\n        if(maxLignesPiece==0){\r\n            setMaxLignesPiece(maxLPiece)\r\n        }\r\n        console.log(\"Anchors : \",anchors)\r\n\r\n        return(anchors)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log(maxColonnesPiece,maxLignesPiece)\r\n    },[maxColonnesPiece,maxLignesPiece])\r\n\r\n    const getAnchors=()=>{   \r\n        var minimums=[]\r\n        var maximums=[]\r\n        for(let i=0;i<mursV.length;i++){\r\n            for(let j=0;j<mursH[i].length;j++){\r\n                if(mursV[i][j]>0 && mursH[i][j]>0){\r\n                    minimums.push([i,j])\r\n                }   \r\n                if(mursV[i][j+1]>0 && mursH[i+1][j]>0){\r\n                    maximums.push([i,j])\r\n                }\r\n            }\r\n        }\r\n        return associate(minimums,maximums)\r\n    }\r\n\r\n    const getAnchor=(anchors,pos)=>{\r\n        \r\n        var Min=[-1,-1]\r\n        var Index=-1\r\n        anchors.forEach((a,index) => {\r\n            const min = a[0]\r\n            const max = a[1]\r\n            if(pos[0]>=min[0] && pos[1]>=min[1] && pos[0]<=max[0] && pos[1]<=max[1]){\r\n                Min= min\r\n                Index=index\r\n            }\r\n        });\r\n        return [Min,Index]\r\n    }\r\n\r\n   \r\n\r\n\r\n    const renderPieces=()=>{\r\n        var components =[]\r\n        \r\n        const anchors = getAnchors()\r\n\r\n        const [anchor,idAnchor]=getAnchor(anchors,position) \r\n        let nbL\r\n        let nbC\r\n\r\n        if(anchor[0]< 0 && anchor[1]<0){\r\n            nbL = nbLignesGrille\r\n            nbC = nbColonnesGrille\r\n        }else{\r\n            const area=anchors[idAnchor]\r\n            nbL = area[1][0]-area[0][0]+1\r\n            nbC = area[1][1]-area[0][1]+1\r\n        }\r\n\r\n\r\n        components.push(\r\n            <Piece\r\n                key={idAnchor}\r\n                idPiece={idAnchor}\r\n                mursH={mursH}\r\n                mursV={mursV}\r\n                carte={carte}\r\n                position={position}\r\n                nbLignesPiece={nbL}\r\n                nbColonnesPiece={nbC}    \r\n                nbLignesGrille={nbL==nbLignesGrille ? nbL : maxLignesPiece}\r\n                nbColonnesGrille={nbC==nbColonnesGrille ? nbC : maxColonnesPiece}\r\n                anchor={anchor[0]< 0 && anchor[1]<0 ?  [0,0] : anchor }\r\n            />\r\n        )\r\n        return components\r\n    }\r\n    \r\n\r\n    return ( \r\n        <>\r\n        <div \r\n            className=\"piece-container\"\r\n        >   \r\n            {renderPieces()}\r\n        </div>\r\n        <h1>AHAH</h1>\r\n        </>\r\n    )\r\n}\r\n \r\nexport default Grille;"]},"metadata":{},"sourceType":"module"}