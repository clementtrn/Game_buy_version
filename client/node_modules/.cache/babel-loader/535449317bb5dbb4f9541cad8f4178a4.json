{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\d\\xE9citude\\\\client\\\\src\\\\components\\\\interfaceJoueur\\\\TactBandeauDroite.js\";\nimport React, { useState, useEffect } from 'react';\nimport CaseDonnee from './panels/CaseDonnee';\nimport \"../../styles/TactBandeauDroite.css\";\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ContentsAPI from \"../../API/ContentsAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TactBandeauDroite = ({\n  configuration\n}) => {\n  //     console.log(configuration)\n  //     const [textes, setTextes] = useState(null)\n  //     const [chrono,setChrono]=useState(null)\n  //     useEffect(() => {\n  //         if(tour==numeroPompier){\n  //         if (chrono > 0) {\n  //             var chronoTimer = setInterval(() => {\n  //             setChrono(chrono => chrono - 1)\n  //             }, 1000)\n  //         }\n  //         return () => {\n  //         clearInterval(chronoTimer)\n  //         }\n  //     }\n  //     }, [chrono])\n  //   useEffect(()=>{\n  //     if(chrono===null && configuration!==null){\n  //       setChrono(configuration.chronoTour.valeur)\n  //     }\n  //   })\n  //     useEffect(() => {\n  //         // console.log(\"use effect\")\n  //         const getTextes = async () => {\n  //             const textes = ContentsAPI.getTexts(\"jeuTactBandeauDroite\").then(\n  //                 (res) => { setTextes(res) }\n  //             )\n  //         }\n  //         if (textes == null) {\n  //             getTextes()\n  //         }\n  //     }, [textes])\n  //     const getText = (name) => {\n  //         if (textes == null) {\n  //             return name\n  //         } else {\n  //             try {\n  //                 return textes[\"label\" + name.charAt(0).toUpperCase() + name.slice(1)].contenu\n  //             } catch (error) {\n  //                 console.log(\"label\" + name.charAt(0).toUpperCase() + name.slice(1))\n  //                 return name\n  //             }\n  //         }\n  //     }\n  //     const renderStocks = () => {\n  //         return (\n  //             <div\n  //                 className=\"case-panel donnees-container\"\n  //                 style={{\n  //                     flex: 3\n  //                 }}\n  //             >\n  //                 <label\n  //                     className=\"label-title\"\n  //                 >\n  //                     {getText(\"stockEquipements\")}\n  //                 </label>\n  //                 <div className=\"sous-donnees-container\">\n  //                     <CaseDonnee\n  //                         key={0}\n  //                         name={\"nbExtFeu\"}\n  //                         value={stocks.Feu}\n  //                         primary={false}\n  //                         flexFactor={1}\n  //                         textes={textes}\n  //                     />\n  //                     <CaseDonnee\n  //                         key={1}\n  //                         name={\"nbExtFum\"}\n  //                         value={stocks.Fum}\n  //                         primary={false}\n  //                         flexFactor={1}\n  //                         textes={textes}\n  //                     />\n  //                 </div>\n  //                 <div className=\"sous-donnees-container\">\n  //                     <CaseDonnee\n  //                         key={2}\n  //                         name={\"nbExtFeuFum\"}\n  //                         value={stocks.FeuFum}\n  //                         primary={false}\n  //                         flexFactor={2}\n  //                         textes={textes}\n  //                     />\n  //                     <CaseDonnee\n  //                         key={3}\n  //                         name={\"nbMarqueurs\"}\n  //                         value={stocks.Marqueur}\n  //                         primary={false}\n  //                         flexFactor={2}\n  //                         textes={textes}\n  //                     />\n  //                 </div>\n  //             </div>\n  //         )\n  //     }\n  //     const renderResults = () => {\n  //         return (\n  //             <div\n  //                 className=\"case-panel donnees-container\"\n  //                 style={{\n  //                     flex: 2\n  //                 }}\n  //             >\n  //                 <label\n  //                     className=\"label-title\"\n  //                 >\n  //                     {getText(\"resultats\") + \" \" + numeroPompier}\n  //                 </label>\n  //                 <CaseDonnee\n  //                     key={4}\n  //                     name={getText(\"nbDecedes\")}\n  //                     value={resultats.Decedes}\n  //                     primary={false}\n  //                     flexFactor={0}\n  //                 />\n  //                 <CaseDonnee\n  //                     key={5}\n  //                     name={getText(\"nbSauves\")}\n  //                     value={resultats.Sauves}\n  //                     primary={false}\n  //                     flexFactor={0}\n  //                 />\n  //             </div>\n  //         )\n  //     }\n  //     const renderNumPompier = () => {\n  //         return (\n  //             <div\n  //                 className=\"case-panel\"\n  //                 style={{\n  //                     flex: 1\n  //                 }}\n  //             >\n  //                 <label\n  //                     className=\"label-title\"\n  //                 >\n  //                     {getText(\"numPompier\")}\n  //                 </label>\n  //                 <div className=\"donnees-container\">\n  //                     <label\n  //                         className=\"label-title label-num-pompier\"\n  //                     >\n  //                         {numeroPompier}\n  //                     </label>\n  //                     <BookmarkRoundedIcon\n  //                         className=\"icone-num-pompier\"\n  //                         fontSize=\"large\"\n  //                         stroke={\"white\"}\n  //                         strokeWidth={1}\n  //                     />\n  //                 </div>\n  //             </div>\n  //         )\n  //     }\n  //     const renderCircleTours = () => {\n  //         var type = 1, //circle type - 1 whole, 0.5 half, 0.25 quarter\n  //             radius = 20, //distance from center\n  //             start = -90, //shift start from 0\n  //             // $elements = $('li:not(:first-child)'),\n  //             numberOfElements = configuration.nbPompEquipe.valeur,\n  //             slice = 360 * type / numberOfElements;\n  //         const renderCircleItems = () => {\n  //             var items = []\n  //             const decalage = 1.2\n  //             // items.push(\n  //             //     <li\n  //             //         key={\"c\"}\n  //             //         style={{\n  //             //             'transform': 'translate(' + (-radius*decalage*2) + 'px,'+ (-radius*decalage) +'px)',\n  //             //             \"backgroundColor\": tour==-1 ? \"#BF0000\" : null\n  //             //         }}\n  //             //     >\n  //             //         {\"C\"}\n  //             //     </li>\n  //             // )\n  //             items.push(\n  //                 <li\n  //                     key={\"s\"}\n  //                     style={{\n  //                         'transform': 'translate(' + (radius*decalage) + 'px,'+ (-radius*decalage) +'px)',\n  //                         \"backgroundColor\": tour==0 ? \"#BF0000\" : null\n  //                     }}\n  //                 >\n  //                     {\"S\"}\n  //                 </li>\n  //             )\n  //             for (let i = 0; i < numberOfElements; i++) {\n  //                 const rotate = slice * i + start\n  //                 const rotateReverse = rotate * -1\n  //                 const decalageCircle=10\n  //                 items.push(\n  //                     <li\n  //                         key={i}\n  //                         style={{\n  //                             'transform': 'rotate(' + rotate + 'deg) translate(' + radius + 'px) rotate(' + rotateReverse + 'deg) translate(' + -radius / 2 + 'px) translateY('+decalageCircle+'px)',\n  //                             \"backgroundColor\": i + 1 == tour ? \"#BF0000\" : null\n  //                         }}\n  //                     >\n  //                         {i + 1}\n  //                     </li>\n  //                 )\n  //             }\n  //             return items\n  //         }\n  //         return (\n  //             <div\n  //                 className=\"case-panel\"\n  //                 style={{\n  //                     flex: 1\n  //                 }}\n  //             >\n  //                 <label\n  //                     className=\"label-title\"\n  //                 >\n  //                     {getText(\"tourParTour\")}\n  //                 </label>\n  //                 <ul >\n  //                     {renderCircleItems()}\n  //                 </ul>\n  //             </div>\n  //         )\n  //     }\n  //     const renderFeu = () => {\n  //         return (\n  //             <div\n  //                 className=\"case-panel\"\n  //                 style={{\n  //                     flex: 1\n  //                 }}\n  //             >\n  //                 <label\n  //                     className=\"label-title\"\n  //                 >\n  //                     {getText(\"play\")}\n  //                 </label>\n  //                 <div className=\"donnees-container\">\n  //                     <div className='feu'>\n  //                         <div style={{ backgroundColor: numeroPompier != tour || chrono < 30 ? chrono <= 30  ? \"#ff0000\" : \"#4dff4d\" : \"#9F9F9F\" }}></div>\n  //                         <div\n  //                             className={chrono <= 30 && chrono>0? \"clignotant\" : \"\"}\n  //                             style={{ backgroundColor: numeroPompier == tour ? chrono <= 30 ? chrono>0 ? \"#E26F00\" :  \"#ff0000\" : \"#4dff4d\" : \"#9F9F9F\" }}\n  //                         ></div>\n  //                     </div>\n  //                     <span className=\"case-value\" style={{\n  //                         marginTop: \"10%\",\n  //                         width: \"100%\",\n  //                         maxWidth: \"100%\"\n  //                     }} >\n  //                         {(Math.floor(chrono / 60)).toString().padStart(2, \"0\") + \" : \"}\n  //                         <span style={{ color: chrono <= 30 ? \"red\" : \"inherit\", marginLeft: 5 }}> {\" \" + (chrono % 60).toString().padStart(2, \"0\")} </span>\n  //                     </span>\n  //                 </div>\n  //             </div>\n  //         )\n  //     }\n  const renderDisconnect = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-panel-droite\",\n      style: {\n        flex: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\" // className={classes.button}\n        ,\n        startIcon: /*#__PURE__*/_jsxDEV(ExitToAppOutlinedIcon // className=\"icone-num-pompier\"\n        , {\n          fontSize: \"large\",\n          stroke: \"white\",\n          strokeWidth: 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }, this);\n  };\n\n  return configuration != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bandeau-droite-tact\",\n    children: renderDisconnect()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 13\n  }, this) : null;\n};\n\n_c = TactBandeauDroite;\nexport default TactBandeauDroite;\n\nvar _c;\n\n$RefreshReg$(_c, \"TactBandeauDroite\");","map":{"version":3,"sources":["C:/Users/hugod/décitude/client/src/components/interfaceJoueur/TactBandeauDroite.js"],"names":["React","useState","useEffect","CaseDonnee","ExitToAppOutlinedIcon","Typography","Grid","Button","ContentsAPI","TactBandeauDroite","configuration","renderDisconnect","flex"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAO,oCAAP;AACA,OAAOC,qBAAP,MAAkC,sCAAlC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AACvBC,EAAAA;AADuB,CAAD,KAEpgBAAgB,GAAG,MAAM;AAC3B,wBACI;AACI,MAAA,SAAS,EAAC,kBADd;AAEI,MAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE;AADH,OAFX;AAAA,6BAMK,QAAC,MAAD;AACD,QAAA,OAAO,EAAC,WADP;AAED,QAAA,KAAK,EAAC,SAFL,CAGD;AAHC;AAID,QAAA,SAAS,eACL,QAAC,qBAAD,CACA;AADA;AAEA,UAAA,QAAQ,EAAC,OAFT;AAGA,UAAA,MAAM,EAAE,OAHR;AAIA,UAAA,WAAW,EAAE;AAJb;AAAA;AAAA;AAAA;AAAA;AALH;AAAA;AAAA;AAAA;AAAA;AANL;AAAA;AAAA;AAAA;AAAA,YADJ;AA4BH,GA7BD;;AA+BA,SACIF,aAAa,IAAI,IAAjB,gBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,cACMC,gBAAgB;AADtB;AAAA;AAAA;AAAA;AAAA,UADJ,GAMI,IAPR;AAUH,CA9UD;;KAAMF,iB;AAgVN,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport CaseDonnee from './panels/CaseDonnee'\r\nimport \"../../styles/TactBandeauDroite.css\"\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport ContentsAPI from \"../../API/ContentsAPI\"\r\n\r\nconst TactBandeauDroite = ({\r\n    configuration\r\n}) => {\r\n    //     console.log(configuration)\r\n    //     const [textes, setTextes] = useState(null)\r\n    //     const [chrono,setChrono]=useState(null)\r\n    //     useEffect(() => {\r\n    //         if(tour==numeroPompier){\r\n    //         if (chrono > 0) {\r\n    //             var chronoTimer = setInterval(() => {\r\n    //             setChrono(chrono => chrono - 1)\r\n\r\n    //             }, 1000)\r\n\r\n    //         }\r\n    //         return () => {\r\n    //         clearInterval(chronoTimer)\r\n    //         }\r\n    //     }\r\n    //     }, [chrono])\r\n\r\n\r\n\r\n    //   useEffect(()=>{\r\n    //     if(chrono===null && configuration!==null){\r\n    //       setChrono(configuration.chronoTour.valeur)\r\n    //     }\r\n    //   })\r\n\r\n    //     useEffect(() => {\r\n    //         // console.log(\"use effect\")\r\n    //         const getTextes = async () => {\r\n    //             const textes = ContentsAPI.getTexts(\"jeuTactBandeauDroite\").then(\r\n    //                 (res) => { setTextes(res) }\r\n    //             )\r\n    //         }\r\n    //         if (textes == null) {\r\n    //             getTextes()\r\n    //         }\r\n    //     }, [textes])\r\n\r\n\r\n\r\n    //     const getText = (name) => {\r\n    //         if (textes == null) {\r\n    //             return name\r\n    //         } else {\r\n    //             try {\r\n    //                 return textes[\"label\" + name.charAt(0).toUpperCase() + name.slice(1)].contenu\r\n    //             } catch (error) {\r\n    //                 console.log(\"label\" + name.charAt(0).toUpperCase() + name.slice(1))\r\n    //                 return name\r\n    //             }\r\n    //         }\r\n    //     }\r\n\r\n\r\n\r\n    //     const renderStocks = () => {\r\n    //         return (\r\n    //             <div\r\n    //                 className=\"case-panel donnees-container\"\r\n    //                 style={{\r\n    //                     flex: 3\r\n    //                 }}\r\n    //             >\r\n    //                 <label\r\n    //                     className=\"label-title\"\r\n    //                 >\r\n    //                     {getText(\"stockEquipements\")}\r\n    //                 </label>\r\n    //                 <div className=\"sous-donnees-container\">\r\n    //                     <CaseDonnee\r\n    //                         key={0}\r\n    //                         name={\"nbExtFeu\"}\r\n    //                         value={stocks.Feu}\r\n    //                         primary={false}\r\n    //                         flexFactor={1}\r\n    //                         textes={textes}\r\n\r\n    //                     />\r\n    //                     <CaseDonnee\r\n    //                         key={1}\r\n    //                         name={\"nbExtFum\"}\r\n    //                         value={stocks.Fum}\r\n    //                         primary={false}\r\n    //                         flexFactor={1}\r\n    //                         textes={textes}\r\n\r\n    //                     />\r\n    //                 </div>\r\n    //                 <div className=\"sous-donnees-container\">\r\n    //                     <CaseDonnee\r\n    //                         key={2}\r\n    //                         name={\"nbExtFeuFum\"}\r\n    //                         value={stocks.FeuFum}\r\n    //                         primary={false}\r\n    //                         flexFactor={2}\r\n    //                         textes={textes}\r\n\r\n    //                     />\r\n    //                     <CaseDonnee\r\n    //                         key={3}\r\n    //                         name={\"nbMarqueurs\"}\r\n    //                         value={stocks.Marqueur}\r\n    //                         primary={false}\r\n    //                         flexFactor={2}\r\n    //                         textes={textes}\r\n\r\n    //                     />\r\n    //                 </div>\r\n    //             </div>\r\n    //         )\r\n    //     }\r\n\r\n    //     const renderResults = () => {\r\n    //         return (\r\n    //             <div\r\n    //                 className=\"case-panel donnees-container\"\r\n    //                 style={{\r\n    //                     flex: 2\r\n    //                 }}\r\n    //             >\r\n    //                 <label\r\n    //                     className=\"label-title\"\r\n    //                 >\r\n    //                     {getText(\"resultats\") + \" \" + numeroPompier}\r\n    //                 </label>\r\n    //                 <CaseDonnee\r\n    //                     key={4}\r\n    //                     name={getText(\"nbDecedes\")}\r\n    //                     value={resultats.Decedes}\r\n    //                     primary={false}\r\n    //                     flexFactor={0}\r\n    //                 />\r\n    //                 <CaseDonnee\r\n    //                     key={5}\r\n    //                     name={getText(\"nbSauves\")}\r\n    //                     value={resultats.Sauves}\r\n    //                     primary={false}\r\n    //                     flexFactor={0}\r\n    //                 />\r\n    //             </div>\r\n    //         )\r\n    //     }\r\n\r\n    //     const renderNumPompier = () => {\r\n    //         return (\r\n    //             <div\r\n    //                 className=\"case-panel\"\r\n    //                 style={{\r\n    //                     flex: 1\r\n    //                 }}\r\n    //             >\r\n    //                 <label\r\n    //                     className=\"label-title\"\r\n    //                 >\r\n    //                     {getText(\"numPompier\")}\r\n    //                 </label>\r\n    //                 <div className=\"donnees-container\">\r\n    //                     <label\r\n    //                         className=\"label-title label-num-pompier\"\r\n    //                     >\r\n    //                         {numeroPompier}\r\n    //                     </label>\r\n    //                     <BookmarkRoundedIcon\r\n    //                         className=\"icone-num-pompier\"\r\n    //                         fontSize=\"large\"\r\n    //                         stroke={\"white\"}\r\n    //                         strokeWidth={1}\r\n    //                     />\r\n    //                 </div>\r\n    //             </div>\r\n    //         )\r\n    //     }\r\n\r\n    //     const renderCircleTours = () => {\r\n    //         var type = 1, //circle type - 1 whole, 0.5 half, 0.25 quarter\r\n    //             radius = 20, //distance from center\r\n    //             start = -90, //shift start from 0\r\n    //             // $elements = $('li:not(:first-child)'),\r\n    //             numberOfElements = configuration.nbPompEquipe.valeur,\r\n    //             slice = 360 * type / numberOfElements;\r\n\r\n    //         const renderCircleItems = () => {\r\n    //             var items = []\r\n    //             const decalage = 1.2\r\n    //             // items.push(\r\n    //             //     <li\r\n    //             //         key={\"c\"}\r\n    //             //         style={{\r\n    //             //             'transform': 'translate(' + (-radius*decalage*2) + 'px,'+ (-radius*decalage) +'px)',\r\n    //             //             \"backgroundColor\": tour==-1 ? \"#BF0000\" : null\r\n    //             //         }}\r\n\r\n    //             //     >\r\n    //             //         {\"C\"}\r\n    //             //     </li>\r\n    //             // )\r\n    //             items.push(\r\n    //                 <li\r\n    //                     key={\"s\"}\r\n    //                     style={{\r\n    //                         'transform': 'translate(' + (radius*decalage) + 'px,'+ (-radius*decalage) +'px)',\r\n    //                         \"backgroundColor\": tour==0 ? \"#BF0000\" : null\r\n    //                     }}\r\n\r\n    //                 >\r\n    //                     {\"S\"}\r\n    //                 </li>\r\n    //             )\r\n\r\n    //             for (let i = 0; i < numberOfElements; i++) {\r\n    //                 const rotate = slice * i + start\r\n    //                 const rotateReverse = rotate * -1\r\n    //                 const decalageCircle=10\r\n\r\n    //                 items.push(\r\n    //                     <li\r\n    //                         key={i}\r\n    //                         style={{\r\n    //                             'transform': 'rotate(' + rotate + 'deg) translate(' + radius + 'px) rotate(' + rotateReverse + 'deg) translate(' + -radius / 2 + 'px) translateY('+decalageCircle+'px)',\r\n    //                             \"backgroundColor\": i + 1 == tour ? \"#BF0000\" : null\r\n    //                         }}\r\n\r\n    //                     >\r\n    //                         {i + 1}\r\n    //                     </li>\r\n\r\n    //                 )\r\n    //             }\r\n    //             return items\r\n    //         }\r\n\r\n    //         return (\r\n    //             <div\r\n    //                 className=\"case-panel\"\r\n    //                 style={{\r\n    //                     flex: 1\r\n    //                 }}\r\n    //             >\r\n    //                 <label\r\n    //                     className=\"label-title\"\r\n    //                 >\r\n    //                     {getText(\"tourParTour\")}\r\n    //                 </label>\r\n    //                 <ul >\r\n    //                     {renderCircleItems()}\r\n    //                 </ul>\r\n    //             </div>\r\n    //         )\r\n    //     }\r\n\r\n    //     const renderFeu = () => {\r\n    //         return (\r\n    //             <div\r\n    //                 className=\"case-panel\"\r\n    //                 style={{\r\n    //                     flex: 1\r\n    //                 }}\r\n    //             >\r\n    //                 <label\r\n    //                     className=\"label-title\"\r\n    //                 >\r\n    //                     {getText(\"play\")}\r\n    //                 </label>\r\n\r\n    //                 <div className=\"donnees-container\">\r\n    //                     <div className='feu'>\r\n    //                         <div style={{ backgroundColor: numeroPompier != tour || chrono < 30 ? chrono <= 30  ? \"#ff0000\" : \"#4dff4d\" : \"#9F9F9F\" }}></div>\r\n    //                         <div\r\n    //                             className={chrono <= 30 && chrono>0? \"clignotant\" : \"\"}\r\n    //                             style={{ backgroundColor: numeroPompier == tour ? chrono <= 30 ? chrono>0 ? \"#E26F00\" :  \"#ff0000\" : \"#4dff4d\" : \"#9F9F9F\" }}\r\n    //                         ></div>\r\n    //                     </div>\r\n    //                     <span className=\"case-value\" style={{\r\n    //                         marginTop: \"10%\",\r\n    //                         width: \"100%\",\r\n    //                         maxWidth: \"100%\"\r\n    //                     }} >\r\n    //                         {(Math.floor(chrono / 60)).toString().padStart(2, \"0\") + \" : \"}\r\n    //                         <span style={{ color: chrono <= 30 ? \"red\" : \"inherit\", marginLeft: 5 }}> {\" \" + (chrono % 60).toString().padStart(2, \"0\")} </span>\r\n    //                     </span>\r\n    //                 </div>\r\n\r\n\r\n\r\n\r\n\r\n    //             </div>\r\n    //         )\r\n    //     }\r\n\r\n    const renderDisconnect = () => {\r\n        return (\r\n            <div\r\n                className=\"btn-panel-droite\"\r\n                style={{\r\n                    flex: 1\r\n                }}\r\n            >\r\n                 <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                // className={classes.button}\r\n                startIcon={   \r\n                    <ExitToAppOutlinedIcon\r\n                    // className=\"icone-num-pompier\"\r\n                    fontSize=\"large\"\r\n                    stroke={\"white\"}\r\n                    strokeWidth={1}\r\n                />}\r\n            >\r\n            </Button>  \r\n{/*                 \r\n                <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n                 */}\r\n                 \r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        configuration != null ?\r\n            <div className=\"bandeau-droite-tact\">\r\n                 {renderDisconnect()}\r\n\r\n            </div>\r\n            :\r\n            null\r\n\r\n    );\r\n}\r\n\r\nexport default TactBandeauDroite;"]},"metadata":{},"sourceType":"module"}