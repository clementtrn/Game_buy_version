{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\d\\xE9citude\\\\client\\\\src\\\\routes\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/App.css';\nimport '../styles/Login.css';\nimport { useEffect, useState } from 'react';\nimport { TextField, Button, Divider, Typography } from \"@material-ui/core\";\nimport UsersAPI from \"../API/UsersAPI\";\nimport { useHistory } from 'react-router-dom';\nimport MyTheme from '../styles/MyTheme';\nimport { ThemeProvider } from '@material-ui/styles';\nimport cookie from 'react-cookies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  handleLogin,\n  userConnected\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [user, setUser] = useState(userConnected);\n\n  const handleConnect = async e => {\n    e.preventDefault();\n    const response = await UsersAPI.login(dataConnection);\n\n    if (response.id != null) {\n      setUser(response);\n    } else {\n      handleLogin(null);\n    }\n  };\n\n  useEffect(() => {\n    if (user != null) {\n      if (cookie.load('user') != null) cookie.remove('user');\n      cookie.save('user', user, {\n        path: '/',\n        expires,\n        maxAge: 1000\n      });\n      handleLogin(user);\n\n      if (user.role.includes(\"TACT\")) {\n        history.push(\"/tact\");\n      } else if (user.role.includes(\"INTER\")) {\n        history.push(\"/inter\");\n      }\n    }\n  }, [user]);\n  const [dataConnection, setDataConnection] = useState({\n    identifiant: \"\",\n    mdp: \"\"\n  });\n\n  const onChange = e => {\n    var data = {\n      identifiant: dataConnection.identifiant,\n      mdp: dataConnection.mdp\n    };\n    data[e.target.name] = e.target.value;\n    setDataConnection(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: MyTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-login\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        color: \"primary\",\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        children: \"Texte \\xE0 ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./assets/Camion.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          flexItem: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          method: \"post\",\n          className: \"login-form\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            label: \"Identifiant\",\n            variant: \"outlined\",\n            name: \"identifiant\",\n            value: dataConnection.identifiant,\n            onChange: onChange,\n            className: \"login-field\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            label: \"Mot de passe\",\n            variant: \"outlined\",\n            name: \"mdp\",\n            value: dataConnection.mdp,\n            onChange: onChange,\n            type: \"password\",\n            className: \"login-field\",\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-buttons-container\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => history.push(\"/\"),\n              className: \"login-button retour\",\n              color: \"default\",\n              children: \"Retour\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleConnect,\n              className: \"login-button connect\",\n              color: \"primary\",\n              children: \"Se connecter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"zzG2l3f25c20BjgKwGLQMra26kQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/hugod/d√©citude/client/src/routes/Login.js"],"names":["useEffect","useState","TextField","Button","Divider","Typography","UsersAPI","useHistory","MyTheme","ThemeProvider","cookie","Login","handleLogin","userConnected","history","user","setUser","handleConnect","e","preventDefault","response","login","dataConnection","id","load","remove","save","path","expires","maxAge","role","includes","push","setDataConnection","identifiant","mdp","onChange","data","target","name","value"],"mappings":"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","sourcesContent":["import '../styles/App.css';\r\nimport '../styles/Login.css'\r\nimport { useEffect, useState } from 'react';\r\nimport { TextField, Button, Divider, Typography } from \"@material-ui/core\"\r\nimport UsersAPI from \"../API/UsersAPI\"\r\nimport { useHistory } from 'react-router-dom';\r\nimport MyTheme from '../styles/MyTheme';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n\r\nimport cookie from 'react-cookies'\r\n\r\nconst Login = ({\r\n  handleLogin,\r\n  userConnected\r\n\r\n}) => {\r\n\r\n  const history = useHistory()\r\n\r\n  const [user, setUser] = useState(userConnected)\r\n\r\n  const handleConnect = async (e) => {\r\n    e.preventDefault()\r\n    const response = await UsersAPI.login(dataConnection)\r\n    if (response.id != null) {\r\n      setUser(response)\r\n    } else {\r\n      handleLogin(null)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (user != null) {\r\n      if(cookie.load('user')!=null) cookie.remove('user')\r\n      cookie.save('user', user, { \r\n        path: '/',\r\n        expires,\r\n        maxAge: 1000,\r\n      })\r\n      handleLogin(user)\r\n      if (user.role.includes(\"TACT\")) {\r\n        history.push(\"/tact\");\r\n      } else if (user.role.includes(\"INTER\")) {\r\n        history.push(\"/inter\");\r\n      }\r\n\r\n    }\r\n  }, [user])\r\n\r\n  const [dataConnection, setDataConnection] = useState({\r\n    identifiant: \"\",\r\n    mdp: \"\"\r\n  })\r\n\r\n\r\n\r\n  const onChange = (e) => {\r\n    var data = {\r\n      identifiant: dataConnection.identifiant,\r\n      mdp: dataConnection.mdp\r\n    }\r\n    data[e.target.name] = e.target.value\r\n    setDataConnection(data)\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <ThemeProvider theme={MyTheme}>\r\n      <div\r\n        className=\"body-login\"\r\n      >\r\n\r\n        <Typography variant=\"h1\" color=\"primary\">Connexion</Typography>\r\n        <Typography variant=\"subtitle1\">Texte √† ajouter</Typography>\r\n\r\n\r\n\r\n        <div\r\n          className=\"login-image-container\"\r\n        >\r\n          <img\r\n            src='./assets/Camion.png'\r\n          />\r\n          <Divider orientation=\"vertical\" flexItem />\r\n          <form method=\"post\" className=\"login-form\" >\r\n            <TextField\r\n              required\r\n              label=\"Identifiant\"\r\n              variant=\"outlined\"\r\n              name={\"identifiant\"}\r\n              value={dataConnection.identifiant}\r\n              onChange={onChange}\r\n              className=\"login-field\"\r\n              color=\"primary\"\r\n            />\r\n            <TextField\r\n              required\r\n              label=\"Mot de passe\"\r\n              variant=\"outlined\"\r\n              name=\"mdp\"\r\n              value={dataConnection.mdp}\r\n              onChange={onChange}\r\n              type=\"password\"\r\n              className=\"login-field\"\r\n              color=\"primary\"\r\n\r\n            />\r\n            <div className=\"login-buttons-container\">\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => history.push(\"/\")}\r\n                className=\"login-button retour\"\r\n                color=\"default\"\r\n                \r\n              >\r\n                Retour\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={handleConnect}\r\n                className=\"login-button connect\"\r\n                color=\"primary\"\r\n\r\n              >\r\n                Se connecter\r\n              </Button>\r\n            </div>\r\n          </form>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}