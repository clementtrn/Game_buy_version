{"ast":null,"code":"import io from 'socket.io-client';\nconst urlBack = \"http://localhost:4000\";\nconst socket = io.connect(urlBack);\nexport default {\n  nouveauTour: async numPompier => {\n    socket.emit('tour', parseInt(numPompier));\n  },\n  getSocket: () => {\n    return socket;\n  },\n  getConfiguration: async session => {\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        session: session\n      })\n    };\n    const response = await fetch(urlBack + \"/configuration\", requestOptions);\n    return await response.json();\n  }\n};","map":{"version":3,"sources":["C:/Users/hugod/dÃ©citude/client/src/API/PlayAPI.js"],"names":["io","urlBack","socket","connect","nouveauTour","numPompier","emit","parseInt","getSocket","getConfiguration","session","requestOptions","method","headers","body","JSON","stringify","response","fetch","json"],"mappings":"AACA,OAAOA,EAAP,MAAe,kBAAf;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AACA,MAAMC,MAAM,GAAGF,EAAE,CAACG,OAAH,CAAWF,OAAX,CAAf;AAEA,eAAe;AAEXG,EAAAA,WAAW,EAAC,MAAMC,UAAN,IAAmB;AAC3BH,IAAAA,MAAM,CAACI,IAAP,CAAY,MAAZ,EAAmBC,QAAQ,CAACF,UAAD,CAA3B;AACH,GAJU;AAKXG,EAAAA,SAAS,EAAC,MAAI;AACV,WAAON,MAAP;AACH,GAPU;AAQXO,EAAAA,gBAAgB,EAAC,MAAMC,OAAN,IAAgB;AAC7B,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFU;AAGnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACN,QAAAA,OAAO,EAACA;AAAT,OAAf;AAHa,KAAvB;AAKA,UAAMO,QAAQ,GAAG,MAAOC,KAAK,CAACjB,OAAO,GAAC,gBAAT,EAA2BU,cAA3B,CAA7B;AACA,WAAQ,MAAMM,QAAQ,CAACE,IAAT,EAAd;AACH;AAhBU,CAAf","sourcesContent":["\r\nimport io from 'socket.io-client'\r\n\r\nconst urlBack = \"http://localhost:4000\";\r\nconst socket = io.connect(urlBack)\r\n\r\nexport default {\r\n   \r\n    nouveauTour:async(numPompier)=>{\r\n        socket.emit('tour',parseInt(numPompier))\r\n    },\r\n    getSocket:()=>{\r\n        return socket\r\n    },\r\n    getConfiguration:async(session)=>{\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({session:session})\r\n        };\r\n        const response = await  fetch(urlBack+\"/configuration\", requestOptions)\r\n        return  await response.json()\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}