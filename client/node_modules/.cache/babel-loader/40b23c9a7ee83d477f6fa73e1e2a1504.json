{"ast":null,"code":"import _slicedToArray from\"C:/Users/hugod/decitude/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import CaseDonnee from'./panels/CaseDonnee';import\"../../styles/InterBandeauDroite.css\";import ExitToAppOutlinedIcon from'@material-ui/icons/ExitToAppOutlined';import Typography from'@material-ui/core/Typography';import Grid from'@material-ui/core/Grid';import Button from'@material-ui/core/Button';import IconButton from'@material-ui/core/IconButton';import ChatOutlinedIcon from'@material-ui/icons/ChatOutlined';import ContentsAPI from\"../../API/ContentsAPI\";import cookie from'react-cookies';import{useHistory}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var InterBandeauDroite=function InterBandeauDroite(_ref){var configuration=_ref.configuration,handleDisconnect=_ref.handleDisconnect;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),developpe=_useState2[0],setDeveloppe=_useState2[1];//     console.log(configuration)\n//     const [textes, setTextes] = useState(null)\n//     const [chrono,setChrono]=useState(null)\n//     useEffect(() => {\n//         if(tour==numeroPompier){\n//         if (chrono > 0) {\n//             var chronoTimer = setInterval(() => {\n//             setChrono(chrono => chrono - 1)\n//             }, 1000)\n//         }\n//         return () => {\n//         clearInterval(chronoTimer)\n//         }\n//     }\n//     }, [chrono])\n//   useEffect(()=>{\n//     if(chrono===null && configuration!==null){\n//       setChrono(configuration.chronoTour.valeur)\n//     }\n//   })\n//     useEffect(() => {\n//         // console.log(\"use effect\")\n//         const getTextes = async () => {\n//             const textes = ContentsAPI.getTexts(\"jeuInterBandeauDroite\").then(\n//                 (res) => { setTextes(res) }\n//             )\n//         }\n//         if (textes == null) {\n//             getTextes()\n//         }\n//     }, [textes])\n//     const getText = (name) => {\n//         if (textes == null) {\n//             return name\n//         } else {\n//             try {\n//                 return textes[\"label\" + name.charAt(0).toUpperCase() + name.slice(1)].contenu\n//             } catch (error) {\n//                 console.log(\"label\" + name.charAt(0).toUpperCase() + name.slice(1))\n//                 return name\n//             }\n//         }\n//     }\n//     const renderStocks = () => {\n//         return (\n//             <div\n//                 className=\"case-panel donnees-container\"\n//                 style={{\n//                     flex: 3\n//                 }}\n//             >\n//                 <label\n//                     className=\"label-title\"\n//                 >\n//                     {getText(\"stockEquipements\")}\n//                 </label>\n//                 <div className=\"sous-donnees-container\">\n//                     <CaseDonnee\n//                         key={0}\n//                         name={\"nbExtFeu\"}\n//                         value={stocks.Feu}\n//                         primary={false}\n//                         flexFactor={1}\n//                         textes={textes}\n//                     />\n//                     <CaseDonnee\n//                         key={1}\n//                         name={\"nbExtFum\"}\n//                         value={stocks.Fum}\n//                         primary={false}\n//                         flexFactor={1}\n//                         textes={textes}\n//                     />\n//                 </div>\n//                 <div className=\"sous-donnees-container\">\n//                     <CaseDonnee\n//                         key={2}\n//                         name={\"nbExtFeuFum\"}\n//                         value={stocks.FeuFum}\n//                         primary={false}\n//                         flexFactor={2}\n//                         textes={textes}\n//                     />\n//                     <CaseDonnee\n//                         key={3}\n//                         name={\"nbMarqueurs\"}\n//                         value={stocks.Marqueur}\n//                         primary={false}\n//                         flexFactor={2}\n//                         textes={textes}\n//                     />\n//                 </div>\n//             </div>\n//         )\n//     }\n//     const renderResults = () => {\n//         return (\n//             <div\n//                 className=\"case-panel donnees-container\"\n//                 style={{\n//                     flex: 2\n//                 }}\n//             >\n//                 <label\n//                     className=\"label-title\"\n//                 >\n//                     {getText(\"resultats\") + \" \" + numeroPompier}\n//                 </label>\n//                 <CaseDonnee\n//                     key={4}\n//                     name={getText(\"nbDecedes\")}\n//                     value={resultats.Decedes}\n//                     primary={false}\n//                     flexFactor={0}\n//                 />\n//                 <CaseDonnee\n//                     key={5}\n//                     name={getText(\"nbSauves\")}\n//                     value={resultats.Sauves}\n//                     primary={false}\n//                     flexFactor={0}\n//                 />\n//             </div>\n//         )\n//     }\n//     const renderNumPompier = () => {\n//         return (\n//             <div\n//                 className=\"case-panel\"\n//                 style={{\n//                     flex: 1\n//                 }}\n//             >\n//                 <label\n//                     className=\"label-title\"\n//                 >\n//                     {getText(\"numPompier\")}\n//                 </label>\n//                 <div className=\"donnees-container\">\n//                     <label\n//                         className=\"label-title label-num-pompier\"\n//                     >\n//                         {numeroPompier}\n//                     </label>\n//                     <BookmarkRoundedIcon\n//                         className=\"icone-num-pompier\"\n//                         fontSize=\"large\"\n//                         stroke={\"white\"}\n//                         strokeWidth={1}\n//                     />\n//                 </div>\n//             </div>\n//         )\n//     }\n//     const renderCircleTours = () => {\n//         var type = 1, //circle type - 1 whole, 0.5 half, 0.25 quarter\n//             radius = 20, //distance from center\n//             start = -90, //shift start from 0\n//             // $elements = $('li:not(:first-child)'),\n//             numberOfElements = configuration.nbPompEquipe.valeur,\n//             slice = 360 * type / numberOfElements;\n//         const renderCircleItems = () => {\n//             var items = []\n//             const decalage = 1.2\n//             // items.push(\n//             //     <li\n//             //         key={\"c\"}\n//             //         style={{\n//             //             'transform': 'translate(' + (-radius*decalage*2) + 'px,'+ (-radius*decalage) +'px)',\n//             //             \"backgroundColor\": tour==-1 ? \"#BF0000\" : null\n//             //         }}\n//             //     >\n//             //         {\"C\"}\n//             //     </li>\n//             // )\n//             items.push(\n//                 <li\n//                     key={\"s\"}\n//                     style={{\n//                         'transform': 'translate(' + (radius*decalage) + 'px,'+ (-radius*decalage) +'px)',\n//                         \"backgroundColor\": tour==0 ? \"#BF0000\" : null\n//                     }}\n//                 >\n//                     {\"S\"}\n//                 </li>\n//             )\n//             for (let i = 0; i < numberOfElements; i++) {\n//                 const rotate = slice * i + start\n//                 const rotateReverse = rotate * -1\n//                 const decalageCircle=10\n//                 items.push(\n//                     <li\n//                         key={i}\n//                         style={{\n//                             'transform': 'rotate(' + rotate + 'deg) translate(' + radius + 'px) rotate(' + rotateReverse + 'deg) translate(' + -radius / 2 + 'px) translateY('+decalageCircle+'px)',\n//                             \"backgroundColor\": i + 1 == tour ? \"#BF0000\" : null\n//                         }}\n//                     >\n//                         {i + 1}\n//                     </li>\n//                 )\n//             }\n//             return items\n//         }\n//         return (\n//             <div\n//                 className=\"case-panel\"\n//                 style={{\n//                     flex: 1\n//                 }}\n//             >\n//                 <label\n//                     className=\"label-title\"\n//                 >\n//                     {getText(\"tourParTour\")}\n//                 </label>\n//                 <ul >\n//                     {renderCircleItems()}\n//                 </ul>\n//             </div>\n//         )\n//     }\n//     const renderFeu = () => {\n//         return (\n//             <div\n//                 className=\"case-panel\"\n//                 style={{\n//                     flex: 1\n//                 }}\n//             >\n//                 <label\n//                     className=\"label-title\"\n//                 >\n//                     {getText(\"play\")}\n//                 </label>\n//                 <div className=\"donnees-container\">\n//                     <div className='feu'>\n//                         <div style={{ backgroundColor: numeroPompier != tour || chrono < 30 ? chrono <= 30  ? \"#ff0000\" : \"#4dff4d\" : \"#9F9F9F\" }}></div>\n//                         <div\n//                             className={chrono <= 30 && chrono>0? \"clignotant\" : \"\"}\n//                             style={{ backgroundColor: numeroPompier == tour ? chrono <= 30 ? chrono>0 ? \"#E26F00\" :  \"#ff0000\" : \"#4dff4d\" : \"#9F9F9F\" }}\n//                         ></div>\n//                     </div>\n//                     <span className=\"case-value\" style={{\n//                         marginTop: \"10%\",\n//                         width: \"100%\",\n//                         maxWidth: \"100%\"\n//                     }} >\n//                         {(Math.floor(chrono / 60)).toString().padStart(2, \"0\") + \" : \"}\n//                         <span style={{ color: chrono <= 30 ? \"red\" : \"inherit\", marginLeft: 5 }}> {\" \" + (chrono % 60).toString().padStart(2, \"0\")} </span>\n//                     </span>\n//                 </div>\n//             </div>\n//         )\n//     }\nvar renderDisconnect=function renderDisconnect(){return/*#__PURE__*/_jsx(\"div\",{className:\"btn-panel-droite\",style:{flex:1},children:developpe?/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\"// className={classes.button}\n,onClick:function onClick(){setDeveloppe(false);handleDisconnect();},startIcon:/*#__PURE__*/_jsx(ExitToAppOutlinedIcon,{fontSize:\"large\"}),children:\"Se d\\xE9connecter\"}):/*#__PURE__*/ // <IconButton aria-label=\"delete\" variant=\"contained\"\n//     color=\"primary\">\n_jsx(\"div\",{children:/*#__PURE__*/_jsx(ExitToAppOutlinedIcon,{fontSize:\"small\"// color=\"primary\"\n})})// </IconButton>\n});};var renderMessage=function renderMessage(){return/*#__PURE__*/_jsx(\"div\",{className:\"btn-panel-droite\",style:{flex:1},children:developpe?/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",disabled:true,startIcon:/*#__PURE__*/_jsx(ChatOutlinedIcon,{fontSize:\"large\"}),children:\"Messagerie\"}):/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ChatOutlinedIcon,{fontSize:\"small\"// color=\"gray\"\n})})// </IconButton>\n});};return configuration!=null?/*#__PURE__*/_jsxs(\"div\",{className:\"bandeau-droite-inter\",onMouseEnter:function onMouseEnter(){return setDeveloppe(true);},onMouseLeave:function onMouseLeave(){return setDeveloppe(false);},children:[renderDisconnect(),renderMessage()]}):null;};export default InterBandeauDroite;","map":{"version":3,"sources":["C:/Users/hugod/decitude/client/src/components/interfaceJoueur/InterBandeauDroite.js"],"names":["React","useState","useEffect","CaseDonnee","ExitToAppOutlinedIcon","Typography","Grid","Button","IconButton","ChatOutlinedIcon","ContentsAPI","cookie","useHistory","InterBandeauDroite","configuration","handleDisconnect","developpe","setDeveloppe","renderDisconnect","flex","renderMessage"],"mappings":"qJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,CACA,MAAO,qCAAP,CACA,MAAOC,CAAAA,qBAAP,KAAkC,sCAAlC,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,iCAA7B,CACA,MAAOC,CAAAA,WAAP,KAAwB,uBAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,eAAnB,CACA,OAASC,UAAT,KAA2B,kBAA3B,C,wFACA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,MAGrB,IAFFC,CAAAA,aAEE,MAFFA,aAEE,CADFC,gBACE,MADFA,gBACE,CAEF,cAAkCd,QAAQ,CAAC,KAAD,CAA1C,wCAAOe,SAAP,eAAkBC,YAAlB,egBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3B,mBACI,YACI,SAAS,CAAC,kBADd,CAEI,KAAK,CAAE,CACHC,IAAI,CAAE,CADH,CAFX,UAOKH,SAAS,cAEN,KAAC,MAAD,EACI,OAAO,CAAC,WADZ,CAEI,KAAK,CAAC,SACN;AAHJ,CAII,OAAO,CAAE,kBAAI,CACTC,YAAY,CAAC,KAAD,CAAZ,CACAF,gBAAgB,GACnB,CAPL,CAQI,SAAS,cACL,KAAC,qBAAD,EACI,QAAQ,CAAC,OADb,EATR,+BAFM,eAkBN;AACA;AACA,kCACI,KAAC,qBAAD,EACI,QAAQ,CAAC,OACT;AAFJ,EADJ,EAMA;AAjCR,EADJ,CAuCH,CAxCD,CA0CA,GAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,mBACI,YACI,SAAS,CAAC,kBADd,CAEI,KAAK,CAAE,CACHD,IAAI,CAAE,CADH,CAFX,UAOKH,SAAS,cAEN,KAAC,MAAD,EACI,OAAO,CAAC,WADZ,CAEI,KAAK,CAAC,SAFV,CAGI,QAAQ,CAAE,IAHd,CAII,SAAS,cACL,KAAC,gBAAD,EACI,QAAQ,CAAC,OADb,EALR,wBAFM,cAcN,kCACI,KAAC,gBAAD,EACI,QAAQ,CAAC,OACT;AAFJ,EADJ,EAMA;AA3BR,EADJ,CAiCH,CAlCD,CAoCA,MACIF,CAAAA,aAAa,EAAI,IAAjB,cACI,aAAK,SAAS,CAAC,sBAAf,CACI,YAAY,CAAE,8BAAMG,CAAAA,YAAY,CAAC,IAAD,CAAlB,EADlB,CAEI,YAAY,CAAE,8BAAMA,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAFlB,WAIKC,gBAAgB,EAJrB,CAKKE,aAAa,EALlB,GADJ,CASI,IAVR,CAaH,CAzYD,CA2YA,cAAeP,CAAAA,kBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport CaseDonnee from './panels/CaseDonnee'\r\nimport \"../../styles/InterBandeauDroite.css\"\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\r\nimport ContentsAPI from \"../../API/ContentsAPI\"\r\nimport cookie from 'react-cookies'\r\nimport { useHistory } from 'react-router-dom';\r\nconst InterBandeauDroite = ({\r\n    configuration,\r\n    handleDisconnect\r\n}) => {\r\n\r\n    const [developpe, setDeveloppe] = useState(false)\r\n\r\n\r\n    //     console.log(configuration)\r\n    //     const [textes, setTextes] = useState(null)\r\n    //     const [chrono,setChrono]=useState(null)\r\n    //     useEffect(() => {\r\n    //         if(tour==numeroPompier){\r\n    //         if (chrono > 0) {\r\n    //             var chronoTimer = setInterval(() => {\r\n    //             setChrono(chrono => chrono - 1)\r\n\r\n    //             }, 1000)\r\n\r\n    //         }\r\n    //         return () => {\r\n    //         clearInterval(chronoTimer)\r\n    //         }\r\n    //     }\r\n    //     }, [chrono])\r\n\r\n\r\n\r\n    //   useEffect(()=>{\r\n    //     if(chrono===null && configuration!==null){\r\n    //       setChrono(configuration.chronoTour.valeur)\r\n    //     }\r\n    //   })\r\n\r\n    //     useEffect(() => {\r\n    //         // console.log(\"use effect\")\r\n    //         const getTextes = async () => {\r\n    //             const textes = ContentsAPI.getTexts(\"jeuInterBandeauDroite\").then(\r\n    //                 (res) => { setTextes(res) }\r\n    //             )\r\n    //         }\r\n    //         if (textes == null) {\r\n    //             getTextes()\r\n    //         }\r\n    //     }, [textes])\r\n\r\n\r\n\r\n    //     const getText = (name) => {\r\n    //         if (textes == null) {\r\n    //             return name\r\n    //         } else {\r\n    //             try {\r\n    //                 return textes[\"label\" + name.charAt(0).toUpperCase() + name.slice(1)].contenu\r\n    //             } catch (error) {\r\n    //                 console.log(\"label\" + name.charAt(0).toUpperCase() + name.slice(1))\r\n    //                 return name\r\n    //             }\r\n    //         }\r\n    //     }\r\n\r\n\r\n\r\n    //     const renderStocks = () => {\r\n    //         return (\r\n    //             <div\r\n    //                 className=\"case-panel donnees-container\"\r\n    //                 style={{\r\n    //                     flex: 3\r\n    //                 }}\r\n    //             >\r\n    //                 <label\r\n    //                     className=\"label-title\"\r\n    //                 >\r\n    //                     {getText(\"stockEquipements\")}\r\n    //                 </label>\r\n    //                 <div className=\"sous-donnees-container\">\r\n    //                     <CaseDonnee\r\n    //                         key={0}\r\n    //                         name={\"nbExtFeu\"}\r\n    //                         value={stocks.Feu}\r\n    //                         primary={false}\r\n    //                         flexFactor={1}\r\n    //                         textes={textes}\r\n\r\n    //                     />\r\n    //                     <CaseDonnee\r\n    //                         key={1}\r\n    //                         name={\"nbExtFum\"}\r\n    //                         value={stocks.Fum}\r\n    //                         primary={false}\r\n    //                         flexFactor={1}\r\n    //                         textes={textes}\r\n\r\n    //                     />\r\n    //                 </div>\r\n    //                 <div className=\"sous-donnees-container\">\r\n    //                     <CaseDonnee\r\n    //                         key={2}\r\n    //                         name={\"nbExtFeuFum\"}\r\n    //                         value={stocks.FeuFum}\r\n    //                         primary={false}\r\n    //                         flexFactor={2}\r\n    //                         textes={textes}\r\n\r\n    //                     />\r\n    //                     <CaseDonnee\r\n    //                         key={3}\r\n    //                         name={\"nbMarqueurs\"}\r\n    //                         value={stocks.Marqueur}\r\n    //                         primary={false}\r\n    //                         flexFactor={2}\r\n    //                         textes={textes}\r\n\r\n    //                     />\r\n    //                 </div>\r\n    //             </div>\r\n    //         )\r\n    //     }\r\n\r\n    //     const renderResults = () => {\r\n    //         return (\r\n    //             <div\r\n    //                 className=\"case-panel donnees-container\"\r\n    //                 style={{\r\n    //                     flex: 2\r\n    //                 }}\r\n    //             >\r\n    //                 <label\r\n    //                     className=\"label-title\"\r\n    //                 >\r\n    //                     {getText(\"resultats\") + \" \" + numeroPompier}\r\n    //                 </label>\r\n    //                 <CaseDonnee\r\n    //                     key={4}\r\n    //                     name={getText(\"nbDecedes\")}\r\n    //                     value={resultats.Decedes}\r\n    //                     primary={false}\r\n    //                     flexFactor={0}\r\n    //                 />\r\n    //                 <CaseDonnee\r\n    //                     key={5}\r\n    //                     name={getText(\"nbSauves\")}\r\n    //                     value={resultats.Sauves}\r\n    //                     primary={false}\r\n    //                     flexFactor={0}\r\n    //                 />\r\n    //             </div>\r\n    //         )\r\n    //     }\r\n\r\n    //     const renderNumPompier = () => {\r\n    //         return (\r\n    //             <div\r\n    //                 className=\"case-panel\"\r\n    //                 style={{\r\n    //                     flex: 1\r\n    //                 }}\r\n    //             >\r\n    //                 <label\r\n    //                     className=\"label-title\"\r\n    //                 >\r\n    //                     {getText(\"numPompier\")}\r\n    //                 </label>\r\n    //                 <div className=\"donnees-container\">\r\n    //                     <label\r\n    //                         className=\"label-title label-num-pompier\"\r\n    //                     >\r\n    //                         {numeroPompier}\r\n    //                     </label>\r\n    //                     <BookmarkRoundedIcon\r\n    //                         className=\"icone-num-pompier\"\r\n    //                         fontSize=\"large\"\r\n    //                         stroke={\"white\"}\r\n    //                         strokeWidth={1}\r\n    //                     />\r\n    //                 </div>\r\n    //             </div>\r\n    //         )\r\n    //     }\r\n\r\n    //     const renderCircleTours = () => {\r\n    //         var type = 1, //circle type - 1 whole, 0.5 half, 0.25 quarter\r\n    //             radius = 20, //distance from center\r\n    //             start = -90, //shift start from 0\r\n    //             // $elements = $('li:not(:first-child)'),\r\n    //             numberOfElements = configuration.nbPompEquipe.valeur,\r\n    //             slice = 360 * type / numberOfElements;\r\n\r\n    //         const renderCircleItems = () => {\r\n    //             var items = []\r\n    //             const decalage = 1.2\r\n    //             // items.push(\r\n    //             //     <li\r\n    //             //         key={\"c\"}\r\n    //             //         style={{\r\n    //             //             'transform': 'translate(' + (-radius*decalage*2) + 'px,'+ (-radius*decalage) +'px)',\r\n    //             //             \"backgroundColor\": tour==-1 ? \"#BF0000\" : null\r\n    //             //         }}\r\n\r\n    //             //     >\r\n    //             //         {\"C\"}\r\n    //             //     </li>\r\n    //             // )\r\n    //             items.push(\r\n    //                 <li\r\n    //                     key={\"s\"}\r\n    //                     style={{\r\n    //                         'transform': 'translate(' + (radius*decalage) + 'px,'+ (-radius*decalage) +'px)',\r\n    //                         \"backgroundColor\": tour==0 ? \"#BF0000\" : null\r\n    //                     }}\r\n\r\n    //                 >\r\n    //                     {\"S\"}\r\n    //                 </li>\r\n    //             )\r\n\r\n    //             for (let i = 0; i < numberOfElements; i++) {\r\n    //                 const rotate = slice * i + start\r\n    //                 const rotateReverse = rotate * -1\r\n    //                 const decalageCircle=10\r\n\r\n    //                 items.push(\r\n    //                     <li\r\n    //                         key={i}\r\n    //                         style={{\r\n    //                             'transform': 'rotate(' + rotate + 'deg) translate(' + radius + 'px) rotate(' + rotateReverse + 'deg) translate(' + -radius / 2 + 'px) translateY('+decalageCircle+'px)',\r\n    //                             \"backgroundColor\": i + 1 == tour ? \"#BF0000\" : null\r\n    //                         }}\r\n\r\n    //                     >\r\n    //                         {i + 1}\r\n    //                     </li>\r\n\r\n    //                 )\r\n    //             }\r\n    //             return items\r\n    //         }\r\n\r\n    //         return (\r\n    //             <div\r\n    //                 className=\"case-panel\"\r\n    //                 style={{\r\n    //                     flex: 1\r\n    //                 }}\r\n    //             >\r\n    //                 <label\r\n    //                     className=\"label-title\"\r\n    //                 >\r\n    //                     {getText(\"tourParTour\")}\r\n    //                 </label>\r\n    //                 <ul >\r\n    //                     {renderCircleItems()}\r\n    //                 </ul>\r\n    //             </div>\r\n    //         )\r\n    //     }\r\n\r\n    //     const renderFeu = () => {\r\n    //         return (\r\n    //             <div\r\n    //                 className=\"case-panel\"\r\n    //                 style={{\r\n    //                     flex: 1\r\n    //                 }}\r\n    //             >\r\n    //                 <label\r\n    //                     className=\"label-title\"\r\n    //                 >\r\n    //                     {getText(\"play\")}\r\n    //                 </label>\r\n\r\n    //                 <div className=\"donnees-container\">\r\n    //                     <div className='feu'>\r\n    //                         <div style={{ backgroundColor: numeroPompier != tour || chrono < 30 ? chrono <= 30  ? \"#ff0000\" : \"#4dff4d\" : \"#9F9F9F\" }}></div>\r\n    //                         <div\r\n    //                             className={chrono <= 30 && chrono>0? \"clignotant\" : \"\"}\r\n    //                             style={{ backgroundColor: numeroPompier == tour ? chrono <= 30 ? chrono>0 ? \"#E26F00\" :  \"#ff0000\" : \"#4dff4d\" : \"#9F9F9F\" }}\r\n    //                         ></div>\r\n    //                     </div>\r\n    //                     <span className=\"case-value\" style={{\r\n    //                         marginTop: \"10%\",\r\n    //                         width: \"100%\",\r\n    //                         maxWidth: \"100%\"\r\n    //                     }} >\r\n    //                         {(Math.floor(chrono / 60)).toString().padStart(2, \"0\") + \" : \"}\r\n    //                         <span style={{ color: chrono <= 30 ? \"red\" : \"inherit\", marginLeft: 5 }}> {\" \" + (chrono % 60).toString().padStart(2, \"0\")} </span>\r\n    //                     </span>\r\n    //                 </div>\r\n\r\n\r\n\r\n\r\n\r\n    //             </div>\r\n    //         )\r\n    //     }\r\n\r\n \r\n\r\n\r\n\r\n    const renderDisconnect = () => {\r\n        return (\r\n            <div\r\n                className=\"btn-panel-droite\"\r\n                style={{\r\n                    flex: 1\r\n                }}\r\n            >\r\n\r\n                {developpe ?\r\n\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        // className={classes.button}\r\n                        onClick={()=>{\r\n                            setDeveloppe(false)\r\n                            handleDisconnect()\r\n                        }}\r\n                        startIcon={\r\n                            <ExitToAppOutlinedIcon\r\n                                fontSize=\"large\"\r\n                            />}\r\n                    >\r\n                        Se déconnecter\r\n                    </Button>\r\n                    :\r\n                    // <IconButton aria-label=\"delete\" variant=\"contained\"\r\n                    //     color=\"primary\">\r\n                    <div>\r\n                        <ExitToAppOutlinedIcon\r\n                            fontSize=\"small\"\r\n                            // color=\"primary\"\r\n                        />\r\n                        </div>\r\n                    // </IconButton>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const renderMessage = () => {\r\n        return (\r\n            <div\r\n                className=\"btn-panel-droite\"\r\n                style={{\r\n                    flex: 1\r\n                }}\r\n            >\r\n\r\n                {developpe ?\r\n\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={true}\r\n                        startIcon={\r\n                            <ChatOutlinedIcon\r\n                                fontSize=\"large\"\r\n                            />}\r\n                    >\r\n                        Messagerie\r\n                    </Button>\r\n                    :\r\n                    <div>\r\n                        <ChatOutlinedIcon\r\n                            fontSize=\"small\"\r\n                            // color=\"gray\"\r\n                        />\r\n                        </div>\r\n                    // </IconButton>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        configuration != null ?\r\n            <div className=\"bandeau-droite-inter\"\r\n                onMouseEnter={() => setDeveloppe(true)}\r\n                onMouseLeave={() => setDeveloppe(false)}\r\n            >\r\n                {renderDisconnect()}\r\n                {renderMessage()}\r\n            </div>\r\n            :\r\n            null\r\n\r\n    );\r\n}\r\n\r\nexport default InterBandeauDroite;"]},"metadata":{},"sourceType":"module"}