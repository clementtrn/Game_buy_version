{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\decitude\\\\client\\\\src\\\\components\\\\pieces\\\\MurPiece.js\";\nimport { withWidth } from '@material-ui/core';\nimport zIndex from '@material-ui/core/styles/zIndex';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MurPiece = ({\n  num,\n  height,\n  width,\n  type,\n  coordX,\n  coordY,\n  maxColonnesPiece,\n  maxLignesPiece\n}) => {\n  const epaisseurInit = 1;\n  const epaisseur = type > 0 ? type == 3 ? epaisseurInit * 8 : epaisseurInit * 4 : 1; // console.log(type)\n\n  const colors = [\"\", // 0 simple\n  \"black\", // 1 large\n  \"purple\", //2 porte closed\n  \"purple\" //3 porte open\n  ];\n\n  const getTransform = () => {\n    var facteurX = 1;\n\n    if (coordX < maxColonnesPiece / 2 - 3) {\n      facteurX = -1;\n    }\n\n    const translateY = facteurX * epaisseur / 1.5;\n    const translateX = facteurX * width * 0.9;\n    if (num == 0 && type == 3) return 'translate(' + translateX + \"px,\" + translateY + \"px)\";\n    if (num == 2 && type == 3) return 'translate(' + translateX + \"px,\" + -translateY + \"px)\";\n  };\n\n  const getOpacity = () => {\n    if (coordY < maxLignesPiece / 2 && num == 2 && type == 3) {\n      return 0;\n    }\n\n    return 1;\n  };\n\n  const test = () => {\n    console.log(\"coords X \" + coordX + \" \" + maxColonnesPiece);\n    console.log(\"coords Y \" + coordY + \" \" + maxLignesPiece);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => test(),\n    style: {\n      position: \"absolute\",\n      width: num % 2 == 0 ? width + 2 : epaisseur,\n      height: num % 2 == 1 ? height + 1 : epaisseur,\n      right: num == 1 ? -1 : null,\n      left: num % 2 == 0 || num == 3 ? -1 : null,\n      top: num == 0 || num % 2 == 1 ? -1 : null,\n      bottom: num == 2 ? 0 : null,\n      backgroundColor: type > 0 ? colors[type] : 'transparent',\n      zIndex: type == 2 || type == 3 ? 2 : 1,\n      transform: type == 3 ? getTransform() : '',\n      opacity: getOpacity()\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MurPiece;\nexport default MurPiece;\n\nvar _c;\n\n$RefreshReg$(_c, \"MurPiece\");","map":{"version":3,"sources":["C:/Users/hugod/decitude/client/src/components/pieces/MurPiece.js"],"names":["withWidth","zIndex","React","useState","useEffect","MurPiece","num","height","width","type","coordX","coordY","maxColonnesPiece","maxLignesPiece","epaisseurInit","epaisseur","colors","getTransform","facteurX","translateY","translateX","getOpacity","test","console","log","position","right","left","top","bottom","backgroundColor","transform","opacity"],"mappings":"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","sourcesContent":["import { withWidth } from '@material-ui/core';\r\nimport zIndex from '@material-ui/core/styles/zIndex';\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nconst MurPiece = ({\r\n    num,\r\n    height,\r\n    width,\r\n    type,\r\n    coordX,\r\n    coordY,\r\n    maxColonnesPiece,\r\n    maxLignesPiece\r\n}) => {\r\n    const epaisseurInit = 1\r\n    const epaisseur = type > 0 ? type == 3 ? epaisseurInit * 8 : epaisseurInit * 4 : 1\r\n\r\n    // console.log(type)\r\n\r\n    const colors = [\r\n        \"\", // 0 simple\r\n        \"black\", // 1 large\r\n        \"purple\",//2 porte closed\r\n        \"purple\",//3 porte open\r\n    ]\r\n\r\n    const getTransform = () => {\r\n        var facteurX = 1\r\n        if (coordX < maxColonnesPiece / 2 - 3) {\r\n            facteurX = -1\r\n        }\r\n        const translateY = facteurX * epaisseur / 1.5\r\n        const translateX = facteurX * width * 0.9\r\n        if (num == 0 && type == 3) return 'translate(' + translateX + \"px,\" + translateY + \"px)\"\r\n        if (num == 2 && type == 3) return 'translate(' + translateX + \"px,\" + (-translateY) + \"px)\"\r\n\r\n\r\n    }\r\n\r\n    const getOpacity=()=>{\r\n        if(coordY<maxLignesPiece/2 && (num == 2 && type == 3)) {\r\n            return 0\r\n        }\r\n        return 1\r\n    }\r\n\r\n\r\n    const test = () => {\r\n        console.log(\"coords X \"+coordX + \" \" + maxColonnesPiece)\r\n        console.log(\"coords Y \"+coordY + \" \" + maxLignesPiece)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onClick={() => test()}\r\n            style={{\r\n                position: \"absolute\",\r\n                width: num % 2 == 0 ? width + 2 : epaisseur,\r\n                height: num % 2 == 1 ? height + 1 : epaisseur,\r\n                right: num == 1 ? -1 : null,\r\n                left: num % 2 == 0 || num == 3 ? -1 : null,\r\n                top: num == 0 || num % 2 == 1 ? -1 : null,\r\n                bottom: num == 2 ? 0 : null,\r\n                backgroundColor: (type > 0) ? colors[type] : 'transparent',\r\n                zIndex: type == 2 || type == 3 ? 2 : 1,\r\n                transform: type == 3 ? getTransform() : '',\r\n                opacity:getOpacity()\r\n            }}\r\n        >\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MurPiece;"]},"metadata":{},"sourceType":"module"}