{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\decitude\\\\client\\\\src\\\\routes\\\\TactInterface.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/App.css\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport PlayAPI from \"../API/PlayAPI\";\nimport TactBandeauTop from \"../components/interfaceJoueur/TactBandeauTop\";\nimport TactBandeauBottom from \"../components/interfaceJoueur/TactBandeauBottom\";\nimport Grille from \"../components/interfaceJoueur/Grille\";\nimport { useHistory } from 'react-router-dom';\nimport { Typography } from \"@material-ui/core\";\nimport cookie from 'react-cookies';\nimport TactBandeauDroite from \"../components/interfaceJoueur/TactBandeauDroite\";\nimport ContentsAPI from \"../API/ContentsAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TactInterface = () => {\n  _s();\n\n  const history = useHistory();\n  const user = cookie.load(\"user\");\n\n  const handleDisconnect = () => {\n    cookie.save('user', \"disconnected\", {\n      path: '/',\n      maxAge: 60 * 60 * 1.5 //sec\n\n    });\n    history.push('/login');\n  };\n\n  if (user === null || user === undefined || user == \"disconnected\") history.push(\"/login\");\n  if (user !== null && user !== undefined && user.role !== undefined && !user.role.includes(\"TACT\")) handleDisconnect();\n  const [play, setPlay] = useState(false);\n  const [numPompier, setNumPompier] = useState(user !== null && user !== undefined && user.role !== undefined ? user.role.replace(\"TACT\", \"\") : null);\n  const [currentPomp, setCurrentPomp] = useState(null);\n  const [currentTour, setCurrentTour] = useState(null);\n  const [currentCycle, setCurrentCycle] = useState(null);\n  const [currentSequence, setCurrentSequence] = useState(null);\n  const [session, setSession] = useState(user != null ? user.session : null);\n  const [equipe, setEquipe] = useState(user != null ? user.equipe : null);\n  const [position, setPosition] = useState(null);\n  const [deplacementEnCours, setDeplacementEnCours] = useState({\n    type: 0,\n    rotation: 1\n  });\n  const [histActions, setHistActions] = useState([]);\n  const [chrono, setChrono] = useState(null);\n  useEffect(() => {\n    if (numPompier == null) handleDisconnect();\n  }, [numPompier]);\n  const [configuration, setConfiguration] = useState(null);\n  const [stocks, setStocks] = useState(null);\n  const [resultats, setResultats] = useState({\n    Decedes: 0,\n    Sauves: 0\n  });\n  const [interventions, setInterventions] = useState({\n    Deplacement: 0,\n    Feu: 0,\n    FeuFum: 0,\n    Fum: 0,\n    Marqueur: 0,\n    Porte: 0,\n    Habitant: 0\n  });\n  const [budget, setBudget] = useState(0);\n  const [budgetDepense, setBudgetDepense] = useState(0);\n  const isLoading = useRef(false); // INITIALISATION DE LA CARTE\n  // const [carte, setCarte] = useState([\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  // ])\n\n  const [carte, setCarte] = useState([]);\n  const [nbLignesGrille, setNbLignesGrille] = useState(0);\n  const [nbColonnesGrille, setNbColonnesGrille] = useState(0);\n  const [mursH, setMursH] = useState([[1, 1, 1, 1, 1, 1, 2, 6, 1, 1, 1, 1, 2, 5, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 2, 6, 1, 6, 2, 1, 1, 1, 5, 2, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 6, 2, 1, 1, 1, 1, 1, 1, 1, 1]]);\n  const [mursV, setMursV] = useState([[1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [2, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [5, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 0, 0, 2], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 5]]); // GET PLAY PARAMETERS \n\n  const getPlayState = async (session, equipe) => {\n    if (!isLoading.current) {\n      isLoading.current = true;\n      const currentPlayState = await PlayAPI.getPlayState(session, equipe); // console.log(currentPlayState)\n\n      if (Object.keys(currentPlayState).length > 0) {\n        // console.log(parseInt(JSON.parse(currentPlayState.currentTour.valeur)))\n        setCurrentPomp(parseInt(JSON.parse(currentPlayState.currentPomp.valeur)));\n        setCurrentTour(parseInt(JSON.parse(currentPlayState.currentTour.valeur)));\n        setCurrentCycle(parseInt(JSON.parse(currentPlayState.currentCycle.valeur)));\n        setCurrentSequence(parseInt(JSON.parse(currentPlayState.currentSequence.valeur)));\n        setMursH(JSON.parse(currentPlayState.mursH.valeur));\n        setMursV(JSON.parse(currentPlayState.mursV.valeur));\n        setCarte(JSON.parse(currentPlayState.carte.valeur));\n        setResultats({\n          Decedes: parseInt(JSON.parse(currentPlayState.resultatsDecedes.valeur)),\n          Sauves: parseInt(JSON.parse(currentPlayState.resultatsSauves.valeur))\n        });\n        setPlay(JSON.parse(currentPlayState.play.valeur)); // if(parseInt(JSON.parse(currentPlayState.currentPomp.valeur))==1 && parseInt(JSON.parse(currentPlayState.currentTour.valeur))==1){\n\n        getBudget(parseInt(JSON.parse(currentPlayState.currentCycle.valeur)), parseInt(JSON.parse(currentPlayState.currentSequence.valeur))); //  }\n\n        const c = parseInt(JSON.parse(currentPlayState.currrentChrono.valeur));\n\n        if (configuration !== null && c <= configuration.chronoTour.valeur && parseInt(JSON.parse(currentPlayState.currentPomp.valeur)) == numPompier) {\n          setChrono(c);\n          console.log(\"chrono c\");\n        } else {\n          setChrono(null); // console.log(\"chrono\")\n        }\n      }\n\n      getPositionFromCarte(JSON.parse(currentPlayState.carte.valeur));\n      isLoading.current = false;\n    }\n  };\n\n  useEffect(() => {\n    // console.log(carte)\n    if (carte.length > 0) {\n      setNbLignesGrille(carte.length);\n      setNbColonnesGrille(carte[0].length);\n      getPositionFromCarte(carte);\n    }\n  }, [carte]); // useEffect(()=>{\n  //   console.log(currentTour)\n  // },[currentTour])\n\n  useEffect(() => {\n    if (session != null && equipe != null && currentTour == null) {\n      if (!isLoading.current && configuration !== null) getPlayState(session, equipe);\n      getPlayParameters();\n      getPositionFromCarte(carte);\n    }\n  }, [session, equipe, numPompier, configuration]);\n\n  const getPlayParameters = async () => {\n    const param = await PlayAPI.getConfiguration(session);\n    setConfiguration(param);\n  };\n\n  const getPositionFromCarte = carte => {\n    if (carte != null && carte.length > 0) {\n      carte.forEach((ligne, indexI) => {\n        ligne.forEach((valeur, indexJ) => {\n          if (Math.floor(valeur / 1000) == 1 && Math.floor(valeur % 1000 / 100) == numPompier) {\n            setPosition([indexI, indexJ]);\n            setDeplacementEnCours({\n              type: 0,\n              rotation: valeur % 10\n            });\n          }\n        });\n      });\n    }\n  }; // const onTextChange = (e) => {\n  //   setNumPompier(e.target.value)\n  //   console.log(typeof (e.target.value))\n  // }\n  // const onXChange = (e) => {\n  //   e.preventDefault()\n  //   if (e.target.value.length > 0) {\n  //     updateCarte(position, 0)\n  //     setPosition(position => [position[0], parseInt(e.target.value)])\n  //   } else {\n  //     updateCarte(position, 0)\n  //     setPosition(position => [position[0], 0])\n  //   }\n  // }\n  // const onYChange = (e) => {\n  //   e.preventDefault()\n  //   if (e.target.value.length > 0) {\n  //     updateCarte(position, 0)\n  //     setPosition(position => [parseInt(e.target.value), position[1]])\n  //   } else {\n  //     updateCarte(position, 0)\n  //     setPosition(position => [0, position[1]])\n  //   }\n  // }\n  // UPDATES\n\n\n  const updateCarte = (coords, value) => {\n    if (coords[0] < nbLignesGrille && coords[1] < nbColonnesGrille) {\n      try {\n        var c = [...carte];\n        c[coords[0]][coords[1]] = value;\n        setCarte(c);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const updateMurH = (coords, value) => {\n    if (coords[0] < mursH.length && coords[1] < mursH[0].length) {\n      try {\n        var m = [...mursH];\n        m[coords[0]][coords[1]] = value;\n        setMursH(m);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const updateMurV = (coords, value) => {\n    if (coords[0] < mursV.length && coords[1] < mursV[0].length) {\n      try {\n        var m = [...mursV];\n        m[coords[0]][coords[1]] = value;\n        setMursV(m);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }; // ACTIONS\n\n\n  const updateBudget = action => {\n    var depenses = 0;\n    if (configuration[\"coutEq\" + action] != null) depenses += configuration[\"coutEq\" + action].valeur;\n    if (configuration[\"coutInter\" + action] != null) depenses += configuration[\"coutInter\" + action].valeur;\n    setBudget(budget => budget - depenses);\n    setBudgetDepense(bd => bd + depenses);\n  };\n\n  const addHistAction = (budget, budgetDepense) => {\n    const h = [...histActions, {\n      carte: JSON.stringify(carte),\n      budget: JSON.stringify(budget),\n      budgetDepense: JSON.stringify(budgetDepense),\n      mursH: JSON.stringify(mursH),\n      mursV: JSON.stringify(mursV),\n      stocks: JSON.stringify(stocks),\n      resultats: JSON.stringify(resultats),\n      interventions: JSON.stringify(interventions),\n      deplacementEnCours: JSON.stringify({\n        type: 0,\n        rotation: deplacementEnCours.rotation\n      })\n    }];\n    setHistActions(h);\n  };\n\n  const retourAction = () => {\n    isLoading.current = true;\n    var h = [...histActions];\n    h.pop();\n    const state = h[h.length - 1];\n    setCarte(JSON.parse(state.carte));\n    setMursH(JSON.parse(state.mursH));\n    setMursV(JSON.parse(state.mursV));\n    setStocks(JSON.parse(state.stocks));\n    setInterventions(JSON.parse(state.interventions));\n    setResultats(JSON.parse(state.resultats));\n    setBudget(JSON.parse(state.budget));\n    setBudgetDepense(JSON.parse(state.budgetDepense));\n    setDeplacementEnCours(JSON.parse(state.deplacementEnCours));\n    setHistActions(h);\n    isLoading.current = false;\n  };\n\n  useEffect(() => {\n    if (position !== null && stocks !== null && budget > 0 && deplacementEnCours.type == 0 && (histActions[histActions.length - 1] == undefined || budget < histActions[histActions.length - 1].budget)) {\n      addHistAction(budget, budgetDepense);\n    }\n  }, [deplacementEnCours, budgetDepense, stocks]);\n  useEffect(() => {\n    console.log(\"hist Actions\");\n    console.log(histActions);\n  }, [histActions]); // useEffect(()=>{\n  //   if( position!==null && budget>0){\n  //     if(histActions[histActions.length-1]!==undefined && budget<histActions[histActions.length-1].budget ){\n  //       addHistAction(budget)\n  //     }\n  //   }\n  // },[budget])\n\n  const doAction = action => {\n    try {\n      if (Object.keys(stocks).includes(action)) {\n        var s = stocks;\n        s[action] = s[action] - 1;\n        setStocks(s);\n      }\n    } catch (error) {}\n\n    try {\n      if (Object.keys(interventions).includes(action)) {\n        var i = interventions;\n        i[action] = i[action] - 1;\n        setInterventions(i);\n      }\n    } catch (error) {} // setTimeout(() => {\n\n\n    updateBudget(action); // }, 1000);\n  };\n\n  const updateResultats = sauve => {\n    var res = { ...resultats\n    };\n\n    if (sauve) {\n      res.Sauves += 1;\n    } else {\n      res.Decedes += 1;\n    }\n\n    console.log(res);\n    setResultats(res);\n  };\n\n  useEffect(() => {\n    setBtnClickedBottom(null);\n    revealHabitant();\n  }, [position]);\n  useEffect(() => {\n    if (carte.length > 0) relacherHabitant();\n  }, [position, mursH, mursV]); // useEffect(() => {\n  //   console.log(\"Stocks\")\n  //   console.log(stocks)\n  // }, [stocks])\n\n  useEffect(() => {\n    if (configuration != null) {\n      var inter = interventions;\n      const interKeys = Object.keys(inter);\n      interKeys.forEach(action => {\n        try {\n          if (configuration[\"coutInter\" + action].valeur > 0) {\n            inter[action] = Math.min(configuration[\"coutEq\" + action] != null && configuration[\"coutEq\" + action] != undefined ? Math.floor(budget / (configuration[\"coutInter\" + action].valeur + configuration[\"coutEq\" + action].valeur)) : Math.floor(budget / configuration[\"coutInter\" + action].valeur), stocks !== null && stocks[action] != null && stocks[action] != undefined && stocks[action] != \"NaN\" ? stocks[action] : 1000);\n          }\n        } catch (error) {\n          console.log(error, action);\n        }\n      });\n      setInterventions(inter);\n    } else {// getPlayParameters()\n    }\n  }, [budget, configuration, numPompier, stocks]); // SOCKETS\n\n  const socket = PlayAPI.getSocket(); // SOCKETS \n\n  const onTourChange = async e => {\n    e.preventDefault();\n    console.log(\"nouveau tour todo\");\n  };\n\n  const modifyBudgetsFin = async (cycle, sequence) => {\n    var budgetsFin = await PlayAPI.getBudgetsPompFin(session, equipe);\n    budgetsFin = JSON.parse(budgetsFin.valeur);\n\n    try {\n      budgetsFin.interventions.forEach((b, index) => {\n        if (b.numCycle == cycle && b.numSeq == sequence) {\n          budgetsFin[\"interventions\"][index][\"pomp\" + numPompier] = budget;\n        }\n      });\n    } catch (error) {}\n\n    try {\n      budgetsFin.equipements.forEach((e, index) => {\n        if (e.numCycle == cycle && e.numSeq == sequence) {\n          budgetsFin[\"equipements\"][index][\"Feu\"][\"pomp\" + numPompier] = stocks.Feu;\n          budgetsFin[\"equipements\"][index][\"FeuFum\"][\"pomp\" + numPompier] = stocks.FeuFum;\n          budgetsFin[\"equipements\"][index][\"Fum\"][\"pomp\" + numPompier] = stocks.Fum;\n          budgetsFin[\"equipements\"][index][\"Marqueur\"][\"pomp\" + numPompier] = stocks.Marqueur;\n        }\n      });\n    } catch (error) {}\n\n    PlayAPI.saveBudgetsPompFin(budgetsFin, session, equipe);\n    console.log(\"budgets modified\");\n    return budgetsFin;\n  };\n\n  const getBudget = async (cycle, sequence) => {\n    var nouveauBudget = await PlayAPI.getBudgetsPompFin(session, equipe);\n    nouveauBudget = nouveauBudget.valeur;\n    nouveauBudget = JSON.parse(nouveauBudget);\n    let budgetInter = 0;\n    let stocksEq = stocks !== null && stocks !== undefined ? { ...stocks\n    } : {\n      Feu: 0,\n      FeuFum: 0,\n      Fum: 0,\n      Marqueur: 0\n    };\n\n    try {\n      nouveauBudget.interventions.forEach(b => {\n        if (b.numCycle == cycle && b.numSeq == sequence) {\n          budgetInter = b[\"pomp\" + numPompier];\n        }\n      });\n    } catch (error) {}\n\n    try {\n      nouveauBudget.equipements.forEach(e => {\n        if (e.numCycle == cycle && e.numSeq == sequence) {\n          stocksEq.Feu += e.Feu[\"pomp\" + numPompier];\n          stocksEq.FeuFum += e.FeuFum[\"pomp\" + numPompier];\n          stocksEq.Fum += e.Fum[\"pomp\" + numPompier];\n          stocksEq.Marqueur += e.Marqueur[\"pomp\" + numPompier];\n        }\n      });\n    } catch (error) {}\n\n    console.log(nouveauBudget);\n\n    if (budgetInter !== budget) {\n      setBudget(budgetInter);\n      setBudgetDepense(0);\n    }\n\n    setStocks(stocksEq);\n  };\n\n  useEffect(() => {\n    socket.on('changementTour', data => {\n      if (currentPomp != data.currentPomp || currentCycle !== data.currentCycle || currentTour !== data.currentTour || currentSequence !== data.currentSequence) {\n        console.log(\"changement tour\");\n        getPlayState(session, equipe);\n      }\n    });\n    socket.on('revealHabitant', data => {\n      if (carte !== null && carte.length > 0) {\n        // console.log(carte[data.y][data.x])\n        // console.log(carte[data.y])\n        if (carte[data.y][data.x] == 20) {\n          // console.log([data.y,data.x])\n          updateCarte([data.y, data.x], data.type); // console.log(\"socket hab\")\n          // console.log(data)\n        }\n      }\n    });\n    socket.on('startStopPartie', data => {\n      setPlay(data.start);\n    });\n  }); // TESTS\n\n  const test = async () => {\n    console.log(\"test function\");\n  }; // AUTORISATIONS \n\n\n  const deplacementAutorise = deplacement => {\n    // return true\n    var dpl = [...deplacement];\n    if (dpl[0] == 0 && dpl[1] == 0) return false;\n    if (position[0] + dpl[0] > carte.length - 1 || position[1] + dpl[1] > carte[0].length - 1 || position[0] + dpl[0] < 0 || position[1] + dpl[1] < 0) return false;\n    const dplInterditsCases = [1000, 20, 3, 4];\n\n    try {\n      const valeurCaseDeplacement = carte[position[0] + dpl[0]][position[1] + dpl[1]];\n      if (Math.floor(valeurCaseDeplacement / 1000) == 1) return false;\n      if (Math.floor(valeurCaseDeplacement / 10) == 2) return false;\n      if (dplInterditsCases.includes(valeurCaseDeplacement)) return false;\n    } catch (error) {}\n\n    const dplInterditsMurs = [1, 2, 3, 5];\n\n    try {\n      if (dpl[0] != 0) {\n        // haut bas\n        if (dpl[0] < 0) {\n          dpl[0] = 0;\n        }\n\n        if (typeof mursH[position[0] + dpl[0]][position[1]] === 'undefined') return false;\n        if (dplInterditsMurs.includes(mursH[position[0] + dpl[0]][position[1]])) return false;\n      } else {\n        // gauche droite\n        if (dpl[1] < 0) {\n          dpl[1] = 0;\n        }\n\n        if (typeof mursV[position[0]][position[1] + dpl[1]] === 'undefined') return false;\n        if (dplInterditsMurs.includes(mursV[position[0]][position[1] + dpl[1]])) return false;\n      }\n    } catch (error) {}\n\n    return true;\n  };\n\n  const testRelacherHabitant = () => {\n    if (carte[position[0]][position[1]] % 100 < 10) return false; // pas de transport d'habitant\n\n    const mursBloquants = [1, 2, 3, 5];\n    if (position[0] == 0 && !mursBloquants.includes(mursH[position[0]][position[1]])) return true; // haut\n\n    if (position[0] == nbLignesGrille - 1 && !mursBloquants.includes(mursH[position[0] + 1][position[1]])) return true; // bas\n\n    if (position[1] == 0 && !mursBloquants.includes(mursV[position[0]][position[1]])) return true; // gauche\n\n    if (position[1] == nbColonnesGrille - 1 && !mursBloquants.includes(mursV[position[0]][position[1] + 1])) return true; // droite\n\n    return false;\n  };\n\n  const relacherHabitant = () => {\n    if (testRelacherHabitant()) {\n      setTimeout(() => {\n        updateResultats(true);\n        updateCarte(position, carte[position[0]][position[1]] - (carte[position[0]][position[1]] % 100 - carte[position[0]][position[1]] % 10));\n      }, 1000);\n    }\n  };\n\n  const revealHabitant = async () => {\n    if (configuration != null) {\n      const casesAutour = getCasesAutour();\n\n      try {\n        if (casesAutour.dessus == 20) {\n          updateCarte([position[0] - 1, position[1]], 0);\n          resetHistAction();\n          const response = await PlayAPI.revealHabitant([position[0] - 1, position[1]], 0);\n        }\n      } catch (error) {}\n\n      try {\n        if (casesAutour.droite == 20) {\n          updateCarte([position[0], position[1] + 1], 0);\n          resetHistAction();\n          const response = await PlayAPI.revealHabitant([position[0], position[1] + 1], 0);\n        }\n      } catch (error) {}\n\n      try {\n        if (casesAutour.dessous == 20) {\n          updateCarte([position[0] + 1, position[1]], 0);\n          resetHistAction();\n          const response = await PlayAPI.revealHabitant([position[0] + 1, position[1]], 0);\n        }\n      } catch (error) {}\n\n      try {\n        if (casesAutour.gauche == 20) {\n          updateCarte([position[0], position[1] - 1], 0);\n          resetHistAction();\n          const response = await PlayAPI.revealHabitant([position[0], position[1] - 1], 0);\n        }\n      } catch (error) {}\n    }\n  };\n\n  const getCasesAutour = () => {\n    var cases = {};\n\n    try {\n      cases[\"dessus\"] = carte[position[0] - 1][position[1]]; // dessus\n    } catch (error) {}\n\n    try {\n      cases[\"droite\"] = carte[position[0]][position[1] + 1]; // droite\n    } catch (error) {}\n\n    try {\n      cases[\"dessous\"] = carte[position[0] + 1][position[1]]; // dessous\n    } catch (error) {}\n\n    try {\n      cases[\"gauche\"] = carte[position[0]][position[1] - 1]; // gauche\n    } catch (error) {}\n\n    return cases;\n  };\n\n  const getMursAutour = () => {\n    var murs = [];\n\n    try {\n      if (mursH[position[0]][position[1]] != 4 || mursH[position[0]][position[1] - 1] < 6 && mursH[position[0]][position[1] + 1] < 6) {\n        murs.push(mursH[position[0]][position[1]]); // dessus\n      } else {\n        murs.push(0);\n      }\n    } catch (error) {}\n\n    try {\n      if (mursV[position[0]][position[1] + 1] != 4 || mursV[position[0] - 1][position[1] + 1] < 6 && mursV[position[0] + 1][position[1] + 1] < 6) {\n        murs.push(mursV[position[0]][position[1] + 1]); // droite\n      } else {\n        murs.push(0);\n      }\n    } catch (error) {}\n\n    try {\n      if (mursH[position[0] + 1][position[1]] != 4 || mursH[position[0] + 1][position[1] - 1] < 6 && mursH[position[0] + 1][position[1] + 1] < 6) {\n        murs.push(mursH[position[0] + 1][position[1]]); // dessous\n      } else {\n        murs.push(0);\n      }\n    } catch (error) {}\n\n    try {\n      if (mursV[position[0]][position[1]] != 4 || mursV[position[0] - 1][position[1]] < 6 && mursV[position[0] + 1][position[1]] < 6) {\n        murs.push(mursV[position[0]][position[1]]); // gauche\n      } else {\n        murs.push(0);\n      }\n    } catch (error) {} // console.log(murs)\n\n\n    return murs;\n  };\n\n  const resetHistAction = () => {\n    setTimeout(() => {\n      setHistActions([{\n        carte: JSON.stringify(carte),\n        budget: JSON.stringify(budget),\n        budgetDepense: JSON.stringify(budgetDepense),\n        mursH: JSON.stringify(mursH),\n        mursV: JSON.stringify(mursV),\n        stocks: JSON.stringify(stocks),\n        resultats: JSON.stringify(resultats),\n        interventions: JSON.stringify(interventions)\n      }]);\n    }, 300);\n  };\n\n  const [btnClickedBottom, setBtnClickedBottom] = useState(null);\n  const [propositionsCase, setPropositionsCase] = useState([]); // Extincteurs\n\n  const [propositionMursDetruire, setPropositionMursDetruire] = useState([[], []]); // Horizontaux  , Verticaux\n\n  useEffect(() => {\n    if (btnClickedBottom != 3 || btnClickedBottom == null) {\n      setPropositionMursDetruire([[], []]);\n    }\n\n    if (btnClickedBottom > 2 && btnClickedBottom < 6 || btnClickedBottom == null) {\n      setPropositionsCase([]);\n    }\n  }, [btnClickedBottom]); // HANDLERS CLIC GRILLE\n\n  const handleClicCase = (valeurAvant, valeurApres, coordX, coordY) => {\n    console.log(valeurAvant, valeurApres, coordX, coordY);\n\n    try {\n      updateCarte([coordY, coordX], valeurApres);\n      setPropositionsCase([]);\n      setBtnClickedBottom(null);\n\n      if (valeurAvant == 4 && valeurApres == 0) {\n        // Extincteur flamme\n        doAction(\"Feu\");\n      }\n\n      if (valeurAvant == 4 && valeurApres == 3) {\n        // Feu Fumée\n        doAction(\"FeuFum\");\n      }\n\n      if (valeurAvant == 3 && valeurApres == 0) {\n        // Fumée\n        doAction(\"Fum\");\n      }\n\n      if (Math.floor(valeurAvant / 10) == 2 && valeurApres == 0) {\n        // Habitant\n        doAction(\"Habitant\");\n        updateCarte(position, carte[position[0]][position[1]] + valeurAvant % 10);\n      }\n    } catch (error) {}\n  };\n\n  const handleClicMur = (num, valeurAvant, coordX, coordY) => {\n    // marqueur dégat\n    if (propositionMursDetruire[0].length > 0 || propositionMursDetruire[1].length > 0) {\n      const checkInCoords = index => {\n        // console.log(\"coordx\",coordX,\"coordy\",coordY,\"position\",position)\n        let numClic = null;\n\n        if (coordX == position[1] && (coordY < position[0] || coordY == position[0] && num == 0)) {\n          // top\n          numClic = 0; // case en question\n          // console.log(\"top\",numClic)\n        }\n\n        if (coordX == position[1] && (coordY > position[0] || coordY == position[0] && num == 2)) {\n          // bottom\n          numClic = 2; // case en question\n          // console.log(\"bottom\",numClic)\n        }\n\n        if (coordY == position[0] && (coordX < position[1] || coordX == position[1] && num == 3)) {\n          // left\n          numClic = 3; // case en question\n          // console.log(\"left\",numClic)\n        }\n\n        if (coordY == position[0] && (coordX > position[1] || coordX == position[1] && num == 1)) {\n          // right\n          numClic = 1; // case en question\n          // console.log(\"right\",numClic)\n        }\n\n        return numClic;\n      };\n\n      var cote = checkInCoords(num % 2);\n      let valeurApres = 4;\n      if (valeurAvant == 1) valeurApres = 3;\n\n      if (cote != null) {\n        try {\n          switch (cote) {\n            case 0:\n              updateMurH([position[0], position[1]], valeurApres); // if(valeurAvant==5 ||)\n\n              break;\n\n            case 1:\n              updateMurV([position[0], position[1] + 1], valeurApres);\n              break;\n\n            case 2:\n              updateMurH([position[0] + 1, position[1]], valeurApres);\n              break;\n\n            case 3:\n              updateMurV([position[0], position[1]], valeurApres);\n              break;\n          }\n\n          doAction(\"Marqueur\");\n        } catch (error) {}\n\n        setPropositionMursDetruire([[], []]);\n        setBtnClickedBottom(null);\n      }\n    }\n  }; // HANDLER CLICS BOUTONS\n\n\n  const handleClicFleche = num => {\n    // Position y x\n    let deplacement;\n    let rotation;\n\n    switch (num) {\n      case 0:\n        // haut\n        // console.log(\"haut\")\n        deplacement = [-1, 0];\n        rotation = 1;\n        break;\n\n      case 1:\n        // droite\n        // console.log(\"droite\")\n        deplacement = [0, 1];\n        rotation = 2;\n        break;\n\n      case 2:\n        // bas\n        // console.log(\"bas\")\n        deplacement = [1, 0];\n        rotation = 3;\n        break;\n\n      case 3:\n        // gauche\n        // console.log(\"gauche\")\n        deplacement = [0, -1];\n        rotation = 4;\n        break;\n    }\n\n    if (deplacementAutorise(deplacement)) {\n      // ANIMATION MARCHE\n      setDeplacementEnCours({\n        type: 1,\n        rotation: rotation\n      });\n      setTimeout(() => {\n        updateCarte([position[0] + deplacement[0], position[1] + deplacement[1]], carte[position[0]][position[1]] - carte[position[0]][position[1]] % 10 + rotation); // setPosition(position => [position[0] + deplacement[0], position[1] + deplacement[1]])\n\n        doAction(\"Deplacement\");\n        updateCarte(position, 0);\n        setDeplacementEnCours({\n          type: 2,\n          rotation: rotation\n        });\n        setTimeout(() => {\n          setDeplacementEnCours({\n            type: 0,\n            rotation: rotation\n          });\n        }, 500);\n      }, 500);\n    }\n  };\n\n  const handleChangePiece = () => {\n    resetHistAction();\n  };\n\n  const handleClicDoor = ouvrir => {\n    // position, ouvert/fermé\n    setBtnClickedBottom(ouvrir ? 4 : 5);\n    let valueAvant;\n    let valueApres;\n\n    if (ouvrir) {\n      valueAvant = 5;\n      valueApres = 6;\n    } else {\n      valueAvant = 6;\n      valueApres = 5;\n    }\n\n    doAction(\"Porte\");\n\n    try {\n      if (mursH[position[0]][position[1]] == valueAvant) updateMurH([position[0], position[1]], valueApres);\n      if (mursH[position[0] + 1][position[1]] == valueAvant) updateMurH([position[0] + 1, position[1]], valueApres);\n      if (mursV[position[0]][position[1]] == valueAvant) updateMurV([position[0], position[1]], valueApres);\n      if (mursV[position[0]][position[1] + 1] == valueAvant) updateMurV([position[0], position[1] + 1], valueApres);\n    } catch (error) {}\n  };\n\n  const handleClicExtincteur = num => {\n    // 0 FEU, 1 FEUFUM, 2 FUM\n    if (btnClickedBottom != num) {\n      var listeCasesAction = [];\n      let valeurAvant = 4;\n      let valeurApres = 0;\n      setBtnClickedBottom(num);\n\n      switch (num) {\n        case 0:\n          // ETEINDRE FEU\n          break;\n\n        case 1:\n          // FEU FUM\n          valeurApres = 3;\n          break;\n\n        case 2:\n          // ETEINDRE FUMEE\n          valeurAvant = 3;\n          break;\n      }\n\n      try {\n        if (carte[position[0] - 1][position[1]] == valeurAvant) listeCasesAction.push([position[0] - 1, position[1], valeurAvant, valeurApres]); // TOP\n      } catch (error) {}\n\n      try {\n        if (carte[position[0]][position[1] + 1] == valeurAvant) listeCasesAction.push([position[0], position[1] + 1, valeurAvant, valeurApres]); // RIGHT\n      } catch (error) {}\n\n      try {\n        if (carte[position[0] + 1][position[1]] == valeurAvant) listeCasesAction.push([position[0] + 1, position[1], valeurAvant, valeurApres]); // BOTTOM\n      } catch (error) {}\n\n      try {\n        if (carte[position[0]][position[1] - 1] == valeurAvant) listeCasesAction.push([position[0], position[1] - 1, valeurAvant, valeurApres]); // LEFT\n      } catch (error) {}\n\n      setPropositionsCase(listeCasesAction);\n    } else {\n      setBtnClickedBottom(null);\n    }\n  };\n\n  const handleClicMarqueur = () => {\n    if (btnClickedBottom != 3) {\n      setBtnClickedBottom(3);\n\n      if (propositionMursDetruire[0].length > 0 || propositionMursDetruire[1].length > 0) {\n        setPropositionMursDetruire([[], []]);\n      } else {\n        const mursADetruire = [1, 3, 5, 6];\n        var propositions = [[], []];\n        const mursAutour = getMursAutour();\n\n        try {\n          if (mursADetruire.includes(mursAutour[0])) propositions[0].push([position[1], position[0]]); // top\n\n          if (mursADetruire.includes(mursAutour[1])) propositions[1].push([position[1] + 1, position[0]]); // right\n\n          if (mursADetruire.includes(mursAutour[2])) propositions[0].push([position[1], position[0] + 1]); // bottom\n\n          if (mursADetruire.includes(mursAutour[3])) propositions[1].push([position[1], position[0]]); // left\n        } catch (error) {}\n\n        setPropositionMursDetruire(propositions);\n      }\n    } else {\n      setBtnClickedBottom(null);\n    }\n  };\n\n  const handleClicValidated = async bool => {\n    if (configuration != null) {\n      if (bool) {\n        let prochainPomp = currentPomp + 1;\n        let prochainTour = currentTour;\n        let prochainCycle = currentCycle;\n        let prochaineSequence = currentSequence;\n\n        if (numPompier == configuration.nbPompEquipe.valeur) {\n          // DERNIER POMP DU TOUR\n          if (currentTour == configuration.nbToursParCycle.valeur) {\n            // SEND TO INTER\n            prochainTour = 1;\n            prochainPomp = 0; // A CHANGER AVEC STRATEGIQUE\n\n            if (prochainCycle == configuration.nbCyclesParSequence.valeur) {\n              prochainCycle = 1;\n              prochaineSequence = prochaineSequence + 1;\n            } else {\n              prochainCycle = prochainCycle + 1;\n            }\n          } else {\n            // PAS DERNIER TOUR DU CYCLE\n            console.log(\"pas dernier tour\");\n            prochainPomp = 1;\n            prochainTour = prochainTour + 1;\n          }\n        } // console.log(prochainPomp,prochainTour,prochainCycle)\n\n\n        const budgetsFin = await modifyBudgetsFin(currentCycle, currentSequence);\n        PlayAPI.nouveauTour(prochainPomp, carte, mursH, mursV, prochaineSequence, prochainCycle, prochainTour, resultats.Decedes, resultats.Sauves, session, equipe, configuration.chronoTour.valeur);\n        console.log(\"validé\"); // setChrono(configuration.chronoTour.valeur)\n      } else {\n        retourAction();\n        console.log(\"retour\");\n      }\n    }\n  };\n\n  const handleNoClicked = () => {\n    setPropositionMursDetruire([[], []]);\n    setPropositionsCase([]);\n  };\n\n  const handleClicHabitant = () => {\n    if (btnClickedBottom != 6) {\n      setBtnClickedBottom(6);\n      const valeurApres = 0;\n      var listeCasesAction = [];\n\n      try {\n        const valeurDessus = carte[position[0] - 1][position[1]];\n        if (Math.floor(valeurDessus / 10) == 2) listeCasesAction.push([position[0] - 1, position[1], valeurDessus, valeurApres]); // TOP\n      } catch (error) {}\n\n      try {\n        const valeurDroite = carte[position[0]][position[1] + 1];\n        if (Math.floor(valeurDroite / 10) == 2) listeCasesAction.push([position[0], position[1] + 1, valeurDroite, valeurApres]); // RIGHT\n      } catch (error) {}\n\n      try {\n        const valeurDessous = carte[position[0] + 1][position[1]];\n        if (Math.floor(valeurDessous / 10) == 2) listeCasesAction.push([position[0] + 1, position[1], valeurDessous, valeurApres]); // BOTTOM\n      } catch (error) {}\n\n      try {\n        const valeurGauche = carte[position[0]][position[1] - 1];\n        if (Math.floor(valeurGauche / 10) == 2) listeCasesAction.push([position[0], position[1] - 1, valeurGauche, valeurApres]); // LEFT\n      } catch (error) {}\n\n      setPropositionsCase(listeCasesAction);\n      console.log(\"handle clic habitant\");\n    } else {\n      setBtnClickedBottom(null);\n    }\n  };\n\n  const [textes, setTextes] = useState(null);\n  useEffect(() => {\n    const getTextes = async () => {\n      const textes = ContentsAPI.getTexts(\"jeuTactInterface\").then(res => {\n        setTextes(res);\n      });\n    };\n\n    if (textes == null) {\n      getTextes();\n    } // console.log(textes)\n\n  }, [textes]);\n\n  const getText = name => {\n    if (textes == null) {\n      return name;\n    } else {\n      try {\n        return textes[name].contenu;\n      } catch (error) {\n        console.log(textes);\n        return name;\n      }\n    }\n  };\n\n  const renderAttenteLancement = () => {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"default\",\n      children: getText('attenteLancement')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1140,\n      columnNumber: 6\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flex: 1,\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: carte.length > 0 && position != null && stocks !== null && numPompier !== null && play ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Grille, {\n        nbColonnesGrille: nbColonnesGrille,\n        nbLignesGrille: nbLignesGrille,\n        carte: carte,\n        position: position,\n        mursH: mursH,\n        mursV: mursV,\n        propositionMursDetruire: propositionMursDetruire,\n        propositionsCase: propositionsCase,\n        handleClicMur: handleClicMur,\n        handleClicCase: handleClicCase,\n        handleChangePiece: handleChangePiece,\n        deplacementEnCours: deplacementEnCours\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1153,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TactBandeauTop, {\n        stocks: stocks,\n        resultats: resultats,\n        numeroPompier: numPompier,\n        sequence: currentSequence,\n        cycle: currentCycle,\n        tour: currentTour,\n        pomp: currentPomp,\n        configuration: configuration,\n        budget: budget,\n        budgetDepense: budgetDepense,\n        equipe: equipe,\n        handleClicValidated: handleClicValidated,\n        play: play,\n        chronoInit: chrono,\n        numEquipe: equipe,\n        numSession: session\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TactBandeauBottom, {\n        interventions: interventions,\n        stocks: stocks,\n        numeroPompier: numPompier,\n        tour: currentTour,\n        pomp: currentPomp,\n        handleClicFleche: handleClicFleche,\n        handleClicValidated: handleClicValidated,\n        handleClicDoor: handleClicDoor,\n        handleClicMarqueur: handleClicMarqueur,\n        handleClicExt: handleClicExtincteur,\n        handleNoClicked: handleNoClicked,\n        handleClicHabitant: handleClicHabitant,\n        btnClickedBottom: btnClickedBottom,\n        mursAutour: getMursAutour(),\n        casesAutour: getCasesAutour(),\n        currentCase: carte[position[0]][position[1]],\n        histActions: histActions,\n        configuration: configuration,\n        deplacementEnCours: deplacementEnCours,\n        budgetMaxAtteint: budgetDepense >= configuration.budgetTourMax.valeur,\n        isLoading: isLoading.current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1188,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TactBandeauDroite, {\n        handleDisconnect: handleDisconnect,\n        configuration: configuration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1211,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : renderAttenteLancement()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1147,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TactInterface, \"BUhkZWbOPEGdbVvyPixMpj4PeIo=\", false, function () {\n  return [useHistory];\n});\n\n_c = TactInterface;\nexport default TactInterface; // export default React.memo(TactInterface)\n\nvar _c;\n\n$RefreshReg$(_c, \"TactInterface\");","map":{"version":3,"sources":["C:/Users/hugod/decitude/client/src/routes/TactInterface.js"],"names":["React","useState","useEffect","useRef","PlayAPI","TactBandeauTop","TactBandeauBottom","Grille","useHistory","Typography","cookie","TactBandeauDroite","ContentsAPI","TactInterface","history","user","load","handleDisconnect","save","path","maxAge","push","undefined","role","includes","play","setPlay","numPompier","setNumPompier","replace","currentPomp","setCurrentPomp","currentTour","setCurrentTour","currentCycle","setCurrentCycle","currentSequence","setCurrentSequence","session","setSession","equipe","setEquipe","position","setPosition","deplacementEnCours","setDeplacementEnCours","type","rotation","histActions","setHistActions","chrono","setChrono","configuration","setConfiguration","stocks","setStocks","resultats","setResultats","Decedes","Sauves","interventions","setInterventions","Deplacement","Feu","FeuFum","Fum","Marqueur","Porte","Habitant","budget","setBudget","budgetDepense","setBudgetDepense","isLoading","carte","setCarte","nbLignesGrille","setNbLignesGrille","nbColonnesGrille","setNbColonnesGrille","mursH","setMursH","mursV","setMursV","getPlayState","current","currentPlayState","Object","keys","length","parseInt","JSON","parse","valeur","resultatsDecedes","resultatsSauves","getBudget","c","currrentChrono","chronoTour","console","log","getPositionFromCarte","getPlayParameters","param","getConfiguration","forEach","ligne","indexI","indexJ","Math","floor","updateCarte","coords","value","error","updateMurH","m","updateMurV","updateBudget","action","depenses","bd","addHistAction","h","stringify","retourAction","pop","state","doAction","s","i","updateResultats","sauve","res","setBtnClickedBottom","revealHabitant","relacherHabitant","inter","interKeys","min","socket","getSocket","onTourChange","e","preventDefault","modifyBudgetsFin","cycle","sequence","budgetsFin","getBudgetsPompFin","b","index","numCycle","numSeq","equipements","saveBudgetsPompFin","nouveauBudget","budgetInter","stocksEq","on","data","y","x","start","test","deplacementAutorise","deplacement","dpl","dplInterditsCases","valeurCaseDeplacement","dplInterditsMurs","testRelacherHabitant","mursBloquants","setTimeout","casesAutour","getCasesAutour","dessus","resetHistAction","response","droite","dessous","gauche","cases","getMursAutour","murs","btnClickedBottom","propositionsCase","setPropositionsCase","propositionMursDetruire","setPropositionMursDetruire","handleClicCase","valeurAvant","valeurApres","coordX","coordY","handleClicMur","num","checkInCoords","numClic","cote","handleClicFleche","handleChangePiece","handleClicDoor","ouvrir","valueAvant","valueApres","handleClicExtincteur","listeCasesAction","handleClicMarqueur","mursADetruire","propositions","mursAutour","handleClicValidated","bool","prochainPomp","prochainTour","prochainCycle","prochaineSequence","nbPompEquipe","nbToursParCycle","nbCyclesParSequence","nouveauTour","handleNoClicked","handleClicHabitant","valeurDessus","valeurDroite","valeurDessous","valeurGauche","textes","setTextes","getTextes","getTexts","then","getText","name","contenu","renderAttenteLancement","display","alignItems","justifyContent","flex","width","height","budgetTourMax"],"mappings":"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","sourcesContent":["import \"../styles/App.css\"\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport PlayAPI from \"../API/PlayAPI\"\r\nimport TactBandeauTop from \"../components/interfaceJoueur/TactBandeauTop\"\r\nimport TactBandeauBottom from \"../components/interfaceJoueur/TactBandeauBottom\"\r\nimport Grille from \"../components/interfaceJoueur/Grille\"\r\nimport { useHistory } from 'react-router-dom';\r\nimport {Typography } from \"@material-ui/core\"\r\n\r\nimport cookie from 'react-cookies'\r\nimport TactBandeauDroite from \"../components/interfaceJoueur/TactBandeauDroite\"\r\nimport ContentsAPI from \"../API/ContentsAPI\"\r\n\r\n\r\nconst TactInterface = () => {\r\n\r\n  const history = useHistory()\r\n  const user = cookie.load(\"user\")\r\n\r\n  const handleDisconnect = () => {\r\n    cookie.save('user', \"disconnected\", {\r\n      path: '/',\r\n      maxAge: 60 * 60 * 1.5, //sec\r\n    })\r\n    history.push('/login');\r\n  }\r\n\r\n  if (user === null || user === undefined || user == \"disconnected\") history.push(\"/login\");\r\n  if (user !== null && user !== undefined && user.role !== undefined && !user.role.includes(\"TACT\")) handleDisconnect()\r\n  const [play, setPlay] = useState(false)\r\n\r\n\r\n\r\n  const [numPompier, setNumPompier] = useState(user !== null && user !== undefined && user.role !== undefined ? user.role.replace(\"TACT\", \"\") : null)\r\n  const [currentPomp, setCurrentPomp] = useState(null)\r\n  const [currentTour, setCurrentTour] = useState(null)\r\n  const [currentCycle, setCurrentCycle] = useState(null)\r\n  const [currentSequence, setCurrentSequence] = useState(null)\r\n  const [session, setSession] = useState(user != null ? user.session : null)\r\n  const [equipe, setEquipe] = useState(user != null ? user.equipe : null)\r\n  const [position, setPosition] = useState(null)\r\n  const [deplacementEnCours, setDeplacementEnCours] = useState({\r\n    type: 0,\r\n    rotation: 1\r\n  })\r\n  const [histActions, setHistActions] = useState([])\r\n  const [chrono, setChrono] = useState(null)\r\n  useEffect(() => {\r\n    if (numPompier == null) handleDisconnect()\r\n  }, [numPompier])\r\n\r\n\r\n\r\n\r\n  const [configuration, setConfiguration] = useState(null)\r\n\r\n  const [stocks, setStocks] = useState(null)\r\n\r\n  const [resultats, setResultats] = useState({\r\n    Decedes: 0,\r\n    Sauves: 0\r\n  })\r\n\r\n  const [interventions, setInterventions] = useState({\r\n    Deplacement: 0,\r\n    Feu: 0,\r\n    FeuFum: 0,\r\n    Fum: 0,\r\n    Marqueur: 0,\r\n    Porte: 0,\r\n    Habitant: 0\r\n  })\r\n\r\n  const [budget, setBudget] = useState(0)\r\n  const [budgetDepense, setBudgetDepense] = useState(0)\r\n\r\n\r\n  const isLoading = useRef(false)\r\n\r\n  // INITIALISATION DE LA CARTE\r\n\r\n  // const [carte, setCarte] = useState([\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  // ])\r\n\r\n  const [carte, setCarte] = useState([])\r\n\r\n  const [nbLignesGrille, setNbLignesGrille] = useState(0)\r\n  const [nbColonnesGrille, setNbColonnesGrille] = useState(0)\r\n\r\n  const [mursH, setMursH] = useState([\r\n    [1, 1, 1, 1, 1, 1, 2, 6, 1, 1, 1, 1, 2, 5, 1, 1],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 1, 1, 2, 6, 1, 6, 2, 1, 1, 1, 5, 2, 1, 1],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 6, 2, 1, 1, 1, 1, 1, 1, 1, 1]\r\n  ])\r\n\r\n  const [mursV, setMursV] = useState([\r\n    [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\r\n    [2, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\r\n    [5, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\r\n    [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n    [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1],\r\n    [1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 0, 0, 1],\r\n    [1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 0, 0, 2],\r\n    [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 5]\r\n  ])\r\n\r\n\r\n\r\n  // GET PLAY PARAMETERS \r\n  const getPlayState = async (session, equipe) => {\r\n    if (!isLoading.current) {\r\n      isLoading.current = true\r\n      const currentPlayState = await PlayAPI.getPlayState(session, equipe)\r\n      // console.log(currentPlayState)\r\n      if (Object.keys(currentPlayState).length > 0) {\r\n        // console.log(parseInt(JSON.parse(currentPlayState.currentTour.valeur)))\r\n\r\n        setCurrentPomp(parseInt(JSON.parse(currentPlayState.currentPomp.valeur)))\r\n        setCurrentTour(parseInt(JSON.parse(currentPlayState.currentTour.valeur)))\r\n        setCurrentCycle(parseInt(JSON.parse(currentPlayState.currentCycle.valeur)))\r\n        setCurrentSequence(parseInt(JSON.parse(currentPlayState.currentSequence.valeur)))\r\n\r\n        setMursH(JSON.parse(currentPlayState.mursH.valeur))\r\n        setMursV(JSON.parse(currentPlayState.mursV.valeur))\r\n        setCarte(JSON.parse(currentPlayState.carte.valeur))\r\n        setResultats({\r\n          Decedes: parseInt(JSON.parse(currentPlayState.resultatsDecedes.valeur)),\r\n          Sauves: parseInt(JSON.parse(currentPlayState.resultatsSauves.valeur)),\r\n        })\r\n        setPlay(JSON.parse(currentPlayState.play.valeur))\r\n        // if(parseInt(JSON.parse(currentPlayState.currentPomp.valeur))==1 && parseInt(JSON.parse(currentPlayState.currentTour.valeur))==1){\r\n        getBudget(parseInt(JSON.parse(currentPlayState.currentCycle.valeur)), parseInt(JSON.parse(currentPlayState.currentSequence.valeur)))\r\n        //  }\r\n        const c = parseInt(JSON.parse(currentPlayState.currrentChrono.valeur))\r\n        if (configuration !== null && c <= configuration.chronoTour.valeur && parseInt(JSON.parse(currentPlayState.currentPomp.valeur)) == numPompier) {\r\n          setChrono(c)\r\n          console.log(\"chrono c\")\r\n        } else {\r\n          setChrono(null)\r\n          // console.log(\"chrono\")\r\n        }\r\n      }\r\n      getPositionFromCarte(JSON.parse(currentPlayState.carte.valeur))\r\n      isLoading.current = false\r\n    }\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    // console.log(carte)\r\n    if (carte.length > 0) {\r\n      setNbLignesGrille(carte.length)\r\n      setNbColonnesGrille(carte[0].length)\r\n      getPositionFromCarte(carte)\r\n    }\r\n\r\n  }, [carte])\r\n\r\n  // useEffect(()=>{\r\n  //   console.log(currentTour)\r\n  // },[currentTour])\r\n\r\n\r\n  useEffect(() => {\r\n    if (session != null && equipe != null && currentTour == null) {\r\n      if (!isLoading.current && configuration !== null) getPlayState(session, equipe)\r\n      getPlayParameters()\r\n      getPositionFromCarte(carte)\r\n    }\r\n  }, [session, equipe, numPompier, configuration])\r\n\r\n  const getPlayParameters = async () => {\r\n    const param = await PlayAPI.getConfiguration(session)\r\n    setConfiguration(param)\r\n  }\r\n\r\n  const getPositionFromCarte = (carte) => {\r\n    if (carte != null && carte.length > 0) {\r\n      carte.forEach((ligne, indexI) => {\r\n        ligne.forEach((valeur, indexJ) => {\r\n\r\n          if (Math.floor(valeur / 1000) == 1 && Math.floor(valeur % 1000 / 100) == numPompier) {\r\n            setPosition([indexI, indexJ])\r\n            setDeplacementEnCours({\r\n              type: 0,\r\n              rotation: valeur % 10\r\n            })\r\n          }\r\n\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // const onTextChange = (e) => {\r\n  //   setNumPompier(e.target.value)\r\n  //   console.log(typeof (e.target.value))\r\n  // }\r\n\r\n  // const onXChange = (e) => {\r\n  //   e.preventDefault()\r\n  //   if (e.target.value.length > 0) {\r\n  //     updateCarte(position, 0)\r\n  //     setPosition(position => [position[0], parseInt(e.target.value)])\r\n  //   } else {\r\n  //     updateCarte(position, 0)\r\n  //     setPosition(position => [position[0], 0])\r\n  //   }\r\n\r\n  // }\r\n  // const onYChange = (e) => {\r\n  //   e.preventDefault()\r\n  //   if (e.target.value.length > 0) {\r\n  //     updateCarte(position, 0)\r\n  //     setPosition(position => [parseInt(e.target.value), position[1]])\r\n  //   } else {\r\n  //     updateCarte(position, 0)\r\n  //     setPosition(position => [0, position[1]])\r\n  //   }\r\n  // }\r\n\r\n\r\n  // UPDATES\r\n  const updateCarte = (coords, value) => {\r\n    if (coords[0] < nbLignesGrille && coords[1] < nbColonnesGrille) {\r\n      try {\r\n        var c = [...carte]\r\n        c[coords[0]][coords[1]] = value\r\n        setCarte(c)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  const updateMurH = (coords, value) => {\r\n    if (coords[0] < mursH.length && coords[1] < mursH[0].length) {\r\n      try {\r\n        var m = [...mursH]\r\n        m[coords[0]][coords[1]] = value\r\n        setMursH(m)\r\n\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n  }\r\n  const updateMurV = (coords, value) => {\r\n    if (coords[0] < mursV.length && coords[1] < mursV[0].length) {\r\n      try {\r\n        var m = [...mursV]\r\n        m[coords[0]][coords[1]] = value\r\n        setMursV(m)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // ACTIONS\r\n\r\n  const updateBudget = (action) => {\r\n    var depenses = 0\r\n    if (configuration[\"coutEq\" + action] != null) depenses += configuration[\"coutEq\" + action].valeur\r\n    if (configuration[\"coutInter\" + action] != null) depenses += configuration[\"coutInter\" + action].valeur\r\n    setBudget(budget => budget - depenses)\r\n    setBudgetDepense(bd => bd + depenses)\r\n  }\r\n\r\n\r\n\r\n\r\n  const addHistAction = (budget, budgetDepense) => {\r\n    const h = [...histActions, {\r\n      carte: JSON.stringify(carte),\r\n      budget: JSON.stringify(budget),\r\n      budgetDepense: JSON.stringify(budgetDepense),\r\n      mursH: JSON.stringify(mursH),\r\n      mursV: JSON.stringify(mursV),\r\n      stocks: JSON.stringify(stocks),\r\n      resultats: JSON.stringify(resultats),\r\n      interventions: JSON.stringify(interventions),\r\n      deplacementEnCours: JSON.stringify({\r\n        type: 0,\r\n        rotation: deplacementEnCours.rotation\r\n      })\r\n    }]\r\n\r\n\r\n    setHistActions(h)\r\n  }\r\n\r\n  const retourAction = () => {\r\n    isLoading.current = true\r\n    var h = [...histActions]\r\n    h.pop()\r\n    const state = h[h.length - 1]\r\n\r\n\r\n    setCarte(JSON.parse(state.carte))\r\n    setMursH(JSON.parse(state.mursH))\r\n    setMursV(JSON.parse(state.mursV))\r\n    setStocks(JSON.parse(state.stocks))\r\n    setInterventions(JSON.parse(state.interventions))\r\n    setResultats(JSON.parse(state.resultats))\r\n    setBudget(JSON.parse(state.budget))\r\n    setBudgetDepense(JSON.parse(state.budgetDepense))\r\n\r\n    setDeplacementEnCours(JSON.parse(state.deplacementEnCours))\r\n    setHistActions(h)\r\n\r\n    isLoading.current = false\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (position !== null && stocks !== null && budget > 0 && deplacementEnCours.type == 0 && (histActions[histActions.length - 1] == undefined || budget < histActions[histActions.length - 1].budget)) {\r\n      addHistAction(budget, budgetDepense)\r\n    }\r\n  }, [deplacementEnCours, budgetDepense, stocks])\r\n\r\n  useEffect(() => {\r\n    console.log(\"hist Actions\")\r\n    console.log(histActions)\r\n  }, [histActions])\r\n\r\n  // useEffect(()=>{\r\n  //   if( position!==null && budget>0){\r\n\r\n  //     if(histActions[histActions.length-1]!==undefined && budget<histActions[histActions.length-1].budget ){\r\n\r\n  //       addHistAction(budget)\r\n  //     }\r\n  //   }\r\n  // },[budget])\r\n\r\n  const doAction = (action) => {\r\n    try {\r\n      if (Object.keys(stocks).includes(action)) {\r\n        var s = stocks\r\n        s[action] = s[action] - 1\r\n        setStocks(s)\r\n      }\r\n\r\n    } catch (error) { }\r\n\r\n    try {\r\n      if (Object.keys(interventions).includes(action)) {\r\n        var i = interventions\r\n        i[action] = i[action] - 1\r\n        setInterventions(i)\r\n      }\r\n    } catch (error) { }\r\n\r\n    // setTimeout(() => {\r\n    updateBudget(action)\r\n    // }, 1000);\r\n\r\n  }\r\n\r\n  const updateResultats = (sauve) => {\r\n    var res = { ...resultats }\r\n    if (sauve) {\r\n      res.Sauves += 1\r\n    } else {\r\n      res.Decedes += 1\r\n    }\r\n    console.log(res)\r\n    setResultats(res)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setBtnClickedBottom(null)\r\n    revealHabitant()\r\n  }, [position])\r\n\r\n\r\n  useEffect(() => {\r\n    if (carte.length > 0) relacherHabitant()\r\n\r\n  }, [position, mursH, mursV])\r\n\r\n\r\n\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"Stocks\")\r\n  //   console.log(stocks)\r\n  // }, [stocks])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (configuration != null) {\r\n      var inter = interventions\r\n      const interKeys = Object.keys(inter)\r\n      interKeys.forEach(action => {\r\n        try {\r\n          if (configuration[\"coutInter\" + action].valeur > 0) {\r\n            inter[action] = Math.min(\r\n              configuration[\"coutEq\" + action] != null && configuration[\"coutEq\" + action] != undefined ? Math.floor(budget / (configuration[\"coutInter\" + action].valeur + configuration[\"coutEq\" + action].valeur)) : Math.floor(budget / configuration[\"coutInter\" + action].valeur),\r\n              stocks !== null && stocks[action] != null && stocks[action] != undefined && stocks[action] != \"NaN\" ? stocks[action] : 1000\r\n            )\r\n          }\r\n        } catch (error) {\r\n          console.log(error, action)\r\n        }\r\n\r\n      })\r\n      setInterventions(inter)\r\n\r\n    } else {\r\n      // getPlayParameters()\r\n    }\r\n  }, [budget, configuration, numPompier, stocks])\r\n\r\n  // SOCKETS\r\n  const socket = PlayAPI.getSocket()\r\n\r\n  // SOCKETS \r\n  const onTourChange = async (e) => {\r\n    e.preventDefault()\r\n    console.log(\"nouveau tour todo\")\r\n  }\r\n\r\n  const modifyBudgetsFin = async (cycle, sequence) => {\r\n    var budgetsFin = await PlayAPI.getBudgetsPompFin(session, equipe)\r\n    budgetsFin = JSON.parse(budgetsFin.valeur)\r\n\r\n    try {\r\n      budgetsFin.interventions.forEach((b, index) => {\r\n        if (b.numCycle == cycle && b.numSeq == sequence) {\r\n\r\n          budgetsFin[\"interventions\"][index][\"pomp\" + numPompier] = budget\r\n        }\r\n\r\n      })\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n    try {\r\n      budgetsFin.equipements.forEach((e, index) => {\r\n        if (e.numCycle == cycle && e.numSeq == sequence) {\r\n          budgetsFin[\"equipements\"][index][\"Feu\"][\"pomp\" + numPompier] = stocks.Feu\r\n          budgetsFin[\"equipements\"][index][\"FeuFum\"][\"pomp\" + numPompier] = stocks.FeuFum\r\n          budgetsFin[\"equipements\"][index][\"Fum\"][\"pomp\" + numPompier] = stocks.Fum\r\n          budgetsFin[\"equipements\"][index][\"Marqueur\"][\"pomp\" + numPompier] = stocks.Marqueur\r\n        }\r\n\r\n      })\r\n    } catch (error) {\r\n\r\n    }\r\n    PlayAPI.saveBudgetsPompFin(budgetsFin, session, equipe)\r\n    console.log(\"budgets modified\")\r\n    return budgetsFin\r\n  }\r\n\r\n  const getBudget = async (cycle, sequence) => {\r\n    var nouveauBudget = await PlayAPI.getBudgetsPompFin(session, equipe)\r\n    nouveauBudget = nouveauBudget.valeur\r\n    nouveauBudget = JSON.parse(nouveauBudget)\r\n\r\n    let budgetInter = 0\r\n    let stocksEq = stocks !== null && stocks !== undefined ? { ...stocks } : { Feu: 0, FeuFum: 0, Fum: 0, Marqueur: 0 }\r\n\r\n    try {\r\n      nouveauBudget.interventions.forEach((b) => {\r\n        if (b.numCycle == cycle && b.numSeq == sequence) {\r\n\r\n          budgetInter = b[\"pomp\" + numPompier]\r\n        }\r\n\r\n      })\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n    try {\r\n      nouveauBudget.equipements.forEach((e) => {\r\n        if (e.numCycle == cycle && e.numSeq == sequence) {\r\n          stocksEq.Feu += e.Feu[\"pomp\" + numPompier]\r\n          stocksEq.FeuFum += e.FeuFum[\"pomp\" + numPompier]\r\n          stocksEq.Fum += e.Fum[\"pomp\" + numPompier]\r\n          stocksEq.Marqueur += e.Marqueur[\"pomp\" + numPompier]\r\n        }\r\n\r\n      })\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n    console.log(nouveauBudget)\r\n    if (budgetInter !== budget) {\r\n      setBudget(budgetInter)\r\n      setBudgetDepense(0)\r\n\r\n    }\r\n    setStocks(stocksEq)\r\n\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    socket.on('changementTour', (data) => {\r\n      if (currentPomp != data.currentPomp || currentCycle !== data.currentCycle || currentTour !== data.currentTour || currentSequence !== data.currentSequence) {\r\n        console.log(\"changement tour\")\r\n        getPlayState(session, equipe)\r\n      }\r\n    })\r\n\r\n    socket.on('revealHabitant', (data) => {\r\n      if (carte !== null && carte.length > 0) {\r\n        // console.log(carte[data.y][data.x])\r\n        // console.log(carte[data.y])\r\n        if (carte[data.y][data.x] == 20) {\r\n          // console.log([data.y,data.x])\r\n          updateCarte([data.y, data.x], data.type)\r\n          // console.log(\"socket hab\")\r\n          // console.log(data)\r\n        }\r\n      }\r\n    })\r\n\r\n    socket.on('startStopPartie', (data) => {\r\n      setPlay(data.start)\r\n    });\r\n  });\r\n\r\n\r\n\r\n  // TESTS\r\n\r\n  const test = async () => {\r\n\r\n    console.log(\"test function\")\r\n  }\r\n\r\n\r\n\r\n\r\n  // AUTORISATIONS \r\n  const deplacementAutorise = (deplacement) => {\r\n    // return true\r\n    var dpl = [...deplacement]\r\n    if (dpl[0] == 0 && dpl[1] == 0) return false\r\n    if (position[0] + dpl[0] > carte.length - 1 || position[1] + dpl[1] > carte[0].length - 1 || position[0] + dpl[0] < 0 || position[1] + dpl[1] < 0) return false\r\n\r\n\r\n    const dplInterditsCases = [1000, 20, 3, 4]\r\n\r\n    try {\r\n      const valeurCaseDeplacement = carte[position[0] + dpl[0]][position[1] + dpl[1]]\r\n      if (Math.floor(valeurCaseDeplacement / 1000) == 1) return false\r\n      if (Math.floor(valeurCaseDeplacement / 10) == 2) return false\r\n      if (dplInterditsCases.includes(valeurCaseDeplacement)) return false\r\n    } catch (error) { }\r\n\r\n    const dplInterditsMurs = [1, 2, 3, 5]\r\n    try {\r\n      if (dpl[0] != 0) { // haut bas\r\n        if (dpl[0] < 0) {\r\n          dpl[0] = 0\r\n        }\r\n        if (typeof (mursH[position[0] + dpl[0]][position[1]]) === 'undefined') return false\r\n        if (dplInterditsMurs.includes(mursH[position[0] + dpl[0]][position[1]])) return false\r\n      } else { // gauche droite\r\n        if (dpl[1] < 0) {\r\n          dpl[1] = 0\r\n        }\r\n        if (typeof (mursV[position[0]][position[1] + dpl[1]]) === 'undefined') return false\r\n        if (dplInterditsMurs.includes(mursV[position[0]][position[1] + dpl[1]])) return false\r\n      }\r\n    } catch (error) { }\r\n\r\n\r\n\r\n\r\n    return true\r\n  }\r\n  const testRelacherHabitant = () => {\r\n    if (carte[position[0]][position[1]] % 100 < 10) return false // pas de transport d'habitant\r\n\r\n    const mursBloquants = [1, 2, 3, 5]\r\n\r\n    if (position[0] == 0 && !mursBloquants.includes(mursH[position[0]][position[1]])) return true // haut\r\n    if (position[0] == nbLignesGrille - 1 && !mursBloquants.includes(mursH[position[0] + 1][position[1]])) return true // bas\r\n\r\n    if (position[1] == 0 && !mursBloquants.includes(mursV[position[0]][position[1]])) return true // gauche\r\n    if (position[1] == nbColonnesGrille - 1 && !mursBloquants.includes(mursV[position[0]][position[1] + 1])) return true // droite\r\n\r\n    return false\r\n  }\r\n  const relacherHabitant = () => {\r\n    if (testRelacherHabitant()) {\r\n      setTimeout(() => {\r\n        updateResultats(true)\r\n        updateCarte(position, carte[position[0]][position[1]] - (carte[position[0]][position[1]] % 100 - carte[position[0]][position[1]] % 10))\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  const revealHabitant = async () => {\r\n\r\n    if (configuration != null) {\r\n      const casesAutour = getCasesAutour()\r\n\r\n      try {\r\n        if (casesAutour.dessus == 20) {\r\n          updateCarte([position[0] - 1, position[1]], 0)\r\n          resetHistAction()\r\n          const response = await PlayAPI.revealHabitant([position[0] - 1, position[1]], 0)\r\n        }\r\n      } catch (error) { }\r\n      try {\r\n        if (casesAutour.droite == 20) {\r\n          updateCarte([position[0], position[1] + 1], 0)\r\n          resetHistAction()\r\n          const response = await PlayAPI.revealHabitant([position[0], position[1] + 1], 0)\r\n\r\n        }\r\n      } catch (error) { }\r\n      try {\r\n        if (casesAutour.dessous == 20) {\r\n          updateCarte([position[0] + 1, position[1]], 0)\r\n          resetHistAction()\r\n          const response = await PlayAPI.revealHabitant([position[0] + 1, position[1]], 0)\r\n\r\n        }\r\n      } catch (error) { }\r\n      try {\r\n        if (casesAutour.gauche == 20) {\r\n          updateCarte([position[0], position[1] - 1], 0)\r\n          resetHistAction()\r\n          const response = await PlayAPI.revealHabitant([position[0], position[1] - 1], 0)\r\n\r\n        }\r\n      } catch (error) { }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  const getCasesAutour = () => {\r\n    var cases = {}\r\n\r\n    try {\r\n      cases[\"dessus\"] = (carte[position[0] - 1][position[1]]) // dessus\r\n    } catch (error) { }\r\n    try {\r\n      cases[\"droite\"] = (carte[position[0]][position[1] + 1]) // droite\r\n    } catch (error) { }\r\n    try {\r\n      cases[\"dessous\"] = (carte[position[0] + 1][position[1]]) // dessous\r\n    } catch (error) { }\r\n    try {\r\n      cases[\"gauche\"] = (carte[position[0]][position[1] - 1]) // gauche\r\n    } catch (error) { }\r\n    return cases\r\n  }\r\n  const getMursAutour = () => {\r\n    var murs = []\r\n\r\n    try {\r\n      if (mursH[position[0]][position[1]] != 4 || (mursH[position[0]][position[1] - 1] < 6 && mursH[position[0]][position[1] + 1] < 6)) {\r\n        murs.push(mursH[position[0]][position[1]]) // dessus\r\n      } else {\r\n        murs.push(0)\r\n      }\r\n    } catch (error) { }\r\n\r\n    try {\r\n      if (mursV[position[0]][position[1] + 1] != 4 || (mursV[position[0] - 1][position[1] + 1] < 6 && mursV[position[0] + 1][position[1] + 1] < 6)) {\r\n        murs.push(mursV[position[0]][position[1] + 1])  // droite\r\n      } else {\r\n        murs.push(0)\r\n      }\r\n    } catch (error) { }\r\n\r\n    try {\r\n      if (mursH[position[0] + 1][position[1]] != 4 || (mursH[position[0] + 1][position[1] - 1] < 6 && mursH[position[0] + 1][position[1] + 1] < 6)) {\r\n        murs.push(mursH[position[0] + 1][position[1]]) // dessous\r\n      } else {\r\n        murs.push(0)\r\n      }\r\n\r\n    } catch (error) { }\r\n    try {\r\n      if (mursV[position[0]][position[1]] != 4 || (mursV[position[0] - 1][position[1]] < 6 && mursV[position[0] + 1][position[1]] < 6)) {\r\n        murs.push(mursV[position[0]][position[1]])  // gauche\r\n      } else {\r\n        murs.push(0)\r\n      }\r\n    } catch (error) { }\r\n    // console.log(murs)\r\n    return murs\r\n  }\r\n\r\n  const resetHistAction = () => {\r\n    setTimeout(() => {\r\n      setHistActions([{\r\n        carte: JSON.stringify(carte),\r\n        budget: JSON.stringify(budget),\r\n        budgetDepense: JSON.stringify(budgetDepense),\r\n        mursH: JSON.stringify(mursH),\r\n        mursV: JSON.stringify(mursV),\r\n        stocks: JSON.stringify(stocks),\r\n        resultats: JSON.stringify(resultats),\r\n        interventions: JSON.stringify(interventions)\r\n      }])\r\n    }, 300);\r\n  }\r\n\r\n\r\n  const [btnClickedBottom, setBtnClickedBottom] = useState(null)\r\n  const [propositionsCase, setPropositionsCase] = useState([]) // Extincteurs\r\n  const [propositionMursDetruire, setPropositionMursDetruire] = useState([[], []]) // Horizontaux  , Verticaux\r\n  useEffect(() => {\r\n    if (btnClickedBottom != 3 || btnClickedBottom == null) {\r\n      setPropositionMursDetruire([[], []])\r\n    }\r\n    if ((btnClickedBottom > 2 && btnClickedBottom < 6) || btnClickedBottom == null) {\r\n      setPropositionsCase([])\r\n    }\r\n  }, [btnClickedBottom])\r\n\r\n\r\n\r\n\r\n  // HANDLERS CLIC GRILLE\r\n\r\n  const handleClicCase = (valeurAvant, valeurApres, coordX, coordY) => {\r\n\r\n    console.log(valeurAvant, valeurApres, coordX, coordY)\r\n    try {\r\n      updateCarte([coordY, coordX], valeurApres)\r\n      setPropositionsCase([])\r\n      setBtnClickedBottom(null)\r\n\r\n      if (valeurAvant == 4 && valeurApres == 0) { // Extincteur flamme\r\n        doAction(\"Feu\")\r\n      }\r\n      if (valeurAvant == 4 && valeurApres == 3) { // Feu Fumée\r\n        doAction(\"FeuFum\")\r\n      }\r\n      if (valeurAvant == 3 && valeurApres == 0) { // Fumée\r\n        doAction(\"Fum\")\r\n      }\r\n      if (Math.floor(valeurAvant / 10) == 2 && valeurApres == 0) { // Habitant\r\n        doAction(\"Habitant\")\r\n        updateCarte(position, carte[position[0]][position[1]] + valeurAvant % 10)\r\n      }\r\n    } catch (error) { }\r\n  }\r\n\r\n  const handleClicMur = (num, valeurAvant, coordX, coordY) => { // marqueur dégat\r\n    if (propositionMursDetruire[0].length > 0 || propositionMursDetruire[1].length > 0) {\r\n\r\n      const checkInCoords = (index) => {\r\n        // console.log(\"coordx\",coordX,\"coordy\",coordY,\"position\",position)\r\n\r\n        let numClic = null\r\n\r\n        if (coordX == position[1] && (coordY < position[0] || (coordY == position[0] && num == 0))) { // top\r\n          numClic = 0  // case en question\r\n          // console.log(\"top\",numClic)\r\n        }\r\n        if (coordX == position[1] && (coordY > position[0] || (coordY == position[0] && num == 2))) { // bottom\r\n          numClic = 2  // case en question\r\n          // console.log(\"bottom\",numClic)\r\n        }\r\n        if (coordY == position[0] && (coordX < position[1] || (coordX == position[1] && num == 3))) { // left\r\n          numClic = 3  // case en question\r\n          // console.log(\"left\",numClic)\r\n        }\r\n        if (coordY == position[0] && (coordX > position[1] || (coordX == position[1] && num == 1))) { // right\r\n          numClic = 1  // case en question\r\n          // console.log(\"right\",numClic)\r\n        }\r\n\r\n        return numClic\r\n      }\r\n\r\n      var cote = checkInCoords(num % 2)\r\n      let valeurApres = 4\r\n      if (valeurAvant == 1) valeurApres = 3\r\n\r\n      if (cote != null) {\r\n        try {\r\n          switch (cote) {\r\n            case 0:\r\n              updateMurH([position[0], position[1]], valeurApres)\r\n              // if(valeurAvant==5 ||)\r\n              break;\r\n            case 1:\r\n              updateMurV([position[0], position[1] + 1], valeurApres)\r\n              break;\r\n            case 2:\r\n              updateMurH([position[0] + 1, position[1]], valeurApres)\r\n              break;\r\n            case 3:\r\n              updateMurV([position[0], position[1]], valeurApres)\r\n              break;\r\n          }\r\n\r\n          doAction(\"Marqueur\")\r\n\r\n\r\n        } catch (error) {\r\n        }\r\n\r\n\r\n\r\n        setPropositionMursDetruire([[], []])\r\n        setBtnClickedBottom(null)\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  // HANDLER CLICS BOUTONS\r\n\r\n  const handleClicFleche = (num) => {\r\n    // Position y x\r\n    let deplacement\r\n    let rotation\r\n    switch (num) {\r\n      case 0: // haut\r\n        // console.log(\"haut\")\r\n        deplacement = [-1, 0]\r\n        rotation = 1\r\n        break;\r\n\r\n      case 1: // droite\r\n        // console.log(\"droite\")\r\n        deplacement = [0, 1]\r\n        rotation = 2\r\n        break;\r\n\r\n      case 2: // bas\r\n        // console.log(\"bas\")\r\n        deplacement = [1, 0]\r\n        rotation = 3\r\n        break;\r\n\r\n      case 3: // gauche\r\n        // console.log(\"gauche\")\r\n        deplacement = [0, -1]\r\n        rotation = 4\r\n        break;\r\n    }\r\n    if (deplacementAutorise(deplacement)) {\r\n\r\n      // ANIMATION MARCHE\r\n\r\n      setDeplacementEnCours({\r\n        type: 1,\r\n        rotation: rotation\r\n      })\r\n      setTimeout(() => {\r\n        updateCarte([position[0] + deplacement[0], position[1] + deplacement[1]], carte[position[0]][position[1]] - carte[position[0]][position[1]] % 10 + rotation)\r\n        // setPosition(position => [position[0] + deplacement[0], position[1] + deplacement[1]])\r\n        doAction(\"Deplacement\")\r\n        updateCarte(position, 0)\r\n\r\n\r\n        setDeplacementEnCours({\r\n          type: 2,\r\n          rotation: rotation\r\n        })\r\n        setTimeout(() => {\r\n          setDeplacementEnCours({\r\n            type: 0,\r\n            rotation: rotation\r\n          })\r\n        }, 500);\r\n\r\n      }, 500);\r\n\r\n\r\n    }\r\n  }\r\n\r\n  const handleChangePiece = () => {\r\n    resetHistAction()\r\n  }\r\n\r\n  const handleClicDoor = (ouvrir) => { // position, ouvert/fermé\r\n    setBtnClickedBottom(ouvrir ? 4 : 5)\r\n    let valueAvant\r\n    let valueApres\r\n\r\n    if (ouvrir) {\r\n      valueAvant = 5\r\n      valueApres = 6\r\n\r\n    } else {\r\n      valueAvant = 6\r\n      valueApres = 5\r\n    }\r\n    doAction(\"Porte\")\r\n    try {\r\n      if (mursH[position[0]][position[1]] == valueAvant) updateMurH([position[0], position[1]], valueApres)\r\n      if (mursH[position[0] + 1][position[1]] == valueAvant) updateMurH([position[0] + 1, position[1]], valueApres)\r\n      if (mursV[position[0]][position[1]] == valueAvant) updateMurV([position[0], position[1]], valueApres)\r\n      if (mursV[position[0]][position[1] + 1] == valueAvant) updateMurV([position[0], position[1] + 1], valueApres)\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  const handleClicExtincteur = (num) => {\r\n    // 0 FEU, 1 FEUFUM, 2 FUM\r\n    if (btnClickedBottom != num) {\r\n      var listeCasesAction = []\r\n      let valeurAvant = 4\r\n      let valeurApres = 0\r\n      setBtnClickedBottom(num)\r\n      switch (num) {\r\n        case 0: // ETEINDRE FEU\r\n          break;\r\n\r\n        case 1: // FEU FUM\r\n          valeurApres = 3\r\n          break;\r\n        case 2: // ETEINDRE FUMEE\r\n          valeurAvant = 3\r\n          break;\r\n      }\r\n\r\n      try {\r\n        if (carte[position[0] - 1][position[1]] == valeurAvant) listeCasesAction.push([position[0] - 1, position[1], valeurAvant, valeurApres]) // TOP\r\n      } catch (error) { }\r\n      try {\r\n        if (carte[position[0]][position[1] + 1] == valeurAvant) listeCasesAction.push([position[0], position[1] + 1, valeurAvant, valeurApres]) // RIGHT\r\n      } catch (error) { }\r\n      try {\r\n        if (carte[position[0] + 1][position[1]] == valeurAvant) listeCasesAction.push([position[0] + 1, position[1], valeurAvant, valeurApres]) // BOTTOM\r\n      } catch (error) { }\r\n      try {\r\n        if (carte[position[0]][position[1] - 1] == valeurAvant) listeCasesAction.push([position[0], position[1] - 1, valeurAvant, valeurApres]) // LEFT\r\n      } catch (error) { }\r\n\r\n      setPropositionsCase(listeCasesAction)\r\n    } else {\r\n      setBtnClickedBottom(null)\r\n    }\r\n\r\n  }\r\n\r\n  const handleClicMarqueur = () => {\r\n    if (btnClickedBottom != 3) {\r\n      setBtnClickedBottom(3)\r\n      if (propositionMursDetruire[0].length > 0 || propositionMursDetruire[1].length > 0) {\r\n        setPropositionMursDetruire([[], []])\r\n      } else {\r\n        const mursADetruire = [1, 3, 5, 6]\r\n        var propositions = [\r\n          [],\r\n          []\r\n        ]\r\n        const mursAutour = getMursAutour()\r\n\r\n        try {\r\n          if (mursADetruire.includes(mursAutour[0])) propositions[0].push([position[1], position[0]]) // top\r\n          if (mursADetruire.includes(mursAutour[1])) propositions[1].push([position[1] + 1, position[0]]) // right\r\n          if (mursADetruire.includes(mursAutour[2])) propositions[0].push([position[1], position[0] + 1]) // bottom\r\n          if (mursADetruire.includes(mursAutour[3])) propositions[1].push([position[1], position[0]]) // left\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n        setPropositionMursDetruire(propositions)\r\n\r\n      }\r\n    } else {\r\n      setBtnClickedBottom(null)\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const handleClicValidated = async (bool) => {\r\n    if (configuration != null) {\r\n      if (bool) {\r\n\r\n\r\n        let prochainPomp = currentPomp + 1\r\n        let prochainTour = currentTour\r\n        let prochainCycle = currentCycle\r\n        let prochaineSequence = currentSequence\r\n\r\n\r\n\r\n        if (numPompier == configuration.nbPompEquipe.valeur) { // DERNIER POMP DU TOUR\r\n          if (currentTour == configuration.nbToursParCycle.valeur) { // SEND TO INTER\r\n            prochainTour = 1\r\n            prochainPomp = 0 // A CHANGER AVEC STRATEGIQUE\r\n\r\n            if (prochainCycle == configuration.nbCyclesParSequence.valeur) {\r\n              prochainCycle = 1\r\n              prochaineSequence = prochaineSequence + 1\r\n            } else {\r\n              prochainCycle = prochainCycle + 1\r\n            }\r\n\r\n\r\n          } else { // PAS DERNIER TOUR DU CYCLE\r\n            console.log(\"pas dernier tour\")\r\n            prochainPomp = 1\r\n            prochainTour = prochainTour + 1\r\n\r\n\r\n          }\r\n\r\n        }\r\n\r\n        // console.log(prochainPomp,prochainTour,prochainCycle)\r\n\r\n\r\n\r\n\r\n        const budgetsFin = await modifyBudgetsFin(currentCycle, currentSequence)\r\n\r\n\r\n        PlayAPI.nouveauTour(prochainPomp, carte, mursH, mursV, prochaineSequence, prochainCycle, prochainTour, resultats.Decedes, resultats.Sauves, session, equipe, configuration.chronoTour.valeur)\r\n        console.log(\"validé\")\r\n        // setChrono(configuration.chronoTour.valeur)\r\n      } else {\r\n        retourAction()\r\n        console.log(\"retour\")\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  const handleNoClicked = () => {\r\n    setPropositionMursDetruire([[], []])\r\n    setPropositionsCase([])\r\n  }\r\n\r\n  const handleClicHabitant = () => {\r\n    if (btnClickedBottom != 6) {\r\n      setBtnClickedBottom(6)\r\n      const valeurApres = 0\r\n      var listeCasesAction = []\r\n      try {\r\n        const valeurDessus = carte[position[0] - 1][position[1]]\r\n        if (Math.floor(valeurDessus / 10) == 2) listeCasesAction.push([position[0] - 1, position[1], valeurDessus, valeurApres]) // TOP\r\n      } catch (error) { }\r\n      try {\r\n        const valeurDroite = carte[position[0]][position[1] + 1]\r\n        if (Math.floor(valeurDroite / 10) == 2) listeCasesAction.push([position[0], position[1] + 1, valeurDroite, valeurApres]) // RIGHT\r\n      } catch (error) { }\r\n      try {\r\n        const valeurDessous = carte[position[0] + 1][position[1]]\r\n        if (Math.floor(valeurDessous / 10) == 2) listeCasesAction.push([position[0] + 1, position[1], valeurDessous, valeurApres]) // BOTTOM\r\n      } catch (error) { }\r\n      try {\r\n        const valeurGauche = carte[position[0]][position[1] - 1]\r\n        if (Math.floor(valeurGauche / 10) == 2) listeCasesAction.push([position[0], position[1] - 1, valeurGauche, valeurApres]) // LEFT\r\n      } catch (error) { }\r\n\r\n      setPropositionsCase(listeCasesAction)\r\n\r\n\r\n      console.log(\"handle clic habitant\")\r\n    } else {\r\n      setBtnClickedBottom(null)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const [textes, setTextes] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const getTextes = async () => {\r\n            const textes = ContentsAPI.getTexts(\"jeuTactInterface\").then(\r\n                (res) => { setTextes(res) }\r\n            )\r\n        }\r\n        if (textes == null) {\r\n            getTextes()\r\n        }\r\n        // console.log(textes)\r\n    }, [textes])\r\n\r\n   \r\n\r\n\r\n    const getText = (name) => {\r\n        if (textes == null) {\r\n            return name\r\n        } else {\r\n            try {\r\n                return textes[name].contenu\r\n            } catch (error) {\r\n                console.log(textes)\r\n                return name\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n  const renderAttenteLancement=()=>{\r\n    \r\n    return(\r\n     <Typography color=\"default\">{getText('attenteLancement')}</Typography> \r\n    )\r\n  }\r\n  return (\r\n\r\n\r\n\r\n    <div style={{ position: \"absolute\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\", flex: 1, width: \"100%\", height: \"100%\" }}>\r\n\r\n      {\r\n        carte.length > 0 && position != null && stocks !== null && numPompier !== null && play ?\r\n          <>\r\n\r\n            <Grille\r\n              nbColonnesGrille={nbColonnesGrille}\r\n              nbLignesGrille={nbLignesGrille}\r\n              carte={carte}\r\n              position={position}\r\n              mursH={mursH}\r\n              mursV={mursV}\r\n              propositionMursDetruire={propositionMursDetruire}\r\n              propositionsCase={propositionsCase}\r\n              handleClicMur={handleClicMur}\r\n              handleClicCase={handleClicCase}\r\n              handleChangePiece={handleChangePiece}\r\n              deplacementEnCours={deplacementEnCours}\r\n\r\n            />\r\n\r\n            <TactBandeauTop\r\n              stocks={stocks}\r\n              resultats={resultats}\r\n              numeroPompier={numPompier}\r\n              sequence={currentSequence}\r\n              cycle={currentCycle}\r\n              tour={currentTour}\r\n              pomp={currentPomp}\r\n              configuration={configuration}\r\n              budget={budget}\r\n              budgetDepense={budgetDepense}\r\n              equipe={equipe}\r\n              handleClicValidated={handleClicValidated}\r\n              play={play}\r\n              chronoInit={chrono}\r\n              numEquipe={equipe}\r\n              numSession={session}\r\n            />\r\n\r\n            <TactBandeauBottom\r\n              interventions={interventions}\r\n              stocks={stocks}\r\n              numeroPompier={numPompier}\r\n              tour={currentTour}\r\n              pomp={currentPomp}\r\n              handleClicFleche={handleClicFleche}\r\n              handleClicValidated={handleClicValidated}\r\n              handleClicDoor={handleClicDoor}\r\n              handleClicMarqueur={handleClicMarqueur}\r\n              handleClicExt={handleClicExtincteur}\r\n              handleNoClicked={handleNoClicked}\r\n              handleClicHabitant={handleClicHabitant}\r\n              btnClickedBottom={btnClickedBottom}\r\n              mursAutour={getMursAutour()}\r\n              casesAutour={getCasesAutour()}\r\n              currentCase={carte[position[0]][position[1]]}\r\n              histActions={histActions}\r\n              configuration={configuration}\r\n              deplacementEnCours={deplacementEnCours}\r\n              budgetMaxAtteint={budgetDepense >= configuration.budgetTourMax.valeur}\r\n              isLoading={isLoading.current}\r\n            />\r\n            <TactBandeauDroite\r\n              handleDisconnect={handleDisconnect}\r\n              configuration={configuration}\r\n            />\r\n          </>\r\n          : \r\n          renderAttenteLancement()\r\n\r\n        }\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default TactInterface;\r\n\r\n\r\n// export default React.memo(TactInterface)"]},"metadata":{},"sourceType":"module"}