{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\decitude\\\\client\\\\src\\\\components\\\\pieces\\\\MurPiece.js\";\nimport { withWidth } from '@material-ui/core';\nimport zIndex from '@material-ui/core/styles/zIndex';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MurPiece = ({\n  num,\n  height,\n  width,\n  type,\n  coordX,\n  coordY,\n  maxColonnesPiece,\n  maxLignesPiece\n}) => {\n  const epaisseurInit = 1;\n  const epaisseur = type > 0 ? type > 2 ? epaisseurInit * 8 : epaisseurInit * 4 : 1; // console.log(type)\n\n  const colors = [\"\", // 0 simple\n  \"black\", // 1 large\n  \"green\", // 2 marqueur dÃ©gat\n  \"#490000\", //3 porte closed\n  \"#490000\" //4 porte open\n  ];\n\n  const getTransform = () => {\n    if (num == 0 || num == 2) {\n      // horizontal\n      var facteurX = 1;\n      var facteurY = -1;\n\n      if (coordX <= maxColonnesPiece / 2 - 3) {\n        facteurX = -1;\n      }\n\n      if (coordY <= maxLignesPiece / 2 && coordX <= maxColonnesPiece / 2) {\n        facteurY = 1;\n      }\n\n      if (type == 3) {\n        facteurX = 0;\n      }\n\n      const translateX = facteurX * width * 0.9;\n      const translateY = facteurY * epaisseur / 1.5;\n      return 'translate(' + translateX + \"px,\" + translateY + \"px)\";\n    }\n\n    if (num == 1 || num == 3) {\n      // vertical\n      var facteurX = 1;\n      var facteurY = 1;\n\n      if (coordX > maxColonnesPiece / 2 + 2 || coordX == 5) {\n        facteurX = -1;\n      }\n\n      if (coordY < 6 || coordX == maxColonnesPiece - 1 || coordX == 5) {\n        facteurY = -1;\n      }\n\n      if (type == 3) {\n        facteurY = 0;\n      }\n\n      const translateX = facteurX * epaisseur / 1.5;\n      const translateY = facteurY * height * 0.9;\n      return 'translate(' + translateX + \"px,\" + translateY + \"px)\";\n    }\n  };\n\n  const getOpacity = () => {\n    // if(type==4){\n    if (coordY <= maxLignesPiece / 2 && coordX <= maxColonnesPiece / 2 && num == 2) return 0;\n    if ((coordY > maxLignesPiece / 2 || coordX > maxColonnesPiece / 2) && num == 0) return 0;\n    if (num == 1 && !(coordX > maxColonnesPiece / 2 + 2 || coordX == 5)) return 0;\n    if (num == 3 && coordX == 6) return 0; // if (coordX > maxColonnesPiece / 2 -5 && (coordY>=6 || coordX==6) && num==1) return 0\n    // if (coordX <= maxColonnesPiece / 2 -5 || (coordY>=6 || coordX==5) && num==3) return 0\n    // }\n\n    return 1;\n  };\n\n  const test = () => {\n    console.log(\"coords X \" + coordX + \" \" + maxColonnesPiece);\n    console.log(\"coords Y \" + coordY + \" \" + maxLignesPiece);\n  };\n\n  const renderPoignee = () => {\n    let component = [];\n\n    switch (num) {\n      case 0:\n        component.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              top: epaisseur,\n              height: epaisseur / 3,\n              backgroundColor: \"#9F9F9F\",\n              width: epaisseur / 2,\n              right: width * 0.2,\n              border: \"1px solid black\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              top: epaisseur * 1.3,\n              height: epaisseur,\n              backgroundColor: \"#DEDEDE\",\n              width: epaisseur,\n              right: width * 0.2 - epaisseur / 2 + epaisseur / 4,\n              borderRadius: \"100%\",\n              border: \"1px solid black\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true));\n        break;\n\n      case 2:\n        component.push( /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              top: epaisseur,\n              height: epaisseur / 3,\n              backgroundColor: \"#9F9F9F\",\n              width: epaisseur / 2,\n              right: width * 0.2,\n              border: \"1px solid black\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: \"absolute\",\n              top: -epaisseur * 1.3,\n              height: epaisseur,\n              backgroundColor: \"#DEDEDE\",\n              width: epaisseur,\n              right: width * 0.2 - epaisseur / 2 + epaisseur / 4,\n              borderRadius: \"100%\",\n              border: \"1px solid black\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true));\n        break;\n    }\n\n    return component;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => test(),\n    style: {\n      position: \"absolute\",\n      width: num % 2 == 0 ? width + 2 : epaisseur,\n      height: num % 2 == 1 ? height + 1 : epaisseur,\n      right: num == 1 ? -1 : null,\n      left: num % 2 == 0 || num == 3 ? -1 : null,\n      top: num == 0 || num % 2 == 1 ? -1 : null,\n      bottom: num == 2 ? 0 : null,\n      backgroundColor: type > 0 ? colors[type] : 'transparent',\n      zIndex: type == 3 || type == 4 ? 1 : 2,\n      transform: type == 3 || type == 4 ? getTransform() : '',\n      opacity: type == 3 || type == 4 ? getOpacity() : 1,\n      transition: type > 1 ? \"1s\" : \"\",\n      borderRadius: type > 2 ? 3 : 0,\n      border: type > 2 ? \"1px solid black\" : \"\"\n    },\n    children: type == 3 || type == 4 ? renderPoignee() : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MurPiece;\nexport default MurPiece;\n\nvar _c;\n\n$RefreshReg$(_c, \"MurPiece\");","map":{"version":3,"sources":["C:/Users/hugod/decitude/client/src/components/pieces/MurPiece.js"],"names":["withWidth","zIndex","React","useState","useEffect","MurPiece","num","height","width","type","coordX","coordY","maxColonnesPiece","maxLignesPiece","epaisseurInit","epaisseur","colors","getTransform","facteurX","facteurY","translateX","translateY","getOpacity","test","console","log","renderPoignee","component","push","position","top","backgroundColor","right","border","borderRadius","left","bottom","transform","opacity","transition"],"mappings":"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","sourcesContent":["import { withWidth } from '@material-ui/core';\r\nimport zIndex from '@material-ui/core/styles/zIndex';\r\nimport React, { useState, useEffect } from 'react'\r\n\r\nconst MurPiece = ({\r\n    num,\r\n    height,\r\n    width,\r\n    type,\r\n    coordX,\r\n    coordY,\r\n    maxColonnesPiece,\r\n    maxLignesPiece\r\n}) => {\r\n    const epaisseurInit = 1\r\n    const epaisseur = type > 0 ? type > 2 ? epaisseurInit * 8 : epaisseurInit * 4 : 1\r\n\r\n    // console.log(type)\r\n\r\n    const colors = [\r\n        \"\", // 0 simple\r\n        \"black\", // 1 large\r\n        \"green\", // 2 marqueur dÃ©gat\r\n        \"#490000\",//3 porte closed\r\n        \"#490000\",//4 porte open\r\n    ]\r\n\r\n    const getTransform = () => {\r\n        \r\n\r\n            if (num == 0 || num == 2) { // horizontal\r\n                var facteurX = 1 \r\n                var facteurY = -1\r\n                if (coordX <= maxColonnesPiece / 2 -3 ) {\r\n                    facteurX = -1\r\n                }\r\n\r\n                \r\n    \r\n                if(coordY<=maxLignesPiece/2 && coordX <= maxColonnesPiece / 2 ){\r\n                    facteurY=1\r\n                }\r\n                \r\n                if(type==3 ){\r\n                    facteurX=0\r\n                }\r\n                const translateX = facteurX * width * 0.9\r\n                const translateY = facteurY * epaisseur / 1.5\r\n                return 'translate(' + translateX + \"px,\" + translateY + \"px)\"\r\n            }\r\n\r\n            if(num==1 || num==3){ // vertical\r\n                var facteurX =1\r\n                var facteurY = 1\r\n                if ( coordX>maxColonnesPiece/2 +2|| coordX==5) {\r\n                    facteurX = -1\r\n                    \r\n                }\r\n    \r\n                if(coordY<6  || coordX==maxColonnesPiece-1 || coordX==5){\r\n                    facteurY=-1\r\n                }\r\n                \r\n                if(type==3 ){\r\n                    facteurY=0\r\n                }\r\n                const translateX = facteurX * epaisseur / 1.5\r\n                const translateY = facteurY * height *0.9\r\n                return 'translate(' + translateX + \"px,\" + translateY + \"px)\"\r\n            }\r\n           \r\n\r\n        }\r\n          \r\n      \r\n\r\n    const getOpacity=()=>{\r\n        // if(type==4){\r\n            if(coordY<=maxLignesPiece/2 && coordX <= maxColonnesPiece / 2 && num==2) return 0\r\n            if((coordY>maxLignesPiece/2 || coordX > maxColonnesPiece / 2) && num==0) return 0\r\n\r\n            if(num==1 && !(coordX>maxColonnesPiece/2 +2|| coordX==5 )) return 0 \r\n            if(num==3 && coordX==6) return 0\r\n            // if (coordX > maxColonnesPiece / 2 -5 && (coordY>=6 || coordX==6) && num==1) return 0\r\n            // if (coordX <= maxColonnesPiece / 2 -5 || (coordY>=6 || coordX==5) && num==3) return 0\r\n\r\n        // }\r\n       \r\n        \r\n        return 1\r\n    }\r\n\r\n\r\n    const test = () => {\r\n        console.log(\"coords X \"+coordX + \" \" + maxColonnesPiece)\r\n        console.log(\"coords Y \"+coordY + \" \" + maxLignesPiece)\r\n    }\r\n\r\n    const renderPoignee=()=>{\r\n        let component =[]\r\n\r\n        switch (num) {\r\n            case 0:\r\n                component.push(\r\n                    <>\r\n                        <div style={{\r\n                            position:\"absolute\",\r\n                            top:epaisseur,\r\n                            height:epaisseur/3,\r\n                            backgroundColor:\"#9F9F9F\",\r\n                            width:epaisseur/2,\r\n                            right:width*0.2,\r\n                            border:\"1px solid black\"\r\n                        }}/>\r\n                        <div style={{\r\n                            position:\"absolute\",\r\n                            top:epaisseur*1.3,\r\n                            height:epaisseur,\r\n                            backgroundColor:\"#DEDEDE\",\r\n                            width:epaisseur,\r\n                            right:width*0.2-epaisseur/2+epaisseur/4,\r\n                            borderRadius:\"100%\",\r\n                            border:\"1px solid black\"\r\n                        }}/>\r\n                    </>\r\n                )\r\n                break;\r\n        \r\n\r\n            case 2:\r\n                component.push(\r\n                    <>\r\n                        <div style={{\r\n                            position:\"absolute\",\r\n                            top:epaisseur,\r\n                            height:epaisseur/3,\r\n                            backgroundColor:\"#9F9F9F\",\r\n                            width:epaisseur/2,\r\n                            right:width*0.2,\r\n                            border:\"1px solid black\"\r\n                        }}/>\r\n                        <div style={{\r\n                            position:\"absolute\",\r\n                            top:-epaisseur*1.3,\r\n                            height:epaisseur,\r\n                            backgroundColor:\"#DEDEDE\",\r\n                            width:epaisseur,\r\n                            right:width*0.2-epaisseur/2+epaisseur/4,\r\n                            borderRadius:\"100%\",\r\n                            border:\"1px solid black\"\r\n                        }}/>\r\n                    </>\r\n                )\r\n                break;\r\n        }\r\n\r\n\r\n        return(component)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onClick={() => test()}\r\n            style={{\r\n                position: \"absolute\",\r\n                width: num % 2 == 0 ? width + 2 : epaisseur,\r\n                height: num % 2 == 1 ? height + 1 : epaisseur,\r\n                right: num == 1 ? -1 : null,\r\n                left: num % 2 == 0 || num == 3 ? -1 : null,\r\n                top: num == 0 || num % 2 == 1 ? -1 : null,\r\n                bottom: num == 2 ? 0 : null,\r\n                backgroundColor: (type > 0) ? colors[type] : 'transparent',\r\n                zIndex: type == 3 || type == 4 ? 1 : 2,\r\n                transform: type == 3 || type == 4  ? getTransform() : '',\r\n                opacity:type == 3 || type == 4  ? getOpacity() : 1,\r\n                transition:type>1 ? \"1s\":  \"\",\r\n                borderRadius:type>2 ? 3 : 0,\r\n                border:type>2 ? \"1px solid black\" : \"\"\r\n            }}\r\n        >\r\n            {\r\n                type==3 || type==4 ? \r\n\r\n                  renderPoignee()\r\n                \r\n                :\r\n                null\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default MurPiece;"]},"metadata":{},"sourceType":"module"}