{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\d\\xE9citude\\\\client\\\\src\\\\routes\\\\InterfaceTact.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/App.css\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport PlayAPI from \"../API/PlayAPI\";\nimport BandeauTop from \"../components/interfaceJoueur/BandeauTop\";\nimport BandeauBottom from \"../components/interfaceJoueur/BandeauBottom\";\nimport Grille from \"../components/interfaceJoueur/Grille\";\nimport { useHistory } from 'react-router-dom';\nimport cookie from 'react-cookies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InterfaceTact = () => {\n  _s();\n\n  const history = useHistory();\n  const user = cookie.load(\"user\"); // console.log(user)\n\n  if (user == null || user == undefined) history.push(\"/login\");\n  const [numPompier, setNumPompier] = useState(user.role.replace(\"TACT\", \"\"));\n  const [currentTour, setCurrentTour] = useState(null);\n  const [currentCycle, setCurrentCycle] = useState(null);\n  const [session, setSession] = useState(user.session);\n  const [equipe, setEquipe] = useState(user.equipe);\n  const [chrono, setChrono] = useState(null);\n  useEffect(() => {\n    if (currentTour == numPompier) {\n      if (chrono > 0) {\n        var chronoTimer = setInterval(() => {\n          setChrono(chrono => chrono - 1);\n        }, 1000);\n      }\n\n      return () => {\n        clearInterval(chronoTimer);\n      };\n    }\n  }, [chrono]);\n  const [configuration, setConfiguration] = useState(null);\n  useEffect(() => {\n    console.log(configuration);\n  }, [configuration]);\n  const [stocks, setStocks] = useState({\n    Interventions: 10,\n    Feu: 1,\n    FeuFum: 10,\n    Fum: 10,\n    Marqueur: 10\n  });\n  const [resultats, setResultats] = useState({\n    Decedes: 0,\n    Sauves: 0\n  });\n  const [interventions, setInterventions] = useState({\n    Deplacement: 0,\n    Feu: 0,\n    FeuFum: 0,\n    Fum: 0,\n    Marqueur: 0,\n    Porte: 0,\n    Habitant: 0\n  });\n  const [budget, setBudget] = useState(800);\n  const [position, setPosition] = useState(null);\n  const isLoading = useRef(false); // INITIALISATION DE LA CARTE\n  // const [carte, setCarte] = useState([\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  // ])\n\n  const [carte, setCarte] = useState([]);\n  const [nbLignesGrille, setNbLignesGrille] = useState(0);\n  const [nbColonnesGrille, setNbColonnesGrille] = useState(0);\n  const [mursH, setMursH] = useState([[1, 1, 1, 1, 1, 1, 2, 6, 1, 1, 1, 1, 2, 5, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 2, 6, 1, 6, 2, 1, 1, 1, 5, 2, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 6, 2, 1, 1, 1, 1, 1, 1, 1, 1]]);\n  const [mursV, setMursV] = useState([[1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [2, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [5, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 0, 0, 2], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 5]]); // GET PLAY PARAMETERS \n\n  const getPlayState = async (session, equipe) => {\n    if (!isLoading.current) {\n      isLoading.current = true;\n      const currentPlayState = await PlayAPI.getPlayState(session, equipe);\n\n      if (Object.keys(currentPlayState).length > 0) {\n        console.log(\"Get play state 2\");\n        console.log(parseInt(JSON.parse(currentPlayState.currentTour.valeur)));\n        setCurrentTour(parseInt(JSON.parse(currentPlayState.currentTour.valeur)));\n        setCurrentCycle(parseInt(JSON.parse(currentPlayState.currentCycle.valeur)));\n        setMursH(JSON.parse(currentPlayState.mursH.valeur));\n        setMursV(JSON.parse(currentPlayState.mursV.valeur));\n        setCarte(JSON.parse(currentPlayState.carte.valeur));\n        setResultats({\n          Decedes: parseInt(JSON.parse(currentPlayState.resultatsDecedes.valeur)),\n          Sauves: parseInt(JSON.parse(currentPlayState.resultatsSauves.valeur))\n        });\n      }\n\n      getPositionFromCarte(JSON.parse(currentPlayState.carte.valeur));\n      isLoading.current = false;\n    }\n  };\n\n  useEffect(() => {\n    console.log(carte);\n\n    if (carte.length > 0) {\n      setNbLignesGrille(carte.length);\n      setNbColonnesGrille(carte[0].length);\n    }\n  }, [carte]);\n  useEffect(() => {\n    console.log(currentTour);\n  }, [currentTour]);\n  useEffect(() => {\n    if (session != null && equipe != null && currentTour == null) {\n      getPlayState(session, equipe);\n      getPlayParameters();\n      getPositionFromCarte();\n    }\n  }, [session, equipe, numPompier]);\n\n  const getPlayParameters = async () => {\n    const param = await PlayAPI.getConfiguration(session);\n    setConfiguration(param);\n  };\n\n  const getPositionFromCarte = carte => {\n    console.log(carte);\n\n    if (carte != null && carte.length > 0) {\n      carte.forEach((ligne, indexI) => {\n        ligne.forEach((valeur, indexJ) => {\n          if (Math.floor(valeur / 100) == 1 && valeur % 100 / 10 == numPompier) setPosition([indexI, indexJ]);\n        });\n      });\n    }\n  };\n\n  const onTextChange = e => {\n    setNumPompier(e.target.value);\n    console.log(typeof e.target.value);\n  };\n\n  const onXChange = e => {\n    e.preventDefault();\n\n    if (e.target.value.length > 0) {\n      updateCarte(position, 0);\n      setPosition(position => [position[0], parseInt(e.target.value)]);\n    } else {\n      updateCarte(position, 0);\n      setPosition(position => [position[0], 0]);\n    }\n  };\n\n  const onYChange = e => {\n    e.preventDefault();\n\n    if (e.target.value.length > 0) {\n      updateCarte(position, 0);\n      setPosition(position => [parseInt(e.target.value), position[1]]);\n    } else {\n      updateCarte(position, 0);\n      setPosition(position => [0, position[1]]);\n    }\n  }; // UPDATES\n\n\n  const updateCarte = (coords, value) => {\n    if (coords[0] < nbLignesGrille && coords[1] < nbColonnesGrille) {\n      try {\n        var c = [...carte];\n        c[coords[0]][coords[1]] = value;\n        setCarte(c);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const updateMurH = (coords, value) => {\n    if (coords[0] < mursH.length && coords[1] < mursH[0].length) {\n      try {\n        var m = [...mursH];\n        m[coords[0]][coords[1]] = value;\n        setMursH(m);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const updateMurV = (coords, value) => {\n    if (coords[0] < mursV.length && coords[1] < mursV[0].length) {\n      try {\n        var m = [...mursV];\n        m[coords[0]][coords[1]] = value;\n        setMursV(m);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }; // ACTIONS\n\n\n  const updateBudget = action => {\n    var depenses = 0;\n    if (configuration[\"coutEq\" + action] != null) depenses += configuration[\"coutEq\" + action].valeur;\n    if (configuration[\"coutInter\" + action] != null) depenses += configuration[\"coutInter\" + action].valeur;\n    setBudget(budget => budget - depenses);\n  };\n\n  const doAction = action => {\n    try {\n      if (Object.keys(stocks).includes(action)) {\n        var s = stocks;\n        s[action] = s[action] - 1;\n        setStocks(s);\n      }\n    } catch (error) {}\n\n    try {\n      if (Object.keys(interventions).includes(action)) {\n        var i = interventions;\n        i[action] = i[action] - 1;\n        setInterventions(i);\n      }\n    } catch (error) {}\n\n    updateBudget(action);\n  };\n\n  const updateResultats = sauve => {\n    var res = resultats;\n\n    if (sauve) {\n      res.nbSauves += 1;\n    } else {\n      res.nbDecedes += 1;\n    }\n\n    setResultats(res);\n  };\n\n  useEffect(() => {\n    setBtnClickedBottom(null);\n    revealHabitant();\n  }, [position]);\n  useEffect(() => {\n    if (carte.length > 0) relacherHabitant();\n  }, [position, mursH, mursV]); // useEffect(() => {\n  //   console.log(\"Stocks\")\n  //   console.log(stocks)\n  // }, [stocks])\n\n  useEffect(() => {\n    if (configuration != null) {\n      var inter = interventions;\n      const interKeys = Object.keys(inter);\n      interKeys.forEach(action => {\n        try {\n          if (configuration[\"coutInter\" + action].valeur > 0) {\n            inter[action] = Math.min(configuration[\"coutEq\" + action] != null && configuration[\"coutEq\" + action] != undefined ? Math.floor(budget / (configuration[\"coutInter\" + action].valeur + configuration[\"coutEq\" + action].valeur)) : Math.floor(budget / configuration[\"coutInter\" + action].valeur), stocks[action] != null && stocks[action] != undefined && stocks[action] != \"NaN\" ? stocks[action] : 1000);\n          }\n        } catch (error) {\n          console.log(error, action);\n        }\n      });\n      setInterventions(inter);\n    } else {\n      getPlayParameters();\n    }\n  }, [budget, configuration, numPompier]); // SOCKETS\n\n  const socket = PlayAPI.getSocket(); // SOCKETS \n\n  const onTourChange = async e => {\n    e.preventDefault();\n    console.log(\"nouveau tour todo\");\n  };\n\n  useEffect(() => {\n    socket.on('changementTour', data => {\n      console.log(\"socket nouveau tour\"); // setCurrentTour(data.numPompier + 1)\n\n      getPlayState(session, equipe);\n    });\n  }); // TESTS\n\n  const test = async () => {\n    console.log(\"test function\");\n  };\n\n  const renderTests = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 200\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          flex: 1,\n          flexDirection: \"column\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => onTourChange(e),\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Manual settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"numPompier\",\n              children: \"Num\\xE9ro pompier\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"numPompier\",\n              onChange: e => onTextChange(e),\n              value: numPompier,\n              label: \"Num\\xE9ro pompier\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this), currentTour == numPompier ? /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Fin du tour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: true,\n            children: \"Fin du tour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"numPompier\",\n          children: \"Position x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"xPompier\",\n          onChange: e => onXChange(e),\n          value: position[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"numPompier\",\n          children: \"Position y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"yPompier\",\n          onChange: e => onYChange(e),\n          value: position[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => test(),\n        children: \"test function\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this);\n  }; // AUTORISATIONS \n\n\n  const deplacementAutorise = deplacement => {\n    // return true\n    var dpl = [...deplacement];\n    if (dpl[0] == 0 && dpl[1] == 0) return false;\n    if (position[0] + dpl[0] > carte.length - 1 || position[1] + dpl[1] > carte[0].length - 1 || position[0] + dpl[0] < 0 || position[1] + dpl[1] < 0) return false;\n    const dplInterditsCases = [100, 20, 3, 4];\n\n    try {\n      const valeurCaseDeplacement = carte[position[0] + dpl[0]][position[1] + dpl[1]];\n      if (Math.floor(valeurCaseDeplacement / 100) == 1) return false;\n      if (Math.floor(valeurCaseDeplacement / 10) == 2) return false;\n      if (dplInterditsCases.includes(valeurCaseDeplacement)) return false;\n    } catch (error) {}\n\n    const dplInterditsMurs = [1, 2, 3, 5];\n\n    try {\n      if (dpl[0] != 0) {\n        // haut bas\n        if (dpl[0] < 0) {\n          dpl[0] = 0;\n        }\n\n        if (typeof mursH[position[0] + dpl[0]][position[1]] === 'undefined') return false;\n        if (dplInterditsMurs.includes(mursH[position[0] + dpl[0]][position[1]])) return false;\n      } else {\n        // gauche droite\n        if (dpl[1] < 0) {\n          dpl[1] = 0;\n        }\n\n        if (typeof mursV[position[0]][position[1] + dpl[1]] === 'undefined') return false;\n        if (dplInterditsMurs.includes(mursV[position[0]][position[1] + dpl[1]])) return false;\n      }\n    } catch (error) {}\n\n    return true;\n  };\n\n  const testRelacherHabitant = () => {\n    if (carte[position[0]][position[1]] % 10 == 0) return false; // pas de transport d'habitant\n\n    const mursBloquants = [1, 2, 3, 5];\n    if (position[0] == 0 && !mursBloquants.includes(mursH[position[0]][position[1]])) return true; // haut\n\n    if (position[0] == nbLignesGrille - 1 && !mursBloquants.includes(mursH[position[0] + 1][position[1]])) return true; // bas\n\n    if (position[1] == 0 && !mursBloquants.includes(mursV[position[0]][position[1]])) return true; // gauche\n\n    if (position[1] == nbColonnesGrille - 1 && !mursBloquants.includes(mursV[position[0]][position[1] + 1])) return true; // droite\n\n    return false;\n  };\n\n  const relacherHabitant = () => {\n    if (testRelacherHabitant()) {\n      setTimeout(() => {\n        updateResultats(true);\n        updateCarte(position, 100 + numPompier * 10);\n      }, 1000);\n    }\n  };\n\n  const revealHabitant = () => {\n    if (configuration != null) {\n      const casesAutour = getCasesAutour();\n      console.log(configuration);\n      const nouvelHabitant = Math.random() <= configuration.txApparitionHab.valeur;\n\n      try {\n        if (casesAutour.dessus == 20) updateCarte([position[0] - 1, position[1]], nouvelHabitant ? 20 + Math.floor(configuration.nbHabDifferents.valeur * Math.random()) + 1 : 0);\n      } catch (error) {}\n\n      try {\n        if (casesAutour.droite == 20) updateCarte([position[0], position[1] + 1], nouvelHabitant ? 20 + Math.floor(configuration.nbHabDifferents.valeur * Math.random()) + 1 : 0);\n      } catch (error) {}\n\n      try {\n        if (casesAutour.dessous == 20) updateCarte([position[0] + 1, position[1]], nouvelHabitant ? 20 + Math.floor(configuration.nbHabDifferents.valeur * Math.random()) + 1 : 0);\n      } catch (error) {}\n\n      try {\n        if (casesAutour.gauche == 20) updateCarte([position[0], position[1] - 1], nouvelHabitant ? 20 + Math.floor(configuration.nbHabDifferents.valeur * Math.random()) + 1 : 0);\n      } catch (error) {}\n    }\n  };\n\n  const getCasesAutour = () => {\n    var cases = {};\n\n    try {\n      cases[\"dessus\"] = carte[position[0] - 1][position[1]]; // dessus\n    } catch (error) {}\n\n    try {\n      cases[\"droite\"] = carte[position[0]][position[1] + 1]; // droite\n    } catch (error) {}\n\n    try {\n      cases[\"dessous\"] = carte[position[0] + 1][position[1]]; // dessous\n    } catch (error) {}\n\n    try {\n      cases[\"gauche\"] = carte[position[0]][position[1] - 1]; // gauche\n    } catch (error) {}\n\n    return cases;\n  };\n\n  const getMursAutour = () => {\n    var murs = [];\n\n    try {\n      if (mursH[position[0]][position[1]] != 4 || mursH[position[0]][position[1] - 1] < 6 && mursH[position[0]][position[1] + 1] < 6) {\n        murs.push(mursH[position[0]][position[1]]); // dessus\n      } else {\n        murs.push(0);\n      }\n    } catch (error) {}\n\n    try {\n      if (mursV[position[0]][position[1] + 1] != 4 || mursV[position[0] - 1][position[1] + 1] < 6 && mursV[position[0] + 1][position[1] + 1] < 6) {\n        murs.push(mursV[position[0]][position[1] + 1]); // droite\n      } else {\n        murs.push(0);\n      }\n    } catch (error) {}\n\n    try {\n      if (mursH[position[0] + 1][position[1]] != 4 || mursH[position[0] + 1][position[1] - 1] < 6 && mursH[position[0] + 1][position[1] + 1] < 6) {\n        murs.push(mursH[position[0] + 1][position[1]]); // dessous\n      } else {\n        murs.push(0);\n      }\n    } catch (error) {}\n\n    try {\n      if (mursV[position[0]][position[1]] != 4 || mursV[position[0] - 1][position[1]] < 6 && mursV[position[0] + 1][position[1]] < 6) {\n        murs.push(mursV[position[0]][position[1]]); // gauche\n      } else {\n        murs.push(0);\n      }\n    } catch (error) {} // console.log(murs)\n\n\n    return murs;\n  };\n\n  const [btnClickedBottom, setBtnClickedBottom] = useState(null);\n  const [propositionsCase, setPropositionsCase] = useState([]); // Extincteurs\n\n  const [propositionMursDetruire, setPropositionMursDetruire] = useState([[], []]); // Horizontaux  , Verticaux\n\n  useEffect(() => {\n    if (btnClickedBottom != 3 || btnClickedBottom == null) {\n      setPropositionMursDetruire([[], []]);\n    }\n\n    if (btnClickedBottom > 2 && btnClickedBottom < 6 || btnClickedBottom == null) {\n      setPropositionsCase([]);\n    }\n  }, [btnClickedBottom]); // HANDLERS CLIC GRILLE\n\n  const handleClicCase = (valeurAvant, valeurApres, coordX, coordY) => {\n    console.log(valeurAvant, valeurApres, coordX, coordY);\n\n    try {\n      updateCarte([coordY, coordX], valeurApres);\n      setPropositionsCase([]);\n      setBtnClickedBottom(null);\n\n      if (valeurAvant == 4 && valeurApres == 0) {\n        // Extincteur flamme\n        doAction(\"Feu\");\n      }\n\n      if (valeurAvant == 4 && valeurApres == 3) {\n        // Feu Fumée\n        doAction(\"FeuFum\");\n      }\n\n      if (valeurAvant == 3 && valeurApres == 0) {\n        // Fumée\n        doAction(\"Fum\");\n      }\n\n      if (Math.floor(valeurAvant / 10) == 2 && valeurApres == 0) {\n        // Habitant\n        doAction(\"Habitant\");\n        updateCarte(position, 100 + numPompier * 10 + valeurAvant % 10);\n      }\n    } catch (error) {}\n  };\n\n  const handleClicMur = (num, valeurAvant, coordX, coordY) => {\n    // marqueur dégat\n    if (propositionMursDetruire[0].length > 0 || propositionMursDetruire[1].length > 0) {\n      const checkInCoords = index => {\n        // console.log(\"coordx\",coordX,\"coordy\",coordY,\"position\",position)\n        let numClic = null;\n\n        if (coordX == position[1] && (coordY < position[0] || coordY == position[0] && num == 0)) {\n          // top\n          numClic = 0; // case en question\n          // console.log(\"top\",numClic)\n        }\n\n        if (coordX == position[1] && (coordY > position[0] || coordY == position[0] && num == 2)) {\n          // bottom\n          numClic = 2; // case en question\n          // console.log(\"bottom\",numClic)\n        }\n\n        if (coordY == position[0] && (coordX < position[1] || coordX == position[1] && num == 3)) {\n          // left\n          numClic = 3; // case en question\n          // console.log(\"left\",numClic)\n        }\n\n        if (coordY == position[0] && (coordX > position[1] || coordX == position[1] && num == 1)) {\n          // right\n          numClic = 1; // case en question\n          // console.log(\"right\",numClic)\n        }\n\n        return numClic;\n      };\n\n      var cote = checkInCoords(num % 2);\n      let valeurApres = 4;\n      if (valeurAvant == 1) valeurApres = 3;\n\n      if (cote != null) {\n        try {\n          switch (cote) {\n            case 0:\n              updateMurH([position[0], position[1]], valeurApres); // if(valeurAvant==5 ||)\n\n              break;\n\n            case 1:\n              updateMurV([position[0], position[1] + 1], valeurApres);\n              break;\n\n            case 2:\n              updateMurH([position[0] + 1, position[1]], valeurApres);\n              break;\n\n            case 3:\n              updateMurV([position[0], position[1]], valeurApres);\n              break;\n          }\n\n          doAction(\"Marqueur\");\n        } catch (error) {}\n\n        setPropositionMursDetruire([[], []]);\n        setBtnClickedBottom(null);\n      }\n    }\n  }; // HANDLER CLICS BOUTONS\n\n\n  const handleClicFleche = num => {\n    // Position y x\n    let deplacement;\n\n    switch (num) {\n      case 0:\n        // haut\n        console.log(\"haut\");\n        deplacement = [-1, 0];\n        break;\n\n      case 1:\n        // droite\n        console.log(\"droite\");\n        deplacement = [0, 1];\n        break;\n\n      case 2:\n        // bas\n        console.log(\"bas\");\n        deplacement = [1, 0];\n        break;\n\n      case 3:\n        // gauche\n        console.log(\"gauche\");\n        deplacement = [0, -1];\n        break;\n    }\n\n    if (deplacementAutorise(deplacement)) {\n      updateCarte([position[0] + deplacement[0], position[1] + deplacement[1]], carte[position[0]][position[1]]);\n      setPosition(position => [position[0] + deplacement[0], position[1] + deplacement[1]]);\n      doAction(\"Deplacement\");\n      updateCarte(position, 0);\n    }\n  };\n\n  const handleClicDoor = ouvrir => {\n    // position, ouvert/fermé\n    setBtnClickedBottom(ouvrir ? 4 : 5);\n    let valueAvant;\n    let valueApres;\n\n    if (ouvrir) {\n      valueAvant = 5;\n      valueApres = 6;\n    } else {\n      valueAvant = 6;\n      valueApres = 5;\n    }\n\n    doAction(\"Porte\");\n\n    try {\n      if (mursH[position[0]][position[1]] == valueAvant) updateMurH([position[0], position[1]], valueApres);\n      if (mursH[position[0] + 1][position[1]] == valueAvant) updateMurH([position[0] + 1, position[1]], valueApres);\n      if (mursV[position[0]][position[1]] == valueAvant) updateMurV([position[0], position[1]], valueApres);\n      if (mursV[position[0]][position[1] + 1] == valueAvant) updateMurV([position[0], position[1] + 1], valueApres);\n    } catch (error) {}\n  };\n\n  const handleClicExtincteur = num => {\n    // 0 FEU, 1 FEUFUM, 2 FUM\n    if (btnClickedBottom != num) {\n      var listeCasesAction = [];\n      let valeurAvant = 4;\n      let valeurApres = 0;\n      setBtnClickedBottom(num);\n\n      switch (num) {\n        case 0:\n          // ETEINDRE FEU\n          break;\n\n        case 1:\n          // FEU FUM\n          valeurApres = 3;\n          break;\n\n        case 2:\n          // ETEINDRE FUMEE\n          valeurAvant = 3;\n          break;\n      }\n\n      try {\n        if (carte[position[0] - 1][position[1]] == valeurAvant) listeCasesAction.push([position[0] - 1, position[1], valeurAvant, valeurApres]); // TOP\n      } catch (error) {}\n\n      try {\n        if (carte[position[0]][position[1] + 1] == valeurAvant) listeCasesAction.push([position[0], position[1] + 1, valeurAvant, valeurApres]); // RIGHT\n      } catch (error) {}\n\n      try {\n        if (carte[position[0] + 1][position[1]] == valeurAvant) listeCasesAction.push([position[0] + 1, position[1], valeurAvant, valeurApres]); // BOTTOM\n      } catch (error) {}\n\n      try {\n        if (carte[position[0]][position[1] - 1] == valeurAvant) listeCasesAction.push([position[0], position[1] - 1, valeurAvant, valeurApres]); // LEFT\n      } catch (error) {}\n\n      setPropositionsCase(listeCasesAction);\n    } else {\n      setBtnClickedBottom(null);\n    }\n  };\n\n  const handleClicMarqueur = () => {\n    if (btnClickedBottom != 3) {\n      setBtnClickedBottom(3);\n\n      if (propositionMursDetruire[0].length > 0 || propositionMursDetruire[1].length > 0) {\n        setPropositionMursDetruire([[], []]);\n      } else {\n        const mursADetruire = [1, 3, 5, 6];\n        var propositions = [[], []];\n        const mursAutour = getMursAutour();\n\n        try {\n          if (mursADetruire.includes(mursAutour[0])) propositions[0].push([position[1], position[0]]); // top\n\n          if (mursADetruire.includes(mursAutour[1])) propositions[1].push([position[1] + 1, position[0]]); // right\n\n          if (mursADetruire.includes(mursAutour[2])) propositions[0].push([position[1], position[0] + 1]); // bottom\n\n          if (mursADetruire.includes(mursAutour[3])) propositions[1].push([position[1], position[0]]); // left\n        } catch (error) {}\n\n        setPropositionMursDetruire(propositions);\n      }\n    } else {\n      setBtnClickedBottom(null);\n    }\n  };\n\n  const handleClicValidated = async bool => {\n    if (bool) {\n      const response = await PlayAPI.nouveauTour(numPompier, carte, mursH, mursV, currentCycle, currentTour + 1, resultats.Decedes, resultats.Sauves, session, equipe);\n    }\n  };\n\n  const handleNoClicked = () => {\n    setPropositionMursDetruire([[], []]);\n    setPropositionsCase([]);\n  };\n\n  const handleClicHabitant = () => {\n    if (btnClickedBottom != 6) {\n      setBtnClickedBottom(6);\n      const valeurApres = 0;\n      var listeCasesAction = [];\n\n      try {\n        const valeurDessus = carte[position[0] - 1][position[1]];\n        if (Math.floor(valeurDessus / 10) == 2) listeCasesAction.push([position[0] - 1, position[1], valeurDessus, valeurApres]); // TOP\n      } catch (error) {}\n\n      try {\n        const valeurDroite = carte[position[0]][position[1] + 1];\n        if (Math.floor(valeurDroite / 10) == 2) listeCasesAction.push([position[0], position[1] + 1, valeurDroite, valeurApres]); // RIGHT\n      } catch (error) {}\n\n      try {\n        const valeurDessous = carte[position[0] + 1][position[1]];\n        if (Math.floor(valeurDessous / 10) == 2) listeCasesAction.push([position[0] + 1, position[1], valeurDessous, valeurApres]); // BOTTOM\n      } catch (error) {}\n\n      try {\n        const valeurGauche = carte[position[0]][position[1] - 1];\n        if (Math.floor(valeurGauche / 10) == 2) listeCasesAction.push([position[0], position[1] - 1, valeurGauche, valeurApres]); // LEFT\n      } catch (error) {}\n\n      setPropositionsCase(listeCasesAction);\n      console.log(\"handle clic habitant\");\n    } else {\n      setBtnClickedBottom(null);\n    }\n  };\n\n  return carte.length > 0 && position != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grille, {\n      nbColonnesGrille: nbColonnesGrille,\n      nbLignesGrille: nbLignesGrille,\n      carte: carte,\n      position: position,\n      mursH: mursH,\n      mursV: mursV,\n      propositionMursDetruire: propositionMursDetruire,\n      propositionsCase: propositionsCase,\n      handleClicMur: handleClicMur,\n      handleClicCase: handleClicCase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 884,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BandeauTop, {\n      stocks: stocks,\n      resultats: resultats,\n      numeroPompier: numPompier,\n      cycle: currentCycle,\n      tour: currentTour,\n      configuration: configuration,\n      budget: budget\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 898,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(BandeauBottom, {\n      interventions: interventions,\n      stocks: stocks,\n      numeroPompier: numPompier,\n      tour: currentTour,\n      handleClicFleche: handleClicFleche,\n      handleClicValidated: handleClicValidated,\n      handleClicDoor: handleClicDoor,\n      handleClicMarqueur: handleClicMarqueur,\n      handleClicExt: handleClicExtincteur,\n      handleNoClicked: handleNoClicked,\n      handleClicHabitant: handleClicHabitant,\n      btnClickedBottom: btnClickedBottom,\n      mursAutour: getMursAutour(),\n      casesAutour: getCasesAutour(),\n      currentCase: carte[position[0]][position[1]]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 908,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 883,\n    columnNumber: 9\n  }, this) : null;\n};\n\n_s(InterfaceTact, \"odHVrXggjpiT/uos3HpRJX/ssU4=\", false, function () {\n  return [useHistory];\n});\n\n_c = InterfaceTact;\nexport default InterfaceTact;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterfaceTact\");","map":{"version":3,"sources":["C:/Users/hugod/décitude/client/src/routes/InterfaceTact.js"],"names":["React","useState","useEffect","useRef","PlayAPI","BandeauTop","BandeauBottom","Grille","useHistory","cookie","InterfaceTact","history","user","load","undefined","push","numPompier","setNumPompier","role","replace","currentTour","setCurrentTour","currentCycle","setCurrentCycle","session","setSession","equipe","setEquipe","chrono","setChrono","chronoTimer","setInterval","clearInterval","configuration","setConfiguration","console","log","stocks","setStocks","Interventions","Feu","FeuFum","Fum","Marqueur","resultats","setResultats","Decedes","Sauves","interventions","setInterventions","Deplacement","Porte","Habitant","budget","setBudget","position","setPosition","isLoading","carte","setCarte","nbLignesGrille","setNbLignesGrille","nbColonnesGrille","setNbColonnesGrille","mursH","setMursH","mursV","setMursV","getPlayState","current","currentPlayState","Object","keys","length","parseInt","JSON","parse","valeur","resultatsDecedes","resultatsSauves","getPositionFromCarte","getPlayParameters","param","getConfiguration","forEach","ligne","indexI","indexJ","Math","floor","onTextChange","e","target","value","onXChange","preventDefault","updateCarte","onYChange","coords","c","error","updateMurH","m","updateMurV","updateBudget","action","depenses","doAction","includes","s","i","updateResultats","sauve","res","nbSauves","nbDecedes","setBtnClickedBottom","revealHabitant","relacherHabitant","inter","interKeys","min","socket","getSocket","onTourChange","on","data","test","renderTests","top","flex","flexDirection","deplacementAutorise","deplacement","dpl","dplInterditsCases","valeurCaseDeplacement","dplInterditsMurs","testRelacherHabitant","mursBloquants","setTimeout","casesAutour","getCasesAutour","nouvelHabitant","random","txApparitionHab","dessus","nbHabDifferents","droite","dessous","gauche","cases","getMursAutour","murs","btnClickedBottom","propositionsCase","setPropositionsCase","propositionMursDetruire","setPropositionMursDetruire","handleClicCase","valeurAvant","valeurApres","coordX","coordY","handleClicMur","num","checkInCoords","index","numClic","cote","handleClicFleche","handleClicDoor","ouvrir","valueAvant","valueApres","handleClicExtincteur","listeCasesAction","handleClicMarqueur","mursADetruire","propositions","mursAutour","handleClicValidated","bool","response","nouveauTour","handleNoClicked","handleClicHabitant","valeurDessus","valeurDroite","valeurDessous","valeurGauche"],"mappings":"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","sourcesContent":["import \"../styles/App.css\"\nimport React, { useState, useEffect,useRef } from 'react'\nimport PlayAPI from \"../API/PlayAPI\"\nimport BandeauTop from \"../components/interfaceJoueur/BandeauTop\"\nimport BandeauBottom from \"../components/interfaceJoueur/BandeauBottom\"\nimport Grille from \"../components/interfaceJoueur/Grille\"\nimport { useHistory } from 'react-router-dom';\n\n\nimport cookie from 'react-cookies'\n\n\nconst InterfaceTact = () => {\n\n  const history = useHistory()\n\n  const user = cookie.load(\"user\")\n  // console.log(user)\n  if(user==null || user==undefined) history.push(\"/login\");\n\n\n\n  const [numPompier, setNumPompier] = useState(user.role.replace(\"TACT\", \"\"))\n  const [currentTour, setCurrentTour] = useState(null)\n  const [currentCycle, setCurrentCycle] = useState(null)\n  const [session,setSession]=useState(user.session)\n  const [equipe,setEquipe]=useState(user.equipe)\n  const [chrono,setChrono]=useState(null)\n\n  useEffect(() => {\n    if(currentTour==numPompier){\n      if (chrono > 0) {\n\n        var chronoTimer = setInterval(() => {\n          setChrono(chrono => chrono - 1)\n\n        }, 1000)\n\n      }\n    \n\n\n    return () => {\n      clearInterval(chronoTimer)\n    }\n  }\n      \n  }, [chrono])\n\n\n\n  const [configuration, setConfiguration] = useState(null)\n  useEffect(()=>{\n    console.log(configuration)\n  },[configuration])\n\n  const [stocks, setStocks] = useState({\n    Interventions: 10,\n    Feu: 1,\n    FeuFum: 10,\n    Fum: 10,\n    Marqueur: 10,\n  })\n  const [resultats, setResultats] = useState({\n    Decedes: 0,\n    Sauves: 0\n  })\n\n  const [interventions, setInterventions] = useState({\n    Deplacement: 0,\n    Feu: 0,\n    FeuFum: 0,\n    Fum: 0,\n    Marqueur: 0,\n    Porte: 0,\n    Habitant: 0\n  })\n\n  const [budget, setBudget] = useState(800)\n\n  \n\n  const [position, setPosition] = useState(null)\n\n  const isLoading=useRef(false)\n\n  // INITIALISATION DE LA CARTE\n\n  // const [carte, setCarte] = useState([\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  // ])\n  \n  const [carte, setCarte] = useState([])\n\n  const [nbLignesGrille,setNbLignesGrille] = useState(0)\n  const [nbColonnesGrille,setNbColonnesGrille ]= useState(0)\n\n  const [mursH, setMursH] = useState([\n    [1, 1, 1, 1, 1, 1, 2, 6, 1, 1, 1, 1, 2, 5, 1, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [1, 1, 1, 1, 2, 6, 1, 6, 2, 1, 1, 1, 5, 2, 1, 1],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [1, 1, 1, 1, 1, 1, 6, 2, 1, 1, 1, 1, 1, 1, 1, 1]\n  ])\n\n  const [mursV, setMursV] = useState([\n    [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\n    [2, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\n    [5, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\n    [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\n    [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1],\n    [1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 0, 0, 1],\n    [1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 0, 0, 2],\n    [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 5]\n  ])\n\n\n\n  // GET PLAY PARAMETERS \n  const getPlayState=async(session,equipe)=>{\n    if(!isLoading.current){\n      isLoading.current=true\n      const currentPlayState = await PlayAPI.getPlayState(session,equipe)\n    \n      if(Object.keys(currentPlayState).length>0 ){\n        console.log(\"Get play state 2\")\n        console.log(parseInt(JSON.parse(currentPlayState.currentTour.valeur)))\n\n        setCurrentTour(parseInt(JSON.parse(currentPlayState.currentTour.valeur)))\n        setCurrentCycle(parseInt(JSON.parse(currentPlayState.currentCycle.valeur)))\n        setMursH(JSON.parse(currentPlayState.mursH.valeur))\n        setMursV(JSON.parse(currentPlayState.mursV.valeur))\n        setCarte(JSON.parse(currentPlayState.carte.valeur))\n        setResultats({\n          Decedes:parseInt(JSON.parse(currentPlayState.resultatsDecedes.valeur)),\n          Sauves:parseInt(JSON.parse(currentPlayState.resultatsSauves.valeur)),\n        })\n      }\n      getPositionFromCarte(JSON.parse(currentPlayState.carte.valeur))\n      isLoading.current=false\n    }\n    \n  }\n\n\n  useEffect(()=>{\n    console.log(carte)\n    if(carte.length>0){\n      setNbLignesGrille(carte.length)\n      setNbColonnesGrille(carte[0].length)\n    }\n  },[carte])\n\n  useEffect(()=>{\n    console.log(currentTour)\n  },[currentTour])\n\n\n  useEffect(()=>{\n    if(session!=null && equipe!=null && currentTour==null){\n      getPlayState(session,equipe)\n      getPlayParameters()\n      getPositionFromCarte()\n    }\n  },[session,equipe,numPompier])\n\n  const getPlayParameters = async () => {\n    const param = await PlayAPI.getConfiguration(session)\n    setConfiguration(param)\n\n  }\n\n  const getPositionFromCarte=(carte)=>{\n    console.log(carte)\n    if(carte!=null && carte.length>0){\n      carte.forEach((ligne,indexI) => {\n        ligne.forEach((valeur,indexJ) => {\n  \n          if( Math.floor(valeur / 100) == 1 && valeur%100/10==numPompier) setPosition([indexI,indexJ])\n          \n        })\n      });\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  const onTextChange = (e) => {\n    setNumPompier(e.target.value)\n    console.log(typeof (e.target.value))\n  }\n\n  const onXChange = (e) => {\n    e.preventDefault()\n    if (e.target.value.length > 0) {\n      updateCarte(position, 0)\n      setPosition(position => [position[0], parseInt(e.target.value)])\n    } else {\n      updateCarte(position, 0)\n      setPosition(position => [position[0], 0])\n    }\n\n  }\n  const onYChange = (e) => {\n    e.preventDefault()\n    if (e.target.value.length > 0) {\n      updateCarte(position, 0)\n      setPosition(position => [parseInt(e.target.value), position[1]])\n    } else {\n      updateCarte(position, 0)\n      setPosition(position => [0, position[1]])\n    }\n  }\n\n\n  // UPDATES\n  const updateCarte = (coords, value) => {\n    if (coords[0] < nbLignesGrille && coords[1] < nbColonnesGrille) {\n      try {\n        var c = [...carte]\n        c[coords[0]][coords[1]] = value\n        setCarte(c)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n\n\n  }\n  const updateMurH = (coords, value) => {\n    if (coords[0] < mursH.length && coords[1] < mursH[0].length) {\n      try {\n        var m = [...mursH]\n        m[coords[0]][coords[1]] = value\n        setMursH(m)\n\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n  const updateMurV = (coords, value) => {\n    if (coords[0] < mursV.length && coords[1] < mursV[0].length) {\n      try {\n        var m = [...mursV]\n        m[coords[0]][coords[1]] = value\n        setMursV(m)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n\n  // ACTIONS\n\n  const updateBudget = (action) => {\n    var depenses = 0\n    if (configuration[\"coutEq\" + action] != null) depenses += configuration[\"coutEq\" + action].valeur\n    if (configuration[\"coutInter\" + action] != null) depenses += configuration[\"coutInter\" + action].valeur\n    setBudget(budget => budget - depenses)\n  }\n\n\n  const doAction = (action) => {\n    try {\n      if(Object.keys(stocks).includes(action)){\n        var s = stocks\n        s[action] = s[action] - 1\n        setStocks(s)\n      }\n      \n    } catch (error) { }\n\n    try {\n      if(Object.keys(interventions).includes(action)){\n        var i = interventions\n      i[action] = i[action] - 1\n      setInterventions(i)\n      }      \n    } catch (error) { }\n\n    updateBudget(action)\n  }\n\n  const updateResultats = (sauve) => {\n    var res = resultats\n    if (sauve) {\n      res.nbSauves += 1\n    } else {\n      res.nbDecedes += 1\n    }\n    setResultats(res)\n  }\n\n\n\n\n\n  useEffect(() => {\n    setBtnClickedBottom(null)\n    revealHabitant()\n  }, [position])\n\n\n  useEffect(() => {\n    if(carte.length>0) relacherHabitant()\n\n  }, [position, mursH, mursV])\n\n  \n\n\n  // useEffect(() => {\n  //   console.log(\"Stocks\")\n  //   console.log(stocks)\n  // }, [stocks])\n\n\n\n  useEffect(() => {\n    if (configuration != null) {\n      var inter = interventions\n      const interKeys = Object.keys(inter)\n      interKeys.forEach(action => {\n        try {\n          if (configuration[\"coutInter\" + action].valeur > 0) {\n            inter[action] = Math.min(\n              configuration[\"coutEq\" + action] != null && configuration[\"coutEq\" + action] != undefined ? Math.floor(budget / (configuration[\"coutInter\" + action].valeur + configuration[\"coutEq\" + action].valeur)) : Math.floor(budget / configuration[\"coutInter\" + action].valeur),\n              stocks[action] != null && stocks[action] != undefined && stocks[action] !=\"NaN\" ? stocks[action] : 1000\n            )\n          }\n        } catch (error) {\n          console.log(error,action)\n        }\n\n      })\n      setInterventions(inter)\n      \n    } else {\n      getPlayParameters()\n    }\n  }, [budget, configuration, numPompier])\n\n  // SOCKETS\n  const socket = PlayAPI.getSocket()\n\n  // SOCKETS \n  const onTourChange = async (e) => {\n    e.preventDefault()\n    console.log(\"nouveau tour todo\")\n  }\n\n\n  useEffect(() => {\n    socket.on('changementTour', (data) => {\n      console.log(\"socket nouveau tour\")\n      // setCurrentTour(data.numPompier + 1)\n      getPlayState(session,equipe)\n    })\n  });\n\n\n\n  // TESTS\n\n  const test = async () => {\n\n    console.log(\"test function\")\n  }\n\n  const renderTests = () => {\n    return (\n      <div style={{ position: \"absolute\", top: 200 }}>\n        <div className=\"card\" style={{ flex: 1, flexDirection: \"column\" }}>\n          <form onSubmit={e => onTourChange(e)}>\n            <h1>Manual settings</h1>\n            <div className=\"name-field\">\n              <label htmlFor=\"numPompier\">Numéro pompier</label>\n              <input\n                type=\"number\"\n                name=\"numPompier\"\n                onChange={e => onTextChange(e)}\n                value={numPompier}\n                label=\"Numéro pompier\"\n              />\n            </div>\n            {currentTour == numPompier ?\n              <button>Fin du tour</button>\n              :\n              <button disabled>Fin du tour</button>\n\n            }\n\n          </form>\n\n        </div>\n        <div style={{ flex: 1, flexDirection: \"column\" }}>\n          <label htmlFor=\"numPompier\">Position x</label>\n          <input\n            type=\"number\"\n            name=\"xPompier\"\n            onChange={e => onXChange(e)}\n            value={position[1]}\n          />\n          <label htmlFor=\"numPompier\">Position y</label>\n          <input\n            type=\"number\"\n            name=\"yPompier\"\n            onChange={e => onYChange(e)}\n            value={position[0]}\n          />\n        </div>\n        <button onClick={() => test()} >test function</button>\n      </div>\n    )\n  }\n\n\n\n\n  // AUTORISATIONS \n  const deplacementAutorise = (deplacement) => {\n    // return true\n    var dpl = [...deplacement]\n    if (dpl[0] == 0 && dpl[1] == 0) return false\n    if (position[0] + dpl[0] > carte.length - 1 || position[1] + dpl[1] > carte[0].length - 1 || position[0] + dpl[0] < 0 || position[1] + dpl[1] < 0) return false\n\n\n    const dplInterditsCases = [100, 20, 3, 4]\n    \n    try {\n      const valeurCaseDeplacement = carte[position[0] + dpl[0]][position[1] + dpl[1]]\n      if (Math.floor(valeurCaseDeplacement/100)==1) return false\n      if (Math.floor(valeurCaseDeplacement/10)==2) return false\n      if (dplInterditsCases.includes(valeurCaseDeplacement)) return false\n    } catch (error) { }\n\n    const dplInterditsMurs = [1, 2, 3, 5]\n    try {\n      if (dpl[0] != 0) { // haut bas\n        if (dpl[0] < 0) {\n          dpl[0] = 0\n        }\n        if (typeof (mursH[position[0] + dpl[0]][position[1]]) === 'undefined') return false\n        if (dplInterditsMurs.includes(mursH[position[0] + dpl[0]][position[1]])) return false\n      } else { // gauche droite\n        if (dpl[1] < 0) {\n          dpl[1] = 0\n        }\n        if (typeof (mursV[position[0]][position[1] + dpl[1]]) === 'undefined') return false\n        if (dplInterditsMurs.includes(mursV[position[0]][position[1] + dpl[1]])) return false\n      }\n    } catch (error) { }\n\n\n\n\n    return true\n  }\n  const testRelacherHabitant = () => {\n    if (carte[position[0]][position[1]]%10==0) return false // pas de transport d'habitant\n\n    const mursBloquants = [1, 2, 3, 5]\n\n    if (position[0] == 0 && !mursBloquants.includes(mursH[position[0]][position[1]])) return true // haut\n    if (position[0] == nbLignesGrille - 1 && !mursBloquants.includes(mursH[position[0] + 1][position[1]])) return true // bas\n\n    if (position[1] == 0 && !mursBloquants.includes(mursV[position[0]][position[1]])) return true // gauche\n    if (position[1] == nbColonnesGrille - 1 && !mursBloquants.includes(mursV[position[0]][position[1] + 1])) return true // droite\n\n    return false\n  }\n  const relacherHabitant = () => {\n    if (testRelacherHabitant()) {\n      setTimeout(() => {\n        updateResultats(true)\n        updateCarte(position, 100+numPompier*10)\n      }, 1000);\n    }\n  }\n\n  const revealHabitant=()=>{\n    if(configuration!=null){\n      const casesAutour = getCasesAutour()\n      console.log(configuration)\n      const nouvelHabitant = Math.random() <= configuration.txApparitionHab.valeur\n  \n      try {\n        if(casesAutour.dessus==20) updateCarte([position[0]-1,position[1]], nouvelHabitant ? 20+Math.floor(configuration.nbHabDifferents.valeur*Math.random())+1 : 0)\n      } catch (error) {}\n      try {\n        if(casesAutour.droite==20) updateCarte([position[0],position[1]+1], nouvelHabitant ? 20+Math.floor(configuration.nbHabDifferents.valeur*Math.random())+1 : 0)\n      } catch (error) {}\n      try {\n        if(casesAutour.dessous==20) updateCarte([position[0]+1,position[1]], nouvelHabitant ? 20+Math.floor(configuration.nbHabDifferents.valeur*Math.random())+1 : 0)\n      } catch (error) {}\n      try {\n        if(casesAutour.gauche==20) updateCarte([position[0],position[1]-1], nouvelHabitant ? 20+Math.floor(configuration.nbHabDifferents.valeur*Math.random())+1 : 0)\n      } catch (error) {}\n      \n    }\n    \n  }\n\n  const getCasesAutour = () => {\n    var cases = {}\n\n    try {\n      cases[\"dessus\"]=(carte[position[0] - 1][position[1]]) // dessus\n    } catch (error) { }\n    try {\n      cases[\"droite\"]=(carte[position[0]][position[1] + 1]) // droite\n    } catch (error) { }\n    try {\n      cases[\"dessous\"]=(carte[position[0] + 1][position[1]]) // dessous\n    } catch (error) { }\n    try {\n      cases[\"gauche\"]=(carte[position[0]][position[1] - 1]) // gauche\n    } catch (error) { }\n    return cases\n  }\n  const getMursAutour = () => {\n    var murs = []\n\n    try {\n      if (mursH[position[0]][position[1]] != 4 || (mursH[position[0]][position[1] - 1] < 6 && mursH[position[0]][position[1] + 1] < 6)) {\n        murs.push(mursH[position[0]][position[1]]) // dessus\n      } else {\n        murs.push(0)\n      }\n    } catch (error) { }\n\n    try {\n      if (mursV[position[0]][position[1] + 1] != 4 || (mursV[position[0] - 1][position[1] + 1] < 6 && mursV[position[0] + 1][position[1] + 1] < 6)) {\n        murs.push(mursV[position[0]][position[1] + 1])  // droite\n      } else {\n        murs.push(0)\n      }\n    } catch (error) { }\n\n    try {\n      if (mursH[position[0] + 1][position[1]] != 4 || (mursH[position[0] + 1][position[1] - 1] < 6 && mursH[position[0] + 1][position[1] + 1] < 6)) {\n        murs.push(mursH[position[0] + 1][position[1]]) // dessous\n      } else {\n        murs.push(0)\n      }\n\n    } catch (error) { }\n    try {\n      if (mursV[position[0]][position[1]] != 4 || (mursV[position[0] - 1][position[1]] < 6 && mursV[position[0] + 1][position[1]] < 6)) {\n        murs.push(mursV[position[0]][position[1]])  // gauche\n      } else {\n        murs.push(0)\n      }\n    } catch (error) { }\n    // console.log(murs)\n    return murs\n  }\n\n\n\n\n  const [btnClickedBottom, setBtnClickedBottom] = useState(null)\n  const [propositionsCase, setPropositionsCase] = useState([]) // Extincteurs\n  const [propositionMursDetruire, setPropositionMursDetruire] = useState([[], []]) // Horizontaux  , Verticaux\n  useEffect(() => {\n    if (btnClickedBottom != 3 || btnClickedBottom == null) {\n      setPropositionMursDetruire([[], []])\n    }\n    if ((btnClickedBottom > 2 && btnClickedBottom < 6) || btnClickedBottom == null) {\n      setPropositionsCase([])\n    }\n  }, [btnClickedBottom])\n\n\n\n\n  // HANDLERS CLIC GRILLE\n\n  const handleClicCase = (valeurAvant, valeurApres, coordX, coordY) => {\n\n    console.log(valeurAvant, valeurApres, coordX, coordY)\n    try {\n      updateCarte([coordY, coordX], valeurApres)\n      setPropositionsCase([])\n      setBtnClickedBottom(null)\n\n      if (valeurAvant == 4 && valeurApres == 0) { // Extincteur flamme\n        doAction(\"Feu\")\n      }\n      if (valeurAvant == 4 && valeurApres == 3) { // Feu Fumée\n        doAction(\"FeuFum\")\n      }\n      if (valeurAvant == 3 && valeurApres == 0) { // Fumée\n        doAction(\"Fum\")\n      }\n      if (Math.floor(valeurAvant/10)==2 && valeurApres == 0) { // Habitant\n        doAction(\"Habitant\")\n        updateCarte(position, 100+numPompier*10+valeurAvant%10)\n      }\n    } catch (error) { }\n  }\n\n  const handleClicMur = (num, valeurAvant, coordX, coordY) => { // marqueur dégat\n    if (propositionMursDetruire[0].length > 0 || propositionMursDetruire[1].length > 0) {\n\n      const checkInCoords = (index) => {\n        // console.log(\"coordx\",coordX,\"coordy\",coordY,\"position\",position)\n\n        let numClic = null\n\n        if (coordX == position[1] && (coordY < position[0] || (coordY == position[0] && num == 0))) { // top\n          numClic = 0  // case en question\n          // console.log(\"top\",numClic)\n        }\n        if (coordX == position[1] && (coordY > position[0] || (coordY == position[0] && num == 2))) { // bottom\n          numClic = 2  // case en question\n          // console.log(\"bottom\",numClic)\n        }\n        if (coordY == position[0] && (coordX < position[1] || (coordX == position[1] && num == 3))) { // left\n          numClic = 3  // case en question\n          // console.log(\"left\",numClic)\n        }\n        if (coordY == position[0] && (coordX > position[1] || (coordX == position[1] && num == 1))) { // right\n          numClic = 1  // case en question\n          // console.log(\"right\",numClic)\n        }\n\n        return numClic\n      }\n\n      var cote = checkInCoords(num % 2)\n      let valeurApres = 4\n      if (valeurAvant == 1) valeurApres = 3\n\n      if (cote != null) {\n        try {\n          switch (cote) {\n            case 0:\n              updateMurH([position[0], position[1]], valeurApres)\n              // if(valeurAvant==5 ||)\n              break;\n            case 1:\n              updateMurV([position[0], position[1] + 1], valeurApres)\n              break;\n            case 2:\n              updateMurH([position[0] + 1, position[1]], valeurApres)\n              break;\n            case 3:\n              updateMurV([position[0], position[1]], valeurApres)\n              break;\n          }\n\n          doAction(\"Marqueur\")\n\n\n        } catch (error) {\n        }\n\n\n\n        setPropositionMursDetruire([[], []])\n        setBtnClickedBottom(null)\n      }\n\n    }\n\n  }\n\n\n\n  // HANDLER CLICS BOUTONS\n\n\n  const handleClicFleche = (num) => {\n    // Position y x\n    let deplacement\n    switch (num) {\n      case 0: // haut\n        console.log(\"haut\")\n        deplacement = [-1, 0]\n        break;\n\n      case 1: // droite\n        console.log(\"droite\")\n        deplacement = [0, 1]\n        break;\n\n      case 2: // bas\n        console.log(\"bas\")\n        deplacement = [1, 0]\n        break;\n\n      case 3: // gauche\n        console.log(\"gauche\")\n        deplacement = [0, -1]\n\n        break;\n    }\n    if (deplacementAutorise(deplacement)) {\n      updateCarte([position[0] + deplacement[0], position[1] + deplacement[1]], carte[position[0]][position[1]])\n      setPosition(position => [position[0] + deplacement[0], position[1] + deplacement[1]])\n      doAction(\"Deplacement\")\n      updateCarte(position, 0)\n    }\n  }\n\n\n  const handleClicDoor = (ouvrir) => { // position, ouvert/fermé\n    setBtnClickedBottom(ouvrir ? 4 : 5)\n    let valueAvant\n    let valueApres\n\n    if (ouvrir) {\n      valueAvant = 5\n      valueApres = 6\n\n    } else {\n      valueAvant = 6\n      valueApres = 5\n    }\n    doAction(\"Porte\")\n    try {\n      if (mursH[position[0]][position[1]] == valueAvant) updateMurH([position[0], position[1]], valueApres)\n      if (mursH[position[0] + 1][position[1]] == valueAvant) updateMurH([position[0] + 1, position[1]], valueApres)\n      if (mursV[position[0]][position[1]] == valueAvant) updateMurV([position[0], position[1]], valueApres)\n      if (mursV[position[0]][position[1] + 1] == valueAvant) updateMurV([position[0], position[1] + 1], valueApres)\n    } catch (error) {\n\n    }\n  }\n\n  const handleClicExtincteur = (num) => {\n    // 0 FEU, 1 FEUFUM, 2 FUM\n    if (btnClickedBottom != num) {\n      var listeCasesAction = []\n      let valeurAvant = 4\n      let valeurApres = 0\n      setBtnClickedBottom(num)\n      switch (num) {\n        case 0: // ETEINDRE FEU\n          break;\n\n        case 1: // FEU FUM\n          valeurApres = 3\n          break;\n        case 2: // ETEINDRE FUMEE\n          valeurAvant = 3\n          break;\n      }\n\n      try {\n        if (carte[position[0] - 1][position[1]] == valeurAvant) listeCasesAction.push([position[0] - 1, position[1], valeurAvant, valeurApres]) // TOP\n      } catch (error) { }\n      try {\n        if (carte[position[0]][position[1] + 1] == valeurAvant) listeCasesAction.push([position[0], position[1] + 1, valeurAvant, valeurApres]) // RIGHT\n      } catch (error) { }\n      try {\n        if (carte[position[0] + 1][position[1]] == valeurAvant) listeCasesAction.push([position[0] + 1, position[1], valeurAvant, valeurApres]) // BOTTOM\n      } catch (error) { }\n      try {\n        if (carte[position[0]][position[1] - 1] == valeurAvant) listeCasesAction.push([position[0], position[1] - 1, valeurAvant, valeurApres]) // LEFT\n      } catch (error) { }\n\n      setPropositionsCase(listeCasesAction)\n    } else {\n      setBtnClickedBottom(null)\n    }\n\n  }\n\n  const handleClicMarqueur = () => {\n    if (btnClickedBottom != 3) {\n      setBtnClickedBottom(3)\n      if (propositionMursDetruire[0].length > 0 || propositionMursDetruire[1].length > 0) {\n        setPropositionMursDetruire([[], []])\n      } else {\n        const mursADetruire = [1, 3, 5, 6]\n        var propositions = [\n          [],\n          []\n        ]\n        const mursAutour = getMursAutour()\n\n        try {\n          if (mursADetruire.includes(mursAutour[0])) propositions[0].push([position[1], position[0]]) // top\n          if (mursADetruire.includes(mursAutour[1])) propositions[1].push([position[1] + 1, position[0]]) // right\n          if (mursADetruire.includes(mursAutour[2])) propositions[0].push([position[1], position[0] + 1]) // bottom\n          if (mursADetruire.includes(mursAutour[3])) propositions[1].push([position[1], position[0]]) // left\n\n        } catch (error) {\n\n        }\n        setPropositionMursDetruire(propositions)\n\n      }\n    } else {\n      setBtnClickedBottom(null)\n    }\n\n\n  }\n\n  const handleClicValidated =async (bool) => {\n    if(bool){\n      const response =  await PlayAPI.nouveauTour(numPompier,carte,mursH,mursV,currentCycle,currentTour+1,resultats.Decedes,resultats.Sauves,session,equipe)      \n    }\n  }\n\n  const handleNoClicked = () => {\n    setPropositionMursDetruire([[], []])\n    setPropositionsCase([])\n  }\n\n  const handleClicHabitant = () => {\n    if (btnClickedBottom != 6) {\n      setBtnClickedBottom(6)\n      const valeurApres = 0\n      var listeCasesAction = []\n      try {\n        const valeurDessus =  carte[position[0] - 1][position[1]]\n        if (Math.floor(valeurDessus/10)==2) listeCasesAction.push([position[0] - 1, position[1], valeurDessus, valeurApres]) // TOP\n      } catch (error) { }\n      try {\n        const valeurDroite =  carte[position[0]][position[1] + 1]\n        if (Math.floor(valeurDroite/10)==2) listeCasesAction.push([position[0], position[1] + 1, valeurDroite, valeurApres]) // RIGHT\n      } catch (error) { }\n      try {\n        const valeurDessous =  carte[position[0] + 1][position[1]] \n        if (Math.floor(valeurDessous/10)==2)  listeCasesAction.push([position[0] + 1, position[1], valeurDessous, valeurApres]) // BOTTOM\n      } catch (error) { }\n      try {\n        const valeurGauche = carte[position[0]][position[1] - 1]\n        if (Math.floor(valeurGauche/10)==2) listeCasesAction.push([position[0], position[1] - 1, valeurGauche, valeurApres]) // LEFT\n      } catch (error) { }\n\n      setPropositionsCase(listeCasesAction)\n\n\n      console.log(\"handle clic habitant\")\n    } else {\n      setBtnClickedBottom(null)\n    }\n\n  }\n\n\n\n\n\n  return (\n    \n      carte.length>0 && position!=null ?\n      \n        <div>\n            <Grille\n            nbColonnesGrille={nbColonnesGrille}\n            nbLignesGrille={nbLignesGrille}\n            carte={carte}\n            position={position}\n            mursH={mursH}\n            mursV={mursV}\n            propositionMursDetruire={propositionMursDetruire}\n            propositionsCase={propositionsCase}\n            handleClicMur={handleClicMur}\n            handleClicCase={handleClicCase}\n\n          />\n\n          <BandeauTop\n            stocks={stocks}\n            resultats={resultats}\n            numeroPompier={numPompier}\n            cycle={currentCycle}\n            tour={currentTour}\n            configuration={configuration}\n            budget={budget}\n          />\n\n          <BandeauBottom\n            interventions={interventions}\n            stocks={stocks}\n            numeroPompier={numPompier}\n            tour={currentTour}\n            handleClicFleche={handleClicFleche}\n            handleClicValidated={handleClicValidated}\n            handleClicDoor={handleClicDoor}\n            handleClicMarqueur={handleClicMarqueur}\n            handleClicExt={handleClicExtincteur}\n            handleNoClicked={handleNoClicked}\n            handleClicHabitant={handleClicHabitant}\n            btnClickedBottom={btnClickedBottom}\n            mursAutour={getMursAutour()}\n            casesAutour={getCasesAutour()}\n            currentCase={carte[position[0]][position[1]]}\n          />\n        </div>\n      : null\n      \n      \n     \n    \n  );\n\n}\n\nexport default InterfaceTact;\n\n"]},"metadata":{},"sourceType":"module"}