{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\decitude\\\\client\\\\src\\\\components\\\\pieces\\\\MurPiece.js\";\nimport { withWidth } from '@material-ui/core';\nimport zIndex from '@material-ui/core/styles/zIndex';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MurPiece = ({\n  num,\n  height,\n  width,\n  type,\n  coordX,\n  coordY,\n  maxColonnesPiece,\n  maxLignesPiece\n}) => {\n  const epaisseurInit = 1;\n  const epaisseur = type > 0 ? type == 3 ? epaisseurInit * 8 : epaisseurInit * 4 : 1; // console.log(type)\n\n  const colors = [\"\", // 0 simple\n  \"black\", // 1 large\n  \"purple\", //2 porte closed\n  \"purple\" //3 porte open\n  ];\n\n  const getTransform = () => {\n    const translateY = epaisseur / 1.5;\n    const translateX = width * 0.9;\n    if (num == 0 && type == 3) return 'translate(' + translateX + \"px,\" + translateY + \"px)\";\n    if (num == 2 && type == 3) return 'translate(' + translateX + \"px,\" + -translateY + \"px)\";\n  };\n\n  const test = () => {\n    console.log(coordX);\n    console.log(coordY);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => test(),\n    style: {\n      position: \"absolute\",\n      width: num % 2 == 0 ? width + 2 : epaisseur,\n      height: num % 2 == 1 ? height + 1 : epaisseur,\n      right: num == 1 ? -1 : null,\n      left: num % 2 == 0 || num == 3 ? -1 : null,\n      top: num == 0 || num % 2 == 1 ? -1 : null,\n      bottom: num == 2 ? 0 : null,\n      backgroundColor: type > 0 ? colors[type] : 'transparent',\n      zIndex: type == 2 || type == 3 ? 2 : 1,\n      transform: type == 3 ? getTransform() : ''\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MurPiece;\nexport default MurPiece;\n\nvar _c;\n\n$RefreshReg$(_c, \"MurPiece\");","map":{"version":3,"sources":["C:/Users/hugod/decitude/client/src/components/pieces/MurPiece.js"],"names":["withWidth","zIndex","React","useState","useEffect","MurPiece","num","height","width","type","coordX","coordY","maxColonnesPiece","maxLignesPiece","epaisseurInit","epaisseur","colors","getTransform","translateY","translateX","test","console","log","position","right","left","top","bottom","backgroundColor","transform"],"mappings":";AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AACdC,EAAAA,GADc;AAEdC,EAAAA,MAFc;AAGdC,EAAAA,KAHc;AAIdC,EAAAA,IAJc;AAKdC,EAAAA,MALc;AAMdC,EAAAA,MANc;AAOdC,EAAAA,gBAPc;AAQdC,EAAAA;AARc,CAAD,KASX;AACF,QAAMC,aAAa,GAAC,CAApB;AACA,QAAMC,SAAS,GAACN,IAAI,GAAC,CAAL,GAASA,IAAI,IAAE,CAAN,GAAUK,aAAa,GAAC,CAAxB,GAA4BA,aAAa,GAAC,CAAnD,GAAuD,CAAvE,CAFE,CAIF;;AAEA,QAAME,MAAM,GAAE,CACV,EADU,EACN;AACJ,SAFU,EAED;AACT,UAHU,EAGD;AACT,UAJU,CAID;AAJC,GAAd;;AAOD,QAAMC,YAAY,GAAC,MAAI;AAClB,UAAMC,UAAU,GAACH,SAAS,GAAC,GAA3B;AACA,UAAMI,UAAU,GAACX,KAAK,GAAC,GAAvB;AACA,QAAGF,GAAG,IAAE,CAAL,IAAUG,IAAI,IAAE,CAAnB,EAAsB,OAAO,eAAaU,UAAb,GAAwB,KAAxB,GAA8BD,UAA9B,GAAyC,KAAhD;AACtB,QAAGZ,GAAG,IAAE,CAAL,IAAUG,IAAI,IAAE,CAAnB,EAAsB,OAAO,eAAaU,UAAb,GAAwB,KAAxB,GAA+B,CAACD,UAAhC,GAA4C,KAAnD;AAC1B,GALD;;AAQA,QAAME,IAAI,GAAC,MAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACH,GAHD;;AAKC,sBACI;AACI,IAAA,OAAO,EAAE,MAAIS,IAAI,EADrB;AAEI,IAAA,KAAK,EAAE;AACHG,MAAAA,QAAQ,EAAC,UADN;AAEHf,MAAAA,KAAK,EAACF,GAAG,GAAC,CAAJ,IAAO,CAAP,GAAWE,KAAK,GAAC,CAAjB,GAAqBO,SAFxB;AAGHR,MAAAA,MAAM,EAACD,GAAG,GAAC,CAAJ,IAAO,CAAP,GAAWC,MAAM,GAAC,CAAlB,GAAuBQ,SAH3B;AAIHS,MAAAA,KAAK,EAAClB,GAAG,IAAE,CAAL,GAAS,CAAC,CAAV,GAAe,IAJlB;AAKHmB,MAAAA,IAAI,EAACnB,GAAG,GAAC,CAAJ,IAAO,CAAP,IAAYA,GAAG,IAAE,CAAjB,GAAqB,CAAC,CAAtB,GAA0B,IAL5B;AAMHoB,MAAAA,GAAG,EAACpB,GAAG,IAAE,CAAL,IAAUA,GAAG,GAAC,CAAJ,IAAO,CAAjB,GAAqB,CAAC,CAAtB,GAA0B,IAN3B;AAOHqB,MAAAA,MAAM,EAACrB,GAAG,IAAE,CAAL,GAAS,CAAT,GAAc,IAPlB;AAQHsB,MAAAA,eAAe,EAAEnB,IAAI,GAAC,CAAN,GAAWO,MAAM,CAACP,IAAD,CAAjB,GAA0B,aARvC;AASHR,MAAAA,MAAM,EAAEQ,IAAI,IAAE,CAAN,IAAWA,IAAI,IAAE,CAAjB,GAAqB,CAArB,GAAyB,CAT9B;AAUHoB,MAAAA,SAAS,EAAEpB,IAAI,IAAE,CAAN,GAAUQ,YAAY,EAAtB,GAA2B;AAVnC;AAFX;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAtDD;;KAAMZ,Q;AAwDN,eAAeA,QAAf","sourcesContent":["import { withWidth } from '@material-ui/core';\r\nimport zIndex from '@material-ui/core/styles/zIndex';\r\nimport React,{useState,useEffect} from 'react'\r\n\r\nconst MurPiece = ({\r\n    num,\r\n    height,\r\n    width,\r\n    type,\r\n    coordX,\r\n    coordY,\r\n    maxColonnesPiece,\r\n    maxLignesPiece\r\n}) => {\r\n    const epaisseurInit=1\r\n    const epaisseur=type>0 ? type==3 ? epaisseurInit*8 : epaisseurInit*4 : 1\r\n    \r\n    // console.log(type)\r\n    \r\n    const colors =[\r\n        \"\", // 0 simple\r\n        \"black\", // 1 large\r\n        \"purple\",//2 porte closed\r\n        \"purple\",//3 porte open\r\n    ]\r\n\r\n   const getTransform=()=>{\r\n        const translateY=epaisseur/1.5\r\n        const translateX=width*0.9\r\n        if(num==0 && type==3) return 'translate('+translateX+\"px,\"+translateY+\"px)\"\r\n        if(num==2 && type==3) return 'translate('+translateX+\"px,\"+(-translateY)+\"px)\"\r\n   }\r\n\r\n   \r\n   const test=()=>{\r\n       console.log(coordX)\r\n       console.log(coordY)\r\n   }\r\n\r\n    return ( \r\n        <div       \r\n            onClick={()=>test()}  \r\n            style={{\r\n                position:\"absolute\",\r\n                width:num%2==0 ? width+2 : epaisseur,\r\n                height:num%2==1 ? height+1 :  epaisseur , \r\n                right:num==1 ? -1 :  null,\r\n                left:num%2==0 || num==3 ? -1 : null,\r\n                top:num==0 || num%2==1 ? -1 : null,\r\n                bottom:num==2 ? 0 :  null,\r\n                backgroundColor:(type>0) ? colors[type] : 'transparent',\r\n                zIndex: type==2 || type==3 ? 2 : 1,\r\n                transform: type==3 ? getTransform() : ''\r\n            }}\r\n        >\r\n        </div>\r\n\r\n    );\r\n}\r\n \r\nexport default MurPiece;"]},"metadata":{},"sourceType":"module"}