{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\decitude\\\\client\\\\src\\\\components\\\\Grille.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../styles/Grille.css';\nimport Piece from \"./pieces/Piece\";\nimport { useScrollTrigger } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Grille = ({\n  nbColonnes,\n  nbLignes,\n  carte,\n  position,\n  mursH,\n  mursV\n}) => {\n  _s();\n\n  const getDistance = (min, max) => {\n    return Math.sqrt((min[0] - max[0]) * (min[0] - max[0]) + (min[1] - max[1]) * (min[1] - max[1]));\n  };\n\n  const associate = (minimums, maximums) => {\n    var anchors = [];\n    var maxUsed = [];\n    var maxCPiece = 0;\n    var maxLPiece = 0;\n    maximums.sort((a, b) => b[1] - a[1]).sort((a, b) => a[0] - b[0]);\n    minimums.forEach(min => {\n      var Max = [nbLignes, nbColonnes];\n      maximums.forEach(max => {\n        if (max[0] >= min[0] && max[1] >= min[1] && max[0] <= Max[0] && max[1] <= Max[1] && (min[0] < max[0] || min[1] < max[1]) && !maxUsed.includes(max)) {\n          Max = max;\n        }\n      });\n      maxUsed.push(Max);\n      anchors.push([min, Max]);\n\n      if (maxCPiece < Max[1] - min[1]) {\n        maxCPiece = Max[1] - min[1];\n      }\n\n      if (maxLPiece < Max[0] - min[0]) {\n        maxLPiece = Max[0] - min[0];\n      }\n    });\n    setMaxColonnesPiece(maxCPiece);\n    setMaxLignesPiece(maxLPiece);\n    return anchors;\n  };\n\n  useEffect(() => {\n    console.log(maxColonnesPiece, maxLignesPiece);\n  }, [maxColonnesPiece, maxLignesPiece]);\n\n  const getAnchors = () => {\n    var minimums = [];\n    var maximums = [];\n\n    for (let i = 0; i < mursV.length; i++) {\n      for (let j = 0; j < mursH[i].length; j++) {\n        if (mursV[i][j] > 0 && mursH[i][j] > 0) {\n          minimums.push([i, j]);\n        }\n\n        if (mursV[i][j + 1] > 0 && mursH[i + 1][j] > 0) {\n          maximums.push([i, j]);\n        }\n      }\n    }\n\n    return associate(minimums, maximums);\n  };\n\n  const getAnchor = (anchors, pos) => {\n    var Min = [-1, -1];\n    var Index = -1;\n    anchors.forEach((a, index) => {\n      const min = a[0];\n      const max = a[1];\n\n      if (pos[0] >= min[0] && pos[1] >= min[1] && pos[0] <= max[0] && pos[1] <= max[1]) {\n        Min = min;\n        Index = index;\n      }\n    });\n    return [Min, Index];\n  };\n\n  const [maxLignesPiece, setMaxLignesPiece] = useState(nbLignes);\n  const [maxColonnesPiece, setMaxColonnesPiece] = useState(nbColonnes);\n\n  const renderPieces = () => {\n    var components = [];\n    const anchors = getAnchors();\n    const [anchor, idAnchor] = getAnchor(anchors, position);\n    let nbL;\n    let nbC;\n\n    if (anchor[0] < 0 && anchor[1] < 0) {\n      nbL = maxLignesPiece;\n      nbC = maxColonnesPiece;\n    } else {\n      const area = anchors[idAnchor];\n      nbL = area[1][0] - area[0][0] + 1;\n      nbC = area[1][1] - area[0][1] + 1;\n    }\n\n    components.push( /*#__PURE__*/_jsxDEV(Piece, {\n      idPiece: idAnchor,\n      mursH: mursH,\n      mursV: mursV,\n      carte: carte,\n      position: position,\n      nbLignes: nbL,\n      nbColonnes: nbC,\n      maxColonnesPiece: maxColonnesPiece,\n      maxLignesPiece: maxLignesPiece,\n      anchor: anchor[0] < 0 && anchor[1] < 0 ? [0, 0] : anchor\n    }, idAnchor, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this));\n    return components;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"piece-container\",\n      children: renderPieces()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AHAH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Grille, \"oiPrFYZsO1omrrz3c9PP2qHD+tA=\");\n\n_c = Grille;\nexport default Grille;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grille\");","map":{"version":3,"sources":["C:/Users/hugod/decitude/client/src/components/Grille.js"],"names":["React","useEffect","useState","makeStyles","Piece","useScrollTrigger","Grille","nbColonnes","nbLignes","carte","position","mursH","mursV","getDistance","min","max","Math","sqrt","associate","minimums","maximums","anchors","maxUsed","maxCPiece","maxLPiece","sort","a","b","forEach","Max","includes","push","setMaxColonnesPiece","setMaxLignesPiece","console","log","maxColonnesPiece","maxLignesPiece","getAnchors","i","length","j","getAnchor","pos","Min","Index","index","renderPieces","components","anchor","idAnchor","nbL","nbC","area"],"mappings":"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","sourcesContent":["import React ,{useEffect, useState}from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport '../styles/Grille.css';\r\n\r\nimport Piece from \"./pieces/Piece\"\r\nimport { useScrollTrigger } from '@material-ui/core';\r\n\r\n\r\n\r\nconst Grille = ({\r\n    nbColonnes,\r\n    nbLignes,\r\n    carte,\r\n    position,\r\n    mursH,\r\n    mursV\r\n}) => {\r\n    const getDistance=(min,max)=>{\r\n        return Math.sqrt((min[0]-max[0])*(min[0]-max[0]) + (min[1]-max[1])*(min[1]-max[1]))\r\n    }\r\n\r\n    const associate=(minimums,maximums)=>{\r\n        var anchors=[]\r\n        var maxUsed=[]\r\n        var maxCPiece =0\r\n        var maxLPiece =0\r\n\r\n        maximums.sort((a,b)=>b[1]-a[1]).sort((a,b)=>a[0]-b[0])\r\n\r\n        minimums.forEach(min => {\r\n            var Max =[nbLignes,nbColonnes]\r\n            maximums.forEach(max => {\r\n                if((max[0]>=min[0] && max[1]>=min[1]) && (max[0]<=Max[0] &&  max[1]<=Max[1]) && (min[0]<max[0] || min[1]<max[1]) && !maxUsed.includes(max)){\r\n                    Max = max\r\n                }\r\n            });\r\n            maxUsed.push(Max)\r\n            anchors.push([min,Max])\r\n            if(maxCPiece<Max[1]-min[1]){\r\n                maxCPiece=Max[1]-min[1]\r\n            }\r\n            if(maxLPiece<Max[0]-min[0]){\r\n                maxLPiece=Max[0]-min[0]\r\n            }\r\n        })\r\n        setMaxColonnesPiece(maxCPiece)\r\n        setMaxLignesPiece(maxLPiece)\r\n        return(anchors)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        console.log(maxColonnesPiece,maxLignesPiece)\r\n    },[maxColonnesPiece,maxLignesPiece])\r\n    \r\n    const getAnchors=()=>{   \r\n        var minimums=[]\r\n        var maximums=[]\r\n        \r\n        for(let i=0;i<mursV.length;i++){\r\n            for(let j=0;j<mursH[i].length;j++){\r\n                if(mursV[i][j]>0 && mursH[i][j]>0){\r\n                    minimums.push([i,j])\r\n                }   \r\n                if(mursV[i][j+1]>0 && mursH[i+1][j]>0){\r\n                    maximums.push([i,j])\r\n                }\r\n            }\r\n        }\r\n        return associate(minimums,maximums)\r\n    }\r\n\r\n    const getAnchor=(anchors,pos)=>{\r\n        \r\n        var Min=[-1,-1]\r\n        var Index=-1\r\n        anchors.forEach((a,index) => {\r\n            const min = a[0]\r\n            const max = a[1]\r\n\r\n            if(pos[0]>=min[0] && pos[1]>=min[1] && pos[0]<=max[0] && pos[1]<=max[1]){\r\n                Min= min\r\n                Index=index\r\n            }\r\n        });\r\n        \r\n        return [Min,Index]\r\n    }\r\n\r\n    const [maxLignesPiece,setMaxLignesPiece]=useState(nbLignes)\r\n    const [maxColonnesPiece,setMaxColonnesPiece]=useState(nbColonnes)\r\n\r\n\r\n    const renderPieces=()=>{\r\n        var components =[]\r\n        \r\n        const anchors = getAnchors()\r\n\r\n        const [anchor,idAnchor]=getAnchor(anchors,position) \r\n        let nbL\r\n        let nbC\r\n\r\n        if(anchor[0]< 0 && anchor[1]<0){\r\n            nbL = maxLignesPiece\r\n            nbC = maxColonnesPiece\r\n        }else{\r\n            const area=anchors[idAnchor]\r\n            nbL = area[1][0]-area[0][0]+1\r\n            nbC = area[1][1]-area[0][1]+1\r\n        }\r\n\r\n\r\n        components.push(\r\n            <Piece\r\n                key={idAnchor}\r\n                idPiece={idAnchor}\r\n                mursH={mursH}\r\n                mursV={mursV}\r\n                carte={carte}\r\n                position={position}\r\n                nbLignes={nbL}\r\n                nbColonnes={nbC}\r\n                maxColonnesPiece={maxColonnesPiece}\r\n                maxLignesPiece={maxLignesPiece}\r\n                anchor={anchor[0]< 0 && anchor[1]<0 ?  [0,0] : anchor }\r\n            />\r\n        )\r\n        return components\r\n    }\r\n    \r\n\r\n    return ( \r\n        <>\r\n        <div \r\n            className=\"piece-container\"\r\n        >   \r\n            {renderPieces()}\r\n        </div>\r\n        <h1>AHAH</h1>\r\n        </>\r\n    )\r\n}\r\n \r\nexport default Grille;"]},"metadata":{},"sourceType":"module"}