{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\d\\xE9citude\\\\client\\\\src\\\\routes\\\\PrivateRoute.js\";\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PrivateRoute({\n  component: Component,\n  authed,\n  ...rest\n}) {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => authed === true ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 23\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/hugod/d√©citude/client/src/routes/PrivateRoute.js"],"names":["BrowserRouter","Router","Switch","Route","Link","Redirect","PrivateRoute","component","Component","authed","rest","props","pathname"],"mappings":";AAAA,SACIA,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,IAJJ,EAKIC,QALJ,QAMO,kBANP;;;AASA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,MAAxB;AAAgC,KAAGC;AAAnC,CAAtB,EAAiE;AAC7D,sBACI,QAAC,KAAD,OACQA,IADR;AAEI,IAAA,MAAM,EACDC,KAAD,IAAWF,MAAM,KAAK,IAAX,gBACL,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,YADK,gBAEL,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AACZC,QAAAA,QAAQ,EAAE;AADE;AAAd;AAAA;AAAA;AAAA;AAAA;AALd;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;KAbQN,Y;AAcT,eAAeA,YAAf","sourcesContent":["import {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction PrivateRoute({ component: Component, authed, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={\r\n                (props) => authed === true\r\n                    ? <Component {...props} />\r\n                    : <Redirect to={{\r\n                        pathname: '/login',\r\n                    }} />\r\n            }\r\n        />\r\n    )\r\n}\r\nexport default PrivateRoute"]},"metadata":{},"sourceType":"module"}