{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\decitude\\\\client\\\\src\\\\components\\\\pieces\\\\CasePiece.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect, useLayoutEffect } from 'react';\nimport MurPiece from \"./MurPiece\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CasePiece = ({\n  murs,\n  type,\n  coordX,\n  coordY,\n  maxColonnesPiece,\n  maxLignesPiece\n}) => {\n  _s();\n\n  const [height, setHeight] = useState(0);\n  const [width, setWidth] = useState(0);\n  const colors = [\"#F0F0F0\", // 0 vide\n  \"red\", // 1 pompier\n  \"green\", // 2 habitant\n  \"\", // 3 fumée\n  \"yellow\", // 4 flamme\n  \"#D1D1D1\" // 5 caché\n  ];\n  const element = useRef();\n  useLayoutEffect(() => {\n    function updateSize() {\n      setHeight(element.current.clientHeight);\n      setWidth(element.current.clientWidth);\n    }\n\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  const renderMurs = () => {\n    var mursComponents = [];\n\n    for (let i = 0; i < 4; i++) {\n      mursComponents.push( /*#__PURE__*/_jsxDEV(MurPiece, {\n        num: i,\n        height: height,\n        width: width,\n        type: murs[i],\n        coordX: coordX,\n        coordY: coordY,\n        maxColonnesPiece: maxColonnesPiece,\n        maxLignesPiece: maxLignesPiece\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: mursComponents\n    }, void 0, false);\n  };\n\n  const renderCase = () => {\n    if (type == 1) return /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        maxHeight: height * 0.9,\n        maxWidth: width\n      },\n      src: \"assets/Pompier.png\",\n      alt: \"image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 30\n    }, this);\n    if (type == 2) return /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        maxHeight: height,\n        maxWidth: width * 0.8\n      },\n      src: \"assets/Pompier.png\",\n      alt: \"image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 30\n    }, this);\n    if (type == 3) return /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        maxHeight: height,\n        maxWidth: width * 0.8\n      },\n      src: \"assets/Fumée\" + Math.floor(Math.random() * 5) + \".png\",\n      alt: \"image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 30\n    }, this);\n    if (type == 4) return /*#__PURE__*/_jsxDEV(\"img\", {\n      style: {\n        maxHeight: height,\n        maxWidth: width * 0.8\n      },\n      src: \"assets/Flamme.png\",\n      alt: \"image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 30\n    }, this);\n    return null;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: element,\n    className: \"case-piece\",\n    style: {// backgroundColor:colors[type]\n    },\n    children: [renderMurs(), renderCase()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CasePiece, \"1lcobvBySocoUKwJKH0cZ1DPod8=\");\n\n_c = CasePiece;\nexport default CasePiece;\n\nvar _c;\n\n$RefreshReg$(_c, \"CasePiece\");","map":{"version":3,"sources":["C:/Users/hugod/decitude/client/src/components/pieces/CasePiece.js"],"names":["React","useRef","useState","useEffect","useLayoutEffect","MurPiece","CasePiece","murs","type","coordX","coordY","maxColonnesPiece","maxLignesPiece","height","setHeight","width","setWidth","colors","element","updateSize","current","clientHeight","clientWidth","window","addEventListener","removeEventListener","renderMurs","mursComponents","i","push","renderCase","maxHeight","maxWidth","Math","floor","random"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,MAAd,EAAqBC,QAArB,EAA8BC,SAA9B,EAAwCC,eAAxC,QAA8D,OAA9D;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACfC,EAAAA,IADe;AAEfC,EAAAA,IAFe;AAGfC,EAAAA,MAHe;AAIfC,EAAAA,MAJe;AAKfC,EAAAA,gBALe;AAMfC,EAAAA;AANe,CAAD,KAOZ;AAAA;;AACF,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAmBZ,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM,CAACa,KAAD,EAAOC,QAAP,IAAiBd,QAAQ,CAAC,CAAD,CAA/B;AAEA,QAAMe,MAAM,GAAC,CACT,SADS,EACE;AACX,OAFS,EAEF;AACP,SAHS,EAGA;AACT,IAJS,EAIL;AACJ,UALS,EAKC;AAEV,WAPS,CAOC;AAPD,GAAb;AAWA,QAAMC,OAAO,GAAEjB,MAAM,EAArB;AAEAG,EAAAA,eAAe,CAAC,MAAM;AAClB,aAASe,UAAT,GAAsB;AAElBL,MAAAA,SAAS,CAACI,OAAO,CAACE,OAAR,CAAgBC,YAAjB,CAAT;AACAL,MAAAA,QAAQ,CAACE,OAAO,CAACE,OAAR,CAAgBE,WAAjB,CAAR;AACH;;AACDC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCL,UAAlC;AACAA,IAAAA,UAAU;AACV,WAAO,MAAMI,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCN,UAArC,CAAb;AACH,GATc,EASZ,EATY,CAAf;;AAWA,QAAMO,UAAU,GAAC,MAAI;AACjB,QAAIC,cAAc,GAAC,EAAnB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;AAEhBD,MAAAA,cAAc,CAACE,IAAf,eACI,QAAC,QAAD;AAEI,QAAA,GAAG,EAAED,CAFT;AAGI,QAAA,MAAM,EAAEf,MAHZ;AAII,QAAA,KAAK,EAAEE,KAJX;AAKI,QAAA,IAAI,EAAER,IAAI,CAACqB,CAAD,CALd;AAMI,QAAA,MAAM,EAAEnB,MANZ;AAOI,QAAA,MAAM,EAAEC,MAPZ;AAQI,QAAA,gBAAgB,EAAGC,gBARvB;AASI,QAAA,cAAc,EAAEC;AATpB,SACSgB,CADT;AAAA;AAAA;AAAA;AAAA,cADJ;AAcH;;AACD,wBACI;AAAA,gBACKD;AADL,qBADJ;AAKH,GAxBD;;AA0BA,QAAMG,UAAU,GAAC,MAAI;AAEjB,QAAItB,IAAI,IAAE,CAAV,EAAa,oBAAQ;AAAK,MAAA,KAAK,EAAE;AAACuB,QAAAA,SAAS,EAAClB,MAAM,GAAC,GAAlB;AAAsBmB,QAAAA,QAAQ,EAACjB;AAA/B,OAAZ;AAAmD,MAAA,GAAG,EAAE,oBAAxD;AAA8E,MAAA,GAAG,EAAE;AAAnF;AAAA;AAAA;AAAA;AAAA,YAAR;AACb,QAAIP,IAAI,IAAE,CAAV,EAAa,oBAAQ;AAAK,MAAA,KAAK,EAAE;AAACuB,QAAAA,SAAS,EAAClB,MAAX;AAAkBmB,QAAAA,QAAQ,EAACjB,KAAK,GAAC;AAAjC,OAAZ;AAAmD,MAAA,GAAG,EAAE,oBAAxD;AAA8E,MAAA,GAAG,EAAE;AAAnF;AAAA;AAAA;AAAA;AAAA,YAAR;AACb,QAAIP,IAAI,IAAE,CAAV,EAAa,oBAAQ;AAAK,MAAA,KAAK,EAAE;AAACuB,QAAAA,SAAS,EAAClB,MAAX;AAAkBmB,QAAAA,QAAQ,EAACjB,KAAK,GAAC;AAAjC,OAAZ;AAAmD,MAAA,GAAG,EAAE,iBAAekB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,CAAzB,CAAf,GAA2C,MAAnG;AAA2G,MAAA,GAAG,EAAE;AAAhH;AAAA;AAAA;AAAA;AAAA,YAAR;AACb,QAAI3B,IAAI,IAAE,CAAV,EAAa,oBAAQ;AAAK,MAAA,KAAK,EAAE;AAACuB,QAAAA,SAAS,EAAClB,MAAX;AAAkBmB,QAAAA,QAAQ,EAACjB,KAAK,GAAC;AAAjC,OAAZ;AAAmD,MAAA,GAAG,EAAE,mBAAxD;AAA6E,MAAA,GAAG,EAAE;AAAlF;AAAA;AAAA;AAAA;AAAA,YAAR;AACb,WAAO,IAAP;AACH,GAPD;;AAWA,sBAEI;AACI,IAAA,GAAG,EAAGG,OADV;AAEI,IAAA,SAAS,EAAC,YAFd;AAGI,IAAA,KAAK,EAAE,CACH;AADG,KAHX;AAAA,eAOKQ,UAAU,EAPf,EAQII,UAAU,EARd;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAeH,CAvFD;;GAAMxB,S;;KAAAA,S;AAyFN,eAAeA,SAAf","sourcesContent":["import React,{useRef,useState,useEffect,useLayoutEffect} from 'react'\r\nimport MurPiece from \"./MurPiece\"\r\n\r\nconst CasePiece = ({\r\n    murs,\r\n    type,\r\n    coordX,\r\n    coordY,\r\n    maxColonnesPiece,\r\n    maxLignesPiece\r\n}) => {\r\n    const [height,setHeight]=useState(0)\r\n    const [width,setWidth]=useState(0)\r\n    \r\n    const colors=[\r\n        \"#F0F0F0\", // 0 vide\r\n        \"red\", // 1 pompier\r\n        \"green\", // 2 habitant\r\n        \"\", // 3 fumée\r\n        \"yellow\", // 4 flamme\r\n        \r\n        \"#D1D1D1\" // 5 caché\r\n    ]\r\n\r\n\r\n    const element =useRef()\r\n    \r\n    useLayoutEffect(() => {\r\n        function updateSize() {\r\n            \r\n            setHeight(element.current.clientHeight)\r\n            setWidth(element.current.clientWidth)\r\n        }\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n\r\n    const renderMurs=()=>{\r\n        var mursComponents=[]\r\n        for(let i=0;i<4;i++){\r\n            \r\n            mursComponents.push(\r\n                <MurPiece \r\n                    key={i}\r\n                    num={i} \r\n                    height={height}\r\n                    width={width}\r\n                    type={murs[i]}\r\n                    coordX={coordX}\r\n                    coordY={coordY}\r\n                    maxColonnesPiece={ maxColonnesPiece}\r\n                    maxLignesPiece={maxLignesPiece}\r\n                    \r\n                />\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n                {mursComponents}\r\n            </>\r\n        )\r\n    }\r\n\r\n    const renderCase=()=>{\r\n\r\n        if (type==1) return (<img style={{maxHeight:height*0.9,maxWidth:width}} src={\"assets/Pompier.png\"} alt={\"image\"}/>)\r\n        if (type==2) return (<img style={{maxHeight:height,maxWidth:width*0.8}} src={\"assets/Pompier.png\"} alt={\"image\"}/>)\r\n        if (type==3) return (<img style={{maxHeight:height,maxWidth:width*0.8}} src={\"assets/Fumée\"+Math.floor(Math.random()*5)+\".png\"} alt={\"image\"}/>)\r\n        if (type==4) return (<img style={{maxHeight:height,maxWidth:width*0.8}} src={\"assets/Flamme.png\"} alt={\"image\"}/>)\r\n        return null\r\n    }\r\n  \r\n    \r\n\r\n    return ( \r\n\r\n        <div \r\n            ref={ element }\r\n            className='case-piece'  \r\n            style={{\r\n                // backgroundColor:colors[type]\r\n            }}\r\n        >\r\n           { renderMurs()}\r\n           {renderCase()}\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n \r\nexport default CasePiece;"]},"metadata":{},"sourceType":"module"}