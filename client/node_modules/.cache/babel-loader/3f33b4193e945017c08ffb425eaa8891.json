{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\d\\xE9citude\\\\client\\\\src\\\\components\\\\Grille.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './Grille.css';\nimport Piece from \"./pieces/Piece\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grille = ({\n  nbColonnes,\n  nbLignes,\n  carte,\n  position,\n  mursH,\n  mursV\n}) => {\n  const getDistance = (min, max) => {\n    return Math.sqrt((min[0] - max[0]) * (min[0] - max[0]) + (min[1] - max[1]) * (min[1] - max[1]));\n  };\n\n  const associate = (minimums, maximums) => {\n    var anchors = [];\n    minimums.forEach(min => {\n      var Max = [nbLignes, nbColonnes];\n      maximums.sort((a, b) => b[0] - a[0]);\n      maximums.forEach(max => {\n        if (max[0] >= min[0] && max[1] >= min[1] && max[0] <= Max[0] && max[1] <= Max[1] && (min[0] < max[0] || min[1] < max[1])) {\n          Max = max;\n        }\n      });\n      anchors.push([min, Max]);\n    });\n    return anchors;\n  };\n\n  const getAnchors = () => {\n    var minimums = [];\n    var maximums = [];\n\n    for (let i = 0; i < mursV.length; i++) {\n      for (let j = 0; j < mursH[i].length; j++) {\n        if (mursV[i][j] > 0 && mursH[i][j] > 0) {\n          minimums.push([i, j]);\n        }\n\n        if (mursV[i][j + 1] > 0 && mursH[i + 1][j] > 0) {\n          maximums.push([i, j]);\n        }\n      }\n    }\n\n    return associate(minimums, maximums);\n  };\n\n  const getAnchor = pos => {\n    const anchors = getAnchors();\n    console.log(anchors);\n    anchors.forEach(a => {\n      const min = a[0];\n      const max = a[1];\n\n      if (pos[0] >= min[0] && pos[1] >= min[1] && pos[0] <= max[0] && pos[1] <= max[1]) {\n        console.log(\"anchor => \" + min + \" : pos => \" + pos);\n        return min;\n      }\n    });\n    return null;\n  };\n\n  const maxLignesPiece = 8;\n  const maxColonnesPiece = 16;\n  const anchor = getAnchor(position); // row, column\n\n  const nbLignes1 = 8;\n  const nbColonnes1 = 16;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"piece-container\",\n    children: /*#__PURE__*/_jsxDEV(Piece, {\n      mursH: mursH,\n      mursV: mursV,\n      carte: carte,\n      position: position,\n      nbLignes: nbLignes1,\n      nbColonnes: nbColonnes1,\n      maxColonnesPiece: maxColonnesPiece,\n      maxLignesPiece: maxLignesPiece,\n      anchor: [0, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Grille;\nexport default Grille;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grille\");","map":{"version":3,"sources":["C:/Users/hugod/dÃ©citude/client/src/components/Grille.js"],"names":["React","makeStyles","Piece","Grille","nbColonnes","nbLignes","carte","position","mursH","mursV","getDistance","min","max","Math","sqrt","associate","minimums","maximums","anchors","forEach","Max","sort","a","b","push","getAnchors","i","length","j","getAnchor","pos","console","log","maxLignesPiece","maxColonnesPiece","anchor","nbLignes1","nbColonnes1"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport './Grille.css';\r\n\r\nimport Piece from \"./pieces/Piece\"\r\n\r\n\r\n\r\nconst Grille = ({\r\n    nbColonnes,\r\n    nbLignes,\r\n    carte,\r\n    position,\r\n    mursH,\r\n    mursV\r\n}) => {\r\n\r\n    const getDistance=(min,max)=>{\r\n        return Math.sqrt((min[0]-max[0])*(min[0]-max[0]) + (min[1]-max[1])*(min[1]-max[1]))\r\n    }\r\n\r\n    const associate=(minimums,maximums)=>{\r\n        var anchors=[]\r\n        minimums.forEach(min => {\r\n            var Max =[nbLignes,nbColonnes]\r\n            maximums.sort((a,b)=>b[0]-a[0])\r\n\r\n            maximums.forEach(max => {\r\n                if((max[0]>=min[0] && max[1]>=min[1]) && (max[0]<=Max[0] &&  max[1]<=Max[1]) && (min[0]<max[0] || min[1]<max[1])){\r\n                    Max = max\r\n                }\r\n            });\r\n            anchors.push([min,Max])\r\n        })\r\n       return(anchors)\r\n    }\r\n   \r\n\r\n    const getAnchors=()=>{   \r\n        var minimums=[]\r\n        var maximums=[]\r\n        for(let i=0;i<mursV.length;i++){\r\n            for(let j=0;j<mursH[i].length;j++){\r\n                if(mursV[i][j]>0 && mursH[i][j]>0){\r\n                    minimums.push([i,j])\r\n                }   \r\n                if(mursV[i][j+1]>0 && mursH[i+1][j]>0){\r\n                    maximums.push([i,j])\r\n                }\r\n            }\r\n        }\r\n        return associate(minimums,maximums)\r\n    }\r\n\r\n    const getAnchor=(pos)=>{\r\n        const anchors = getAnchors()\r\n        console.log(anchors)\r\n        anchors.forEach(a => {\r\n            const min = a[0]\r\n            const max = a[1]\r\n\r\n            if(pos[0]>=min[0] && pos[1]>=min[1] && pos[0]<=max[0] && pos[1]<=max[1]){\r\n                console.log(\"anchor => \"+min+\" : pos => \"+pos)\r\n                return min\r\n            }\r\n\r\n        });\r\n        \r\n        return null\r\n    }\r\n\r\n    const maxLignesPiece = 8\r\n    const maxColonnesPiece=16\r\n   \r\n    const anchor=getAnchor(position) // row, column\r\n    const nbLignes1=8\r\n    const nbColonnes1=16\r\n\r\n\r\n\r\n    return ( \r\n        <div \r\n            className=\"piece-container\"\r\n        >\r\n            <Piece\r\n                mursH={mursH}\r\n                mursV={mursV}\r\n                carte={carte}\r\n                position={position}\r\n                nbLignes={nbLignes1}\r\n                nbColonnes={nbColonnes1}\r\n                maxColonnesPiece={maxColonnesPiece}\r\n                maxLignesPiece={maxLignesPiece}\r\n                anchor={[0,0]}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default Grille;"]},"metadata":{},"sourceType":"module"}