{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\decitude\\\\client\\\\src\\\\components\\\\interfaceJoueur\\\\pieces\\\\CasePiece.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect, useLayoutEffect } from 'react';\nimport MurPiece from \"./MurPiece\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CasePiece = ({\n  murs,\n  type,\n  coordX,\n  coordY,\n  nbColonnesPiece,\n  nbLignesPiece,\n  nbColonnesGrille,\n  nbLignesGrille,\n  anchor,\n  propositionMursDetruire,\n  propositionsCase,\n  handleClicMur,\n  handleClicCase,\n  mursH,\n  mursV,\n  position,\n  idPiece,\n  deplacementEnCours\n}) => {\n  _s();\n\n  const [height, setHeight] = useState(0);\n  const [width, setWidth] = useState(0);\n  const colorClignotant = \"#E26F00\";\n  const colorCache = \"#D1D1D1\";\n  const colorFondPosition = \"white\";\n  const colorFondPiece = \"#EEEEEE\";\n  const element = useRef();\n  const [contentDisplayed, setContentDisplayed] = useState(false);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setHeight(element.current.clientHeight);\n      setWidth(element.current.clientWidth);\n    }\n\n    setContentDisplayed(true);\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  const renderMurs = () => {\n    var mursComponents = [];\n\n    for (let i = 0; i < 4; i++) {\n      mursComponents.push( /*#__PURE__*/_jsxDEV(MurPiece, {\n        num: i,\n        height: height,\n        width: width,\n        type: murs[i],\n        coordX: coordX,\n        coordY: coordY,\n        anchor: anchor,\n        nbColonnesPiece: nbColonnesPiece,\n        nbLignesPiece: nbLignesPiece,\n        nbColonnesGrille: nbColonnesGrille,\n        nbLignesGrille: nbLignesGrille,\n        propositionMursDetruire: propositionMursDetruire,\n        handleClicMur: handleClicMur,\n        mursH: mursH,\n        mursV: mursV\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: mursComponents\n    }, void 0, false);\n  };\n\n  const renderContenuCase = () => {\n    let opacity = 0;\n    let source = \"\";\n    var rotate = -90;\n    let align = \"center\";\n    let justify = \"center\";\n\n    if (Math.floor(type / 1000) == 1) {\n      // POMPIER.\n      if (type % 100 < 10) {\n        // POMPIER SEUL\n        opacity = 1;\n\n        if (position[0] == coordY && position[1] == coordX) {\n          // CASE DU JOUEUR\n          source = \"assets/Pompier\" + (type % 1000 - type % 100) / 100 + \"0\" + (deplacementEnCours !== null && deplacementEnCours !== undefined ? deplacementEnCours.type : \"0\") + \".png\";\n        } else {\n          source = \"assets/Pompier\" + (type % 1000 - type % 100) / 100 + \"0\" + \"0.png\";\n        }\n      } else {\n        // POMPIER HABITANT\n        opacity = 1;\n        source = \"assets/PompierHabitant\" + (type % 1000 - type % 10) / 10 + \".png\";\n      }\n\n      if (deplacementEnCours !== null && deplacementEnCours !== undefined && position[0] == coordY && position[1] == coordX) {\n        switch (deplacementEnCours.rotation) {\n          case 1:\n            // HAUT\n            rotate = -90;\n\n            switch (deplacementEnCours.type) {\n              case 1:\n                align = \"flex-start\";\n                break;\n\n              case 2:\n                align = \"flex-end\";\n                break;\n            }\n\n            break;\n\n          case 2:\n            // DROITE\n            rotate = 0;\n\n            switch (deplacementEnCours.type) {\n              case 1:\n                justify = \"flex-end\";\n                break;\n\n              case 2:\n                justify = \"flex-start\";\n                break;\n            }\n\n            break;\n\n          case 3:\n            // BAS\n            rotate = 90;\n\n            switch (deplacementEnCours.type) {\n              case 1:\n                align = \"flex-end\";\n                break;\n\n              case 2:\n                align = \"flex-start\";\n                break;\n            }\n\n            break;\n\n          case 4:\n            // GAUCHE\n            rotate = 180;\n\n            switch (deplacementEnCours.type) {\n              case 1:\n                justify = \"flex-start\";\n                break;\n\n              case 2:\n                justify = \"flex-end\";\n                break;\n            }\n\n            break;\n\n          default:\n            rotate = 0;\n            break;\n        }\n      } else {\n        switch (type % 10) {\n          case 1:\n            rotate = -90;\n            break;\n\n          case 2:\n            rotate = 0;\n            break;\n\n          case 3:\n            rotate = 90;\n            break;\n\n          case 4:\n            rotate = 180;\n            break;\n\n          default:\n            rotate = -90;\n            break;\n        }\n      }\n    } else {\n      if (position[0] < nbLignesPiece && position[1] < nbColonnesPiece) {\n        if (Math.floor(type / 10) == 2) {\n          opacity = 1;\n          source = \"assets/Habitant\" + type % 10 + \".png\";\n          rotate = 0;\n        } else if (type == 3) {\n          opacity = 1;\n          source = \"assets/FumÃ©e\" + (coordX + coordY) % 5 + \".png\";\n          rotate = 0;\n        } else if (type == 4) {\n          opacity = 1;\n          source = \"assets/Flamme.png\";\n          rotate = 0;\n        } else {\n          if (position !== null && position[0] - 1 == coordY && position[1] == coordX && deplacementEnCours.type == 1 && deplacementEnCours.rotation == 1) align = \"flex-end\"; // CASE DESSUS\n\n          if (position !== null && position[0] == coordY && position[1] + 1 == coordX && deplacementEnCours.type == 1 && deplacementEnCours.rotation == 2) align = \"flex-start\"; // CASE DROITE\n\n          if (position !== null && position[0] + 1 == coordY && position[1] == coordX && deplacementEnCours.type == 1 && deplacementEnCours.rotation == 3) align = \"flex-start\"; // CASE DESSOUS\n\n          if (position !== null && position[0] - 1 == coordY && position[1] == coordX && deplacementEnCours.type == 1 && deplacementEnCours.rotation == 4) align = \"flex-end\"; // CASE GAUCHE\n\n          rotate = 0;\n        }\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        display: \"flex\",\n        opacity: position[0] == coordY && position[1] == coordX ? opacity : 1,\n        width: \"100%\",\n        height: \"100%\",\n        alignItems: align,\n        justifyContent: justify\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          // maxHeight: height * 0.9,\n          // maxWidth: width * 0.8,\n          position: \"relative\",\n          display: !contentDisplayed && position[0] == coordY && position[1] == coordX ? \"none\" : \"\",\n          maxWidth: \"90%\",\n          height: \"95%\",\n          objectFit: \"contain\",\n          transform: rotate !== undefined && position[0] == coordY && position[1] == coordX ? \"rotate(\" + rotate + \"deg)\" : \"\" // backgroundColor:\"teal\"\n\n        },\n        src: source // onError={(evt)=>{\n        //     setContentDisplayed(false)\n        // }}\n        // onLoad={()=>setContentDisplayed(true)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderCase = () => {\n    const source = idPiece !== null && idPiece !== undefined ? \"assets/Sol_0\" + (idPiece % 5 + 1) + \".png\" : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        width: \"100%\",\n        height: \"100%\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [source !== null ? /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          objectFit: \"cover\",\n          filter: \"brightness(0.90) grayscale(5%) contrast(95%)\"\n        },\n        src: source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this) : null, renderContenuCase()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this);\n  };\n\n  const [clignotant, setClignotant] = useState(false);\n  const [valeurApres, setValeurApres] = useState(null);\n  const [valeurAvant, setValeurAvant] = useState(null);\n\n  const checkInCoords = () => {\n    var checked = false;\n\n    if (propositionsCase !== null && propositionsCase !== undefined) {\n      var valApres = null;\n      var valAvant = null;\n      propositionsCase.forEach(coords => {\n        if (coords[0] == coordY && coords[1] == coordX) {\n          checked = true;\n          valAvant = coords[2];\n          valApres = coords[3];\n        }\n      });\n\n      if (checked && valApres != null) {\n        setValeurAvant(valAvant);\n        setValeurApres(valApres);\n      }\n    }\n\n    return checked;\n  }; // useEffect(()=>{\n  //     console.log(valeurApres)\n  // },[valeurApres])\n\n\n  useEffect(() => {\n    setClignotant(checkInCoords());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: element,\n    className: clignotant ? \"clignotant case-piece\" : \"case-piece\",\n    style: {\n      backgroundColor: clignotant ? colorClignotant : type >= 0 ? position[0] == coordY && position[1] == coordX ? colorFondPosition : colorFondPiece : colorCache,\n      // -1 cachÃ©\"\n      transition: \"2s\"\n    },\n    onClick: clignotant ? () => handleClicCase(valeurAvant, valeurApres, coordX, coordY) : null,\n    children: [renderMurs(), renderCase()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 333,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CasePiece, \"oT8iRokr4sijDg/Fi16Otz6LbxI=\");\n\n_c = CasePiece;\nexport default CasePiece;\n\nvar _c;\n\n$RefreshReg$(_c, \"CasePiece\");","map":{"version":3,"sources":["C:/Users/hugod/decitude/client/src/components/interfaceJoueur/pieces/CasePiece.js"],"names":["React","useRef","useState","useEffect","useLayoutEffect","MurPiece","CasePiece","murs","type","coordX","coordY","nbColonnesPiece","nbLignesPiece","nbColonnesGrille","nbLignesGrille","anchor","propositionMursDetruire","propositionsCase","handleClicMur","handleClicCase","mursH","mursV","position","idPiece","deplacementEnCours","height","setHeight","width","setWidth","colorClignotant","colorCache","colorFondPosition","colorFondPiece","element","contentDisplayed","setContentDisplayed","updateSize","current","clientHeight","clientWidth","window","addEventListener","removeEventListener","renderMurs","mursComponents","i","push","renderContenuCase","opacity","source","rotate","align","justify","Math","floor","undefined","rotation","display","alignItems","justifyContent","maxWidth","objectFit","transform","renderCase","flex","filter","clignotant","setClignotant","valeurApres","setValeurApres","valeurAvant","setValeurAvant","checkInCoords","checked","valApres","valAvant","forEach","coords","backgroundColor","transition"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect, useLayoutEffect } from 'react'\nimport MurPiece from \"./MurPiece\"\n\nconst CasePiece = ({\n    murs,\n    type,\n    coordX,\n    coordY,\n    nbColonnesPiece,\n    nbLignesPiece,\n    nbColonnesGrille,\n    nbLignesGrille,\n    anchor,\n    propositionMursDetruire,\n    propositionsCase,\n    handleClicMur,\n    handleClicCase,\n    mursH,\n    mursV,\n    position,\n    idPiece,\n    deplacementEnCours\n}) => {\n    const [height, setHeight] = useState(0)\n    const [width, setWidth] = useState(0)\n\n    const colorClignotant = \"#E26F00\"\n    const colorCache = \"#D1D1D1\"\n    const colorFondPosition = \"white\"\n    const colorFondPiece = \"#EEEEEE\"\n\n    const element = useRef()\n\n\n    const [contentDisplayed,setContentDisplayed]=useState(false)\n\n    useLayoutEffect(() => {\n        function updateSize() {\n            setHeight(element.current.clientHeight)\n            setWidth(element.current.clientWidth)\n        }\n        setContentDisplayed(true)\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n\n    const renderMurs = () => {\n        var mursComponents = []\n        for (let i = 0; i < 4; i++) {\n\n            mursComponents.push(\n                <MurPiece\n                    key={i}\n                    num={i}\n                    height={height}\n                    width={width}\n                    type={murs[i]}\n                    coordX={coordX}\n                    coordY={coordY}\n                    anchor={anchor}\n                    nbColonnesPiece={nbColonnesPiece}\n                    nbLignesPiece={nbLignesPiece}\n                    nbColonnesGrille={nbColonnesGrille}\n                    nbLignesGrille={nbLignesGrille}\n                    propositionMursDetruire={propositionMursDetruire}\n                    handleClicMur={handleClicMur}\n                    mursH={mursH}\n                    mursV={mursV}\n                />\n            )\n        }\n        return (\n            <>\n                {mursComponents}\n            </>\n        )\n    }\n\n\n    const renderContenuCase = () => {\n        let opacity = 0\n        let source = \"\"\n        var rotate=-90\n\n        \n        let align=\"center\"\n        let justify=\"center\"\n\n        if (Math.floor(type / 1000) == 1) { // POMPIER.\n            \n            if (type % 100 < 10) { // POMPIER SEUL\n                opacity = 1\n\n                if(position[0] == coordY && position[1] == coordX){ // CASE DU JOUEUR\n                    source = \"assets/Pompier\" + (type % 1000 - type % 100) / 100 + \"0\"+(deplacementEnCours!==null && deplacementEnCours!==undefined ? deplacementEnCours.type : \"0\")+\".png\"\n\n                }else{\n                    \n                    source = \"assets/Pompier\" + (type % 1000 - type % 100) / 100 + \"0\"+ \"0.png\"\n\n                }\n\n\n            } else { // POMPIER HABITANT\n                opacity = 1\n                source = \"assets/PompierHabitant\" + (type % 1000 - type % 10) / 10 + \".png\"\n            }\n\n            if(deplacementEnCours!==null && deplacementEnCours!==undefined && position[0] == coordY && position[1] == coordX){\n                switch (deplacementEnCours.rotation) {\n                    case 1: // HAUT\n                        rotate = -90\n                        switch (deplacementEnCours.type) {\n                            case 1:\n                                align=\"flex-start\"\n                                break;\n                        \n                            case 2:\n                                align=\"flex-end\"\n                                break;\n                        }\n                        break;\n                    case 2: // DROITE\n                        rotate = 0\n                        switch (deplacementEnCours.type) {\n                            case 1:\n                                justify=\"flex-end\"\n                                break;\n                        \n                            case 2:\n                                justify=\"flex-start\"\n                                break;\n                        }\n                        break;\n                    case 3: // BAS\n                        rotate = 90\n                        switch (deplacementEnCours.type) {\n                            case 1:\n                                align=\"flex-end\"\n                                break;\n                        \n                            case 2:\n                                align=\"flex-start\"\n                                break;\n                        }\n                        break;\n                    case 4: // GAUCHE\n                        rotate = 180\n                        switch (deplacementEnCours.type) {\n                            case 1:\n                                justify=\"flex-start\"\n                                break;\n                        \n                            case 2:\n                                justify=\"flex-end\"\n                                break;\n                        }\n                        break;\n                    default:\n                        rotate = 0\n                        break;\n                }\n           \n    \n            }else{\n                switch (type%10) {\n                    case 1:\n                        rotate = -90\n                        break;\n                    case 2:\n                        rotate = 0\n                        break;\n                    case 3:\n                        rotate = 90\n                        break;\n                    case 4:\n                        rotate = 180\n                        break;\n                    default:\n                        rotate=-90\n                        break;\n                }\n            }\n            \n        } else{\n            if(position[0] < nbLignesPiece && position[1] < nbColonnesPiece){\n                if (Math.floor(type / 10) == 2) {\n                    opacity = 1\n                    source = \"assets/Habitant\" + type % 10 + \".png\"\n                    rotate=0\n                } else if (type == 3) {\n                    opacity = 1\n                    source = \"assets/FumÃ©e\" + (coordX + coordY) % 5 + \".png\"\n                    rotate=0\n                }\n                else if (type == 4) {\n                    opacity = 1\n                    source = \"assets/Flamme.png\"\n                    rotate=0\n                }else{\n                    \n                    if( position!==null && position[0]-1 == coordY && position[1] == coordX && deplacementEnCours.type==1 && deplacementEnCours.rotation==1) align=\"flex-end\"// CASE DESSUS\n                    if( position!==null && position[0] == coordY && position[1] +1 == coordX && deplacementEnCours.type==1 && deplacementEnCours.rotation==2) align=\"flex-start\"// CASE DROITE\n                    if( position!==null && position[0]+1 == coordY && position[1] == coordX && deplacementEnCours.type==1 && deplacementEnCours.rotation==3) align=\"flex-start\"// CASE DESSOUS\n                    if( position!==null && position[0] -1== coordY && position[1]== coordX && deplacementEnCours.type==1 && deplacementEnCours.rotation==4) align=\"flex-end\"// CASE GAUCHE\n            \n                    rotate=0\n                    \n                }\n            }\n\n           \n\n\n        } \n\n        \n        \n\n        return (\n            <div\n                style={{\n                    position:\"absolute\",\n                    display:\"flex\",\n                    opacity: position[0] == coordY && position[1] == coordX ? opacity : 1,\n                    \n                    width:\"100%\",\n                    height:\"100%\",\n                    alignItems:align,\n                    justifyContent:justify\n                    \n                }}\n            >\n                <img\n                    style={{\n                        // maxHeight: height * 0.9,\n                        // maxWidth: width * 0.8,\n                        position:\"relative\",\n                        display:!contentDisplayed && position[0] == coordY && position[1] == coordX ? \"none\" : \"\",\n                        maxWidth:\"90%\",\n                        height:\"95%\",\n                        objectFit: \"contain\",\n                        transform: rotate !== undefined && position[0] == coordY && position[1] == coordX ? \"rotate(\" + rotate + \"deg)\" : \"\",\n                        // backgroundColor:\"teal\"\n                    }}\n                    src={source}\n                    // onError={(evt)=>{\n                    //     setContentDisplayed(false)\n                    // }}\n                    // onLoad={()=>setContentDisplayed(true)}\n                />\n            </div>\n        )\n    }\n\n\n    const renderCase = () => {\n        const source = idPiece!==null && idPiece!==undefined ? \"assets/Sol_0\"+((idPiece)%5+1)+\".png\" : null\n\n\n        return (\n            <div \n                style={{\n                    flex:1,\n                    width: \"100%\",\n                    height: \"100%\",\n                    justifyContent:\"center\",\n                    alignItems:\"center\"\n                }}\n            >\n                {source!==null ? \n                <img\n                style={{\n                    position:\"absolute\",\n                    width: \"100%\",\n                    height: \"100%\",\n                    objectFit: \"cover\",\n                    filter: \"brightness(0.90) grayscale(5%) contrast(95%)\"\n                }}\n                src={source}\n                \n            />\n            : null}\n                \n                {renderContenuCase()}\n            </div>\n\n        )\n    }\n\n\n\n    const [clignotant, setClignotant] = useState(false)\n    const [valeurApres, setValeurApres] = useState(null)\n    const [valeurAvant, setValeurAvant] = useState(null)\n    const checkInCoords = () => {\n        var checked = false\n        if (propositionsCase !== null && propositionsCase !== undefined) {\n            var valApres = null\n            var valAvant = null\n            propositionsCase.forEach((coords) => {\n                if (coords[0] == coordY && coords[1] == coordX) {\n                    checked = true\n                    valAvant = coords[2]\n                    valApres = coords[3]\n                }\n            });\n\n            if (checked && valApres != null) {\n                setValeurAvant(valAvant)\n                setValeurApres(valApres)\n            }\n        }\n\n        return checked\n\n    }\n\n    // useEffect(()=>{\n    //     console.log(valeurApres)\n    // },[valeurApres])\n\n\n\n    useEffect(() => {\n        setClignotant(checkInCoords())\n    })\n\n\n    return (\n\n        <div\n\n            ref={element}\n            className={clignotant ? \"clignotant case-piece\" : \"case-piece\"}\n            style={{\n                backgroundColor: clignotant ? colorClignotant : (type >= 0 ? (position[0] == coordY && position[1] == coordX ? colorFondPosition : colorFondPiece) : colorCache), // -1 cachÃ©\"\n                transition: \"2s\"\n            }}\n            onClick={clignotant ? () => handleClicCase(valeurAvant, valeurApres, coordX, coordY)\n                : null}\n        >\n            {renderMurs()}\n            {renderCase()}\n\n        </div>\n\n    );\n}\n\nexport default CasePiece;"]},"metadata":{},"sourceType":"module"}