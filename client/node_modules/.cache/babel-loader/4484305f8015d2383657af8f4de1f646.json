{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\d\\xE9citude\\\\client\\\\src\\\\routes\\\\TactInterface.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/App.css\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport PlayAPI from \"../API/PlayAPI\";\nimport TactBandeauTop from \"../components/interfaceJoueur/TactBandeauTop\";\nimport TactBandeauBottom from \"../components/interfaceJoueur/TactBandeauBottom\";\nimport Grille from \"../components/interfaceJoueur/Grille\";\nimport { useHistory } from 'react-router-dom';\nimport cookie from 'react-cookies';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TactInterface = () => {\n  _s();\n\n  const history = useHistory();\n  const user = cookie.load(\"user\"); // console.log(user)\n\n  if (user == null || user == undefined) history.push(\"/login\");\n  const [numPompier, setNumPompier] = useState(user.role.replace(\"TACT\", \"\"));\n  const [currentTour, setCurrentTour] = useState(null);\n  const [currentCycle, setCurrentCycle] = useState(null);\n  const [currentSequence, setCurrentSequence] = useState(null);\n  const [session, setSession] = useState(user.session);\n  const [equipe, setEquipe] = useState(user.equipe);\n  const [position, setPosition] = useState(null);\n  const [histActions, setHistActions] = useState([]);\n  const [stocks, setStocks] = useState({\n    Interventions: 10,\n    Feu: 1,\n    FeuFum: 10,\n    Fum: 10,\n    Marqueur: 10\n  });\n  const [resultats, setResultats] = useState({\n    Decedes: 0,\n    Sauves: 0\n  });\n  const [interventions, setInterventions] = useState({\n    Deplacement: 0,\n    Feu: 0,\n    FeuFum: 0,\n    Fum: 0,\n    Marqueur: 0,\n    Porte: 0,\n    Habitant: 0\n  });\n  const [budget, setBudget] = useState(800);\n  const isLoading = useRef(false); // INITIALISATION DE LA CARTE\n  // const [carte, setCarte] = useState([\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  // ])\n\n  const [carte, setCarte] = useState([]);\n  const [nbLignesGrille, setNbLignesGrille] = useState(0);\n  const [nbColonnesGrille, setNbColonnesGrille] = useState(0);\n  const [mursH, setMursH] = useState([[1, 1, 1, 1, 1, 1, 2, 6, 1, 1, 1, 1, 2, 5, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 2, 6, 1, 6, 2, 1, 1, 1, 5, 2, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 6, 2, 1, 1, 1, 1, 1, 1, 1, 1]]);\n  const [mursV, setMursV] = useState([[1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [2, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [5, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 0, 0, 2], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 5]]); // GET PLAY PARAMETERS \n\n  const getPlayState = async (session, equipe) => {\n    if (!isLoading.current) {\n      isLoading.current = true;\n      const currentPlayState = await PlayAPI.getPlayState(session, equipe);\n\n      if (Object.keys(currentPlayState).length > 0) {\n        // console.log(\"Get play state 2\")\n        // console.log(parseInt(JSON.parse(currentPlayState.currentTour.valeur)))\n        setCurrentTour(parseInt(JSON.parse(currentPlayState.currentTour.valeur)));\n        setCurrentCycle(parseInt(JSON.parse(currentPlayState.currentCycle.valeur)));\n        setCurrentSequence(parseInt(JSON.parse(currentPlayState.currentSequence.valeur)));\n        setMursH(JSON.parse(currentPlayState.mursH.valeur));\n        setMursV(JSON.parse(currentPlayState.mursV.valeur));\n        setCarte(JSON.parse(currentPlayState.carte.valeur));\n        setResultats({\n          Decedes: parseInt(JSON.parse(currentPlayState.resultatsDecedes.valeur)),\n          Sauves: parseInt(JSON.parse(currentPlayState.resultatsSauves.valeur))\n        });\n      }\n\n      getPositionFromCarte(JSON.parse(currentPlayState.carte.valeur));\n      isLoading.current = false;\n    }\n  };\n\n  useEffect(() => {\n    // console.log(carte)\n    if (carte.length > 0) {\n      setNbLignesGrille(carte.length);\n      setNbColonnesGrille(carte[0].length);\n      getPositionFromCarte(carte);\n    }\n  }, [carte]); // useEffect(()=>{\n  //   console.log(currentTour)\n  // },[currentTour])\n\n  useEffect(() => {\n    if (session != null && equipe != null && currentTour == null) {\n      if (!isLoading.current) getPlayState(session, equipe);\n      getPlayParameters();\n      getPositionFromCarte();\n    }\n  }, [session, equipe, numPompier]);\n\n  const getPlayParameters = async () => {\n    const param = await PlayAPI.getConfiguration(session);\n    setConfiguration(param);\n  };\n\n  const getPositionFromCarte = carte => {\n    // console.log(carte)\n    if (carte != null && carte.length > 0) {\n      carte.forEach((ligne, indexI) => {\n        ligne.forEach((valeur, indexJ) => {\n          if (Math.floor(valeur / 100) == 1 && Math.floor(valeur % 100 / 10) == numPompier) setPosition([indexI, indexJ]); // console.log(valeur%100/10)\n        });\n      });\n    }\n  }; // const onTextChange = (e) => {\n  //   setNumPompier(e.target.value)\n  //   console.log(typeof (e.target.value))\n  // }\n  // const onXChange = (e) => {\n  //   e.preventDefault()\n  //   if (e.target.value.length > 0) {\n  //     updateCarte(position, 0)\n  //     setPosition(position => [position[0], parseInt(e.target.value)])\n  //   } else {\n  //     updateCarte(position, 0)\n  //     setPosition(position => [position[0], 0])\n  //   }\n  // }\n  // const onYChange = (e) => {\n  //   e.preventDefault()\n  //   if (e.target.value.length > 0) {\n  //     updateCarte(position, 0)\n  //     setPosition(position => [parseInt(e.target.value), position[1]])\n  //   } else {\n  //     updateCarte(position, 0)\n  //     setPosition(position => [0, position[1]])\n  //   }\n  // }\n  // UPDATES\n\n\n  const updateCarte = (coords, value) => {\n    if (coords[0] < nbLignesGrille && coords[1] < nbColonnesGrille) {\n      try {\n        var c = [...carte];\n        c[coords[0]][coords[1]] = value;\n        setCarte(c);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const updateMurH = (coords, value) => {\n    if (coords[0] < mursH.length && coords[1] < mursH[0].length) {\n      try {\n        var m = [...mursH];\n        m[coords[0]][coords[1]] = value;\n        setMursH(m);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const updateMurV = (coords, value) => {\n    if (coords[0] < mursV.length && coords[1] < mursV[0].length) {\n      try {\n        var m = [...mursV];\n        m[coords[0]][coords[1]] = value;\n        setMursV(m);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }; // ACTIONS\n\n\n  const updateBudget = action => {\n    var depenses = 0;\n    if (configuration[\"coutEq\" + action] != null) depenses += configuration[\"coutEq\" + action].valeur;\n    if (configuration[\"coutInter\" + action] != null) depenses += configuration[\"coutInter\" + action].valeur;\n    setBudget(budget => budget - depenses);\n  };\n\n  const addHistAction = () => {\n    const h = [...histActions, {\n      carte: JSON.stringify(carte),\n      budget: JSON.stringify(budget),\n      mursH: JSON.stringify(mursH),\n      mursV: JSON.stringify(mursV),\n      stocks: JSON.stringify(stocks),\n      resultats: JSON.stringify(resultats),\n      interventions: JSON.stringify(interventions)\n    }];\n    setHistActions(h);\n  };\n\n  const retourAction = () => {\n    var h = [...histActions];\n    h.pop();\n    const state = h[h.length - 1]; // console.log(state)\n\n    setCarte(JSON.parse(state.carte));\n    setMursH(JSON.parse(state.mursH));\n    setMursV(JSON.parse(state.mursV));\n    setStocks(JSON.parse(state.stocks));\n    setInterventions(JSON.parse(state.interventions));\n    setResultats(JSON.parse(state.resultats));\n    setBudget(JSON.parse(state.budget));\n    setHistActions(h);\n  };\n\n  useEffect(() => {\n    if (position !== null && histActions.length == 0) addHistAction();\n  }, [position]);\n  useEffect(() => {\n    console.log(\"hist Actions\");\n    console.log(histActions);\n  }, [histActions]);\n  useEffect(() => {\n    if (position !== null) {\n      if (budget < histActions[histActions.length - 1].budget) {\n        addHistAction();\n      }\n    }\n  }, [budget]);\n\n  const doAction = action => {\n    try {\n      if (Object.keys(stocks).includes(action)) {\n        var s = stocks;\n        s[action] = s[action] - 1;\n        setStocks(s);\n      }\n    } catch (error) {}\n\n    try {\n      if (Object.keys(interventions).includes(action)) {\n        var i = interventions;\n        i[action] = i[action] - 1;\n        setInterventions(i);\n      }\n    } catch (error) {} // setTimeout(() => {\n\n\n    updateBudget(action); // }, 1000);\n  };\n\n  const updateResultats = sauve => {\n    var res = resultats;\n\n    if (sauve) {\n      res.nbSauves += 1;\n    } else {\n      res.nbDecedes += 1;\n    }\n\n    setResultats(res);\n  };\n\n  useEffect(() => {\n    setBtnClickedBottom(null);\n    revealHabitant();\n  }, [position]);\n  useEffect(() => {\n    if (carte.length > 0) relacherHabitant();\n  }, [position, mursH, mursV]); // useEffect(() => {\n  //   console.log(\"Stocks\")\n  //   console.log(stocks)\n  // }, [stocks])\n\n  useEffect(() => {\n    if (configuration != null) {\n      var inter = interventions;\n      const interKeys = Object.keys(inter);\n      interKeys.forEach(action => {\n        try {\n          if (configuration[\"coutInter\" + action].valeur > 0) {\n            inter[action] = Math.min(configuration[\"coutEq\" + action] != null && configuration[\"coutEq\" + action] != undefined ? Math.floor(budget / (configuration[\"coutInter\" + action].valeur + configuration[\"coutEq\" + action].valeur)) : Math.floor(budget / configuration[\"coutInter\" + action].valeur), stocks[action] != null && stocks[action] != undefined && stocks[action] != \"NaN\" ? stocks[action] : 1000);\n          }\n        } catch (error) {\n          console.log(error, action);\n        }\n      });\n      setInterventions(inter);\n    } else {// getPlayParameters()\n    }\n  }, [budget, configuration, numPompier]); // SOCKETS\n\n  const socket = PlayAPI.getSocket(); // SOCKETS \n\n  const onTourChange = async e => {\n    e.preventDefault();\n    console.log(\"nouveau tour todo\");\n  };\n\n  useEffect(() => {\n    socket.on('changementTour', data => {\n      console.log(\"socket nouveau tour\");\n      setCurrentTour(data.numPompier + 1);\n      getPlayState(session, equipe);\n    });\n  }); // TESTS\n\n  const test = async () => {\n    console.log(\"test function\");\n  }; // const renderTests = () => {\n  //   return (\n  //     <div style={{ position: \"absolute\", top: 200 }}>\n  //       <div className=\"card\" style={{ flex: 1, flexDirection: \"column\" }}>\n  //         <form onSubmit={e => onTourChange(e)}>\n  //           <h1>Manual settings</h1>\n  //           <div className=\"name-field\">\n  //             <label htmlFor=\"numPompier\">Numéro pompier</label>\n  //             <input\n  //               type=\"number\"\n  //               name=\"numPompier\"\n  //               onChange={e => onTextChange(e)}\n  //               value={numPompier}\n  //               label=\"Numéro pompier\"\n  //             />\n  //           </div>\n  //           {currentTour == numPompier ?\n  //             <button>Fin du tour</button>\n  //             :\n  //             <button disabled>Fin du tour</button>\n  //           }\n  //         </form>\n  //       </div>\n  //       <div style={{ flex: 1, flexDirection: \"column\" }}>\n  //         <label htmlFor=\"numPompier\">Position x</label>\n  //         <input\n  //           type=\"number\"\n  //           name=\"xPompier\"\n  //           onChange={e => onXChange(e)}\n  //           value={position[1]}\n  //         />\n  //         <label htmlFor=\"numPompier\">Position y</label>\n  //         <input\n  //           type=\"number\"\n  //           name=\"yPompier\"\n  //           onChange={e => onYChange(e)}\n  //           value={position[0]}\n  //         />\n  //       </div>\n  //       <button onClick={() => test()} >test function</button>\n  //     </div>\n  //   )\n  // }\n  // AUTORISATIONS \n\n\n  const deplacementAutorise = deplacement => {\n    // return true\n    var dpl = [...deplacement];\n    if (dpl[0] == 0 && dpl[1] == 0) return false;\n    if (position[0] + dpl[0] > carte.length - 1 || position[1] + dpl[1] > carte[0].length - 1 || position[0] + dpl[0] < 0 || position[1] + dpl[1] < 0) return false;\n    const dplInterditsCases = [100, 20, 3, 4];\n\n    try {\n      const valeurCaseDeplacement = carte[position[0] + dpl[0]][position[1] + dpl[1]];\n      if (Math.floor(valeurCaseDeplacement / 100) == 1) return false;\n      if (Math.floor(valeurCaseDeplacement / 10) == 2) return false;\n      if (dplInterditsCases.includes(valeurCaseDeplacement)) return false;\n    } catch (error) {}\n\n    const dplInterditsMurs = [1, 2, 3, 5];\n\n    try {\n      if (dpl[0] != 0) {\n        // haut bas\n        if (dpl[0] < 0) {\n          dpl[0] = 0;\n        }\n\n        if (typeof mursH[position[0] + dpl[0]][position[1]] === 'undefined') return false;\n        if (dplInterditsMurs.includes(mursH[position[0] + dpl[0]][position[1]])) return false;\n      } else {\n        // gauche droite\n        if (dpl[1] < 0) {\n          dpl[1] = 0;\n        }\n\n        if (typeof mursV[position[0]][position[1] + dpl[1]] === 'undefined') return false;\n        if (dplInterditsMurs.includes(mursV[position[0]][position[1] + dpl[1]])) return false;\n      }\n    } catch (error) {}\n\n    return true;\n  };\n\n  const testRelacherHabitant = () => {\n    if (carte[position[0]][position[1]] % 10 == 0) return false; // pas de transport d'habitant\n\n    const mursBloquants = [1, 2, 3, 5];\n    if (position[0] == 0 && !mursBloquants.includes(mursH[position[0]][position[1]])) return true; // haut\n\n    if (position[0] == nbLignesGrille - 1 && !mursBloquants.includes(mursH[position[0] + 1][position[1]])) return true; // bas\n\n    if (position[1] == 0 && !mursBloquants.includes(mursV[position[0]][position[1]])) return true; // gauche\n\n    if (position[1] == nbColonnesGrille - 1 && !mursBloquants.includes(mursV[position[0]][position[1] + 1])) return true; // droite\n\n    return false;\n  };\n\n  const relacherHabitant = () => {\n    if (testRelacherHabitant()) {\n      setTimeout(() => {\n        updateResultats(true);\n        updateCarte(position, 100 + numPompier * 10);\n      }, 1000);\n    }\n  };\n\n  const revealHabitant = () => {\n    if (configuration != null) {\n      const casesAutour = getCasesAutour(); // console.log(configuration)\n\n      const nouvelHabitant = Math.random() <= configuration.txApparitionHab.valeur;\n\n      try {\n        if (casesAutour.dessus == 20) updateCarte([position[0] - 1, position[1]], nouvelHabitant ? 20 + Math.floor(configuration.nbHabDifferents.valeur * Math.random()) + 1 : 0);\n      } catch (error) {}\n\n      try {\n        if (casesAutour.droite == 20) updateCarte([position[0], position[1] + 1], nouvelHabitant ? 20 + Math.floor(configuration.nbHabDifferents.valeur * Math.random()) + 1 : 0);\n      } catch (error) {}\n\n      try {\n        if (casesAutour.dessous == 20) updateCarte([position[0] + 1, position[1]], nouvelHabitant ? 20 + Math.floor(configuration.nbHabDifferents.valeur * Math.random()) + 1 : 0);\n      } catch (error) {}\n\n      try {\n        if (casesAutour.gauche == 20) updateCarte([position[0], position[1] - 1], nouvelHabitant ? 20 + Math.floor(configuration.nbHabDifferents.valeur * Math.random()) + 1 : 0);\n      } catch (error) {}\n    }\n  };\n\n  const getCasesAutour = () => {\n    var cases = {};\n\n    try {\n      cases[\"dessus\"] = carte[position[0] - 1][position[1]]; // dessus\n    } catch (error) {}\n\n    try {\n      cases[\"droite\"] = carte[position[0]][position[1] + 1]; // droite\n    } catch (error) {}\n\n    try {\n      cases[\"dessous\"] = carte[position[0] + 1][position[1]]; // dessous\n    } catch (error) {}\n\n    try {\n      cases[\"gauche\"] = carte[position[0]][position[1] - 1]; // gauche\n    } catch (error) {}\n\n    return cases;\n  };\n\n  const getMursAutour = () => {\n    var murs = [];\n\n    try {\n      if (mursH[position[0]][position[1]] != 4 || mursH[position[0]][position[1] - 1] < 6 && mursH[position[0]][position[1] + 1] < 6) {\n        murs.push(mursH[position[0]][position[1]]); // dessus\n      } else {\n        murs.push(0);\n      }\n    } catch (error) {}\n\n    try {\n      if (mursV[position[0]][position[1] + 1] != 4 || mursV[position[0] - 1][position[1] + 1] < 6 && mursV[position[0] + 1][position[1] + 1] < 6) {\n        murs.push(mursV[position[0]][position[1] + 1]); // droite\n      } else {\n        murs.push(0);\n      }\n    } catch (error) {}\n\n    try {\n      if (mursH[position[0] + 1][position[1]] != 4 || mursH[position[0] + 1][position[1] - 1] < 6 && mursH[position[0] + 1][position[1] + 1] < 6) {\n        murs.push(mursH[position[0] + 1][position[1]]); // dessous\n      } else {\n        murs.push(0);\n      }\n    } catch (error) {}\n\n    try {\n      if (mursV[position[0]][position[1]] != 4 || mursV[position[0] - 1][position[1]] < 6 && mursV[position[0] + 1][position[1]] < 6) {\n        murs.push(mursV[position[0]][position[1]]); // gauche\n      } else {\n        murs.push(0);\n      }\n    } catch (error) {} // console.log(murs)\n\n\n    return murs;\n  };\n\n  const [btnClickedBottom, setBtnClickedBottom] = useState(null);\n  const [propositionsCase, setPropositionsCase] = useState([]); // Extincteurs\n\n  const [propositionMursDetruire, setPropositionMursDetruire] = useState([[], []]); // Horizontaux  , Verticaux\n\n  useEffect(() => {\n    if (btnClickedBottom != 3 || btnClickedBottom == null) {\n      setPropositionMursDetruire([[], []]);\n    }\n\n    if (btnClickedBottom > 2 && btnClickedBottom < 6 || btnClickedBottom == null) {\n      setPropositionsCase([]);\n    }\n  }, [btnClickedBottom]); // HANDLERS CLIC GRILLE\n\n  const handleClicCase = (valeurAvant, valeurApres, coordX, coordY) => {\n    console.log(valeurAvant, valeurApres, coordX, coordY);\n\n    try {\n      updateCarte([coordY, coordX], valeurApres);\n      setPropositionsCase([]);\n      setBtnClickedBottom(null);\n\n      if (valeurAvant == 4 && valeurApres == 0) {\n        // Extincteur flamme\n        doAction(\"Feu\");\n      }\n\n      if (valeurAvant == 4 && valeurApres == 3) {\n        // Feu Fumée\n        doAction(\"FeuFum\");\n      }\n\n      if (valeurAvant == 3 && valeurApres == 0) {\n        // Fumée\n        doAction(\"Fum\");\n      }\n\n      if (Math.floor(valeurAvant / 10) == 2 && valeurApres == 0) {\n        // Habitant\n        doAction(\"Habitant\");\n        updateCarte(position, 100 + numPompier * 10 + valeurAvant % 10);\n      }\n    } catch (error) {}\n  };\n\n  const handleClicMur = (num, valeurAvant, coordX, coordY) => {\n    // marqueur dégat\n    if (propositionMursDetruire[0].length > 0 || propositionMursDetruire[1].length > 0) {\n      const checkInCoords = index => {\n        // console.log(\"coordx\",coordX,\"coordy\",coordY,\"position\",position)\n        let numClic = null;\n\n        if (coordX == position[1] && (coordY < position[0] || coordY == position[0] && num == 0)) {\n          // top\n          numClic = 0; // case en question\n          // console.log(\"top\",numClic)\n        }\n\n        if (coordX == position[1] && (coordY > position[0] || coordY == position[0] && num == 2)) {\n          // bottom\n          numClic = 2; // case en question\n          // console.log(\"bottom\",numClic)\n        }\n\n        if (coordY == position[0] && (coordX < position[1] || coordX == position[1] && num == 3)) {\n          // left\n          numClic = 3; // case en question\n          // console.log(\"left\",numClic)\n        }\n\n        if (coordY == position[0] && (coordX > position[1] || coordX == position[1] && num == 1)) {\n          // right\n          numClic = 1; // case en question\n          // console.log(\"right\",numClic)\n        }\n\n        return numClic;\n      };\n\n      var cote = checkInCoords(num % 2);\n      let valeurApres = 4;\n      if (valeurAvant == 1) valeurApres = 3;\n\n      if (cote != null) {\n        try {\n          switch (cote) {\n            case 0:\n              updateMurH([position[0], position[1]], valeurApres); // if(valeurAvant==5 ||)\n\n              break;\n\n            case 1:\n              updateMurV([position[0], position[1] + 1], valeurApres);\n              break;\n\n            case 2:\n              updateMurH([position[0] + 1, position[1]], valeurApres);\n              break;\n\n            case 3:\n              updateMurV([position[0], position[1]], valeurApres);\n              break;\n          }\n\n          doAction(\"Marqueur\");\n        } catch (error) {}\n\n        setPropositionMursDetruire([[], []]);\n        setBtnClickedBottom(null);\n      }\n    }\n  }; // HANDLER CLICS BOUTONS\n\n\n  const handleClicFleche = num => {\n    // Position y x\n    let deplacement;\n\n    switch (num) {\n      case 0:\n        // haut\n        // console.log(\"haut\")\n        deplacement = [-1, 0];\n        break;\n\n      case 1:\n        // droite\n        // console.log(\"droite\")\n        deplacement = [0, 1];\n        break;\n\n      case 2:\n        // bas\n        // console.log(\"bas\")\n        deplacement = [1, 0];\n        break;\n\n      case 3:\n        // gauche\n        // console.log(\"gauche\")\n        deplacement = [0, -1];\n        break;\n    }\n\n    if (deplacementAutorise(deplacement)) {\n      updateCarte([position[0] + deplacement[0], position[1] + deplacement[1]], carte[position[0]][position[1]]); // setPosition(position => [position[0] + deplacement[0], position[1] + deplacement[1]])\n\n      doAction(\"Deplacement\");\n      updateCarte(position, 0);\n    }\n  };\n\n  const handleChangePiece = () => {\n    setTimeout(() => {\n      setHistActions([{\n        carte: JSON.stringify(carte),\n        budget: JSON.stringify(budget),\n        mursH: JSON.stringify(mursH),\n        mursV: JSON.stringify(mursV),\n        stocks: JSON.stringify(stocks),\n        resultats: JSON.stringify(resultats),\n        interventions: JSON.stringify(interventions)\n      }]);\n    }, 300);\n  };\n\n  const handleClicDoor = ouvrir => {\n    // position, ouvert/fermé\n    setBtnClickedBottom(ouvrir ? 4 : 5);\n    let valueAvant;\n    let valueApres;\n\n    if (ouvrir) {\n      valueAvant = 5;\n      valueApres = 6;\n    } else {\n      valueAvant = 6;\n      valueApres = 5;\n    }\n\n    doAction(\"Porte\");\n\n    try {\n      if (mursH[position[0]][position[1]] == valueAvant) updateMurH([position[0], position[1]], valueApres);\n      if (mursH[position[0] + 1][position[1]] == valueAvant) updateMurH([position[0] + 1, position[1]], valueApres);\n      if (mursV[position[0]][position[1]] == valueAvant) updateMurV([position[0], position[1]], valueApres);\n      if (mursV[position[0]][position[1] + 1] == valueAvant) updateMurV([position[0], position[1] + 1], valueApres);\n    } catch (error) {}\n  };\n\n  const handleClicExtincteur = num => {\n    // 0 FEU, 1 FEUFUM, 2 FUM\n    if (btnClickedBottom != num) {\n      var listeCasesAction = [];\n      let valeurAvant = 4;\n      let valeurApres = 0;\n      setBtnClickedBottom(num);\n\n      switch (num) {\n        case 0:\n          // ETEINDRE FEU\n          break;\n\n        case 1:\n          // FEU FUM\n          valeurApres = 3;\n          break;\n\n        case 2:\n          // ETEINDRE FUMEE\n          valeurAvant = 3;\n          break;\n      }\n\n      try {\n        if (carte[position[0] - 1][position[1]] == valeurAvant) listeCasesAction.push([position[0] - 1, position[1], valeurAvant, valeurApres]); // TOP\n      } catch (error) {}\n\n      try {\n        if (carte[position[0]][position[1] + 1] == valeurAvant) listeCasesAction.push([position[0], position[1] + 1, valeurAvant, valeurApres]); // RIGHT\n      } catch (error) {}\n\n      try {\n        if (carte[position[0] + 1][position[1]] == valeurAvant) listeCasesAction.push([position[0] + 1, position[1], valeurAvant, valeurApres]); // BOTTOM\n      } catch (error) {}\n\n      try {\n        if (carte[position[0]][position[1] - 1] == valeurAvant) listeCasesAction.push([position[0], position[1] - 1, valeurAvant, valeurApres]); // LEFT\n      } catch (error) {}\n\n      setPropositionsCase(listeCasesAction);\n    } else {\n      setBtnClickedBottom(null);\n    }\n  };\n\n  const handleClicMarqueur = () => {\n    if (btnClickedBottom != 3) {\n      setBtnClickedBottom(3);\n\n      if (propositionMursDetruire[0].length > 0 || propositionMursDetruire[1].length > 0) {\n        setPropositionMursDetruire([[], []]);\n      } else {\n        const mursADetruire = [1, 3, 5, 6];\n        var propositions = [[], []];\n        const mursAutour = getMursAutour();\n\n        try {\n          if (mursADetruire.includes(mursAutour[0])) propositions[0].push([position[1], position[0]]); // top\n\n          if (mursADetruire.includes(mursAutour[1])) propositions[1].push([position[1] + 1, position[0]]); // right\n\n          if (mursADetruire.includes(mursAutour[2])) propositions[0].push([position[1], position[0] + 1]); // bottom\n\n          if (mursADetruire.includes(mursAutour[3])) propositions[1].push([position[1], position[0]]); // left\n        } catch (error) {}\n\n        setPropositionMursDetruire(propositions);\n      }\n    } else {\n      setBtnClickedBottom(null);\n    }\n  };\n\n  const handleClicValidated = async bool => {\n    if (bool) {\n      const response = await PlayAPI.nouveauTour(numPompier, carte, mursH, mursV, currentCycle, currentTour + 1, resultats.Decedes, resultats.Sauves, session, equipe);\n    } else {\n      retourAction();\n    }\n  };\n\n  const handleNoClicked = () => {\n    setPropositionMursDetruire([[], []]);\n    setPropositionsCase([]);\n  };\n\n  const handleClicHabitant = () => {\n    if (btnClickedBottom != 6) {\n      setBtnClickedBottom(6);\n      const valeurApres = 0;\n      var listeCasesAction = [];\n\n      try {\n        const valeurDessus = carte[position[0] - 1][position[1]];\n        if (Math.floor(valeurDessus / 10) == 2) listeCasesAction.push([position[0] - 1, position[1], valeurDessus, valeurApres]); // TOP\n      } catch (error) {}\n\n      try {\n        const valeurDroite = carte[position[0]][position[1] + 1];\n        if (Math.floor(valeurDroite / 10) == 2) listeCasesAction.push([position[0], position[1] + 1, valeurDroite, valeurApres]); // RIGHT\n      } catch (error) {}\n\n      try {\n        const valeurDessous = carte[position[0] + 1][position[1]];\n        if (Math.floor(valeurDessous / 10) == 2) listeCasesAction.push([position[0] + 1, position[1], valeurDessous, valeurApres]); // BOTTOM\n      } catch (error) {}\n\n      try {\n        const valeurGauche = carte[position[0]][position[1] - 1];\n        if (Math.floor(valeurGauche / 10) == 2) listeCasesAction.push([position[0], position[1] - 1, valeurGauche, valeurApres]); // LEFT\n      } catch (error) {}\n\n      setPropositionsCase(listeCasesAction);\n      console.log(\"handle clic habitant\");\n    } else {\n      setBtnClickedBottom(null);\n    }\n  };\n\n  return carte.length > 0 && position != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grille, {\n      nbColonnesGrille: nbColonnesGrille,\n      nbLignesGrille: nbLignesGrille,\n      carte: carte,\n      position: position,\n      mursH: mursH,\n      mursV: mursV,\n      propositionMursDetruire: propositionMursDetruire,\n      propositionsCase: propositionsCase,\n      handleClicMur: handleClicMur,\n      handleClicCase: handleClicCase,\n      handleChangePiece: handleChangePiece\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TactBandeauTop, {\n      stocks: stocks,\n      resultats: resultats,\n      numeroPompier: numPompier,\n      sequence: currentSequence,\n      cycle: currentCycle,\n      tour: currentTour,\n      configuration: configuration,\n      budget: budget\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 927,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TactBandeauBottom, {\n      interventions: interventions,\n      stocks: stocks,\n      numeroPompier: numPompier,\n      tour: currentTour,\n      handleClicFleche: handleClicFleche,\n      handleClicValidated: handleClicValidated,\n      handleClicDoor: handleClicDoor,\n      handleClicMarqueur: handleClicMarqueur,\n      handleClicExt: handleClicExtincteur,\n      handleNoClicked: handleNoClicked,\n      handleClicHabitant: handleClicHabitant,\n      btnClickedBottom: btnClickedBottom,\n      mursAutour: getMursAutour(),\n      casesAutour: getCasesAutour(),\n      currentCase: carte[position[0]][position[1]],\n      histActions: histActions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 911,\n    columnNumber: 9\n  }, this) : null;\n}; // export default TactInterface;\n\n\n_s(TactInterface, \"3CbLRjOECctY5EXeYpTlP8f1kz4=\", false, function () {\n  return [useHistory];\n});\n\n_c = TactInterface;\nexport default _c2 = /*#__PURE__*/React.memo(TactInterface);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TactInterface\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/hugod/décitude/client/src/routes/TactInterface.js"],"names":["React","useState","useEffect","useRef","PlayAPI","TactBandeauTop","TactBandeauBottom","Grille","useHistory","cookie","TactInterface","history","user","load","undefined","push","numPompier","setNumPompier","role","replace","currentTour","setCurrentTour","currentCycle","setCurrentCycle","currentSequence","setCurrentSequence","session","setSession","equipe","setEquipe","position","setPosition","histActions","setHistActions","stocks","setStocks","Interventions","Feu","FeuFum","Fum","Marqueur","resultats","setResultats","Decedes","Sauves","interventions","setInterventions","Deplacement","Porte","Habitant","budget","setBudget","isLoading","carte","setCarte","nbLignesGrille","setNbLignesGrille","nbColonnesGrille","setNbColonnesGrille","mursH","setMursH","mursV","setMursV","getPlayState","current","currentPlayState","Object","keys","length","parseInt","JSON","parse","valeur","resultatsDecedes","resultatsSauves","getPositionFromCarte","getPlayParameters","param","getConfiguration","setConfiguration","forEach","ligne","indexI","indexJ","Math","floor","updateCarte","coords","value","c","error","console","log","updateMurH","m","updateMurV","updateBudget","action","depenses","configuration","addHistAction","h","stringify","retourAction","pop","state","doAction","includes","s","i","updateResultats","sauve","res","nbSauves","nbDecedes","setBtnClickedBottom","revealHabitant","relacherHabitant","inter","interKeys","min","socket","getSocket","onTourChange","e","preventDefault","on","data","test","deplacementAutorise","deplacement","dpl","dplInterditsCases","valeurCaseDeplacement","dplInterditsMurs","testRelacherHabitant","mursBloquants","setTimeout","casesAutour","getCasesAutour","nouvelHabitant","random","txApparitionHab","dessus","nbHabDifferents","droite","dessous","gauche","cases","getMursAutour","murs","btnClickedBottom","propositionsCase","setPropositionsCase","propositionMursDetruire","setPropositionMursDetruire","handleClicCase","valeurAvant","valeurApres","coordX","coordY","handleClicMur","num","checkInCoords","index","numClic","cote","handleClicFleche","handleChangePiece","handleClicDoor","ouvrir","valueAvant","valueApres","handleClicExtincteur","listeCasesAction","handleClicMarqueur","mursADetruire","propositions","mursAutour","handleClicValidated","bool","response","nouveauTour","handleNoClicked","handleClicHabitant","valeurDessus","valeurDroite","valeurDessous","valeurGauche","memo"],"mappings":"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","sourcesContent":["import \"../styles/App.css\"\r\nimport React, { useState, useEffect,useRef } from 'react'\r\nimport PlayAPI from \"../API/PlayAPI\"\r\nimport TactBandeauTop from \"../components/interfaceJoueur/TactBandeauTop\"\r\nimport TactBandeauBottom from \"../components/interfaceJoueur/TactBandeauBottom\"\r\nimport Grille from \"../components/interfaceJoueur/Grille\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nimport cookie from 'react-cookies'\r\n\r\n\r\nconst TactInterface = () => {\r\n\r\n  const history = useHistory()\r\n\r\n  const user = cookie.load(\"user\")\r\n  // console.log(user)\r\n  if(user==null || user==undefined) history.push(\"/login\");\r\n\r\n\r\n\r\n  const [numPompier, setNumPompier] = useState(user.role.replace(\"TACT\", \"\"))\r\n  const [currentTour, setCurrentTour] = useState(null)\r\n  const [currentCycle, setCurrentCycle] = useState(null)\r\n  const [currentSequence, setCurrentSequence] = useState(null)\r\n  const [session,setSession]=useState(user.session)\r\n  const [equipe,setEquipe]=useState(user.equipe)\r\n  const [position, setPosition] = useState(null)\r\n  const [histActions,setHistActions]=useState([])\r\n\r\n\r\n  const [stocks, setStocks] = useState({\r\n    Interventions: 10,\r\n    Feu: 1,\r\n    FeuFum: 10,\r\n    Fum: 10,\r\n    Marqueur: 10,\r\n  })\r\n  const [resultats, setResultats] = useState({\r\n    Decedes: 0,\r\n    Sauves: 0\r\n  })\r\n\r\n  const [interventions, setInterventions] = useState({\r\n    Deplacement: 0,\r\n    Feu: 0,\r\n    FeuFum: 0,\r\n    Fum: 0,\r\n    Marqueur: 0,\r\n    Porte: 0,\r\n    Habitant: 0\r\n  })\r\n\r\n  const [budget, setBudget] = useState(800)\r\n\r\n\r\n  const isLoading=useRef(false)\r\n\r\n  // INITIALISATION DE LA CARTE\r\n\r\n  // const [carte, setCarte] = useState([\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  // ])\r\n  \r\n  const [carte, setCarte] = useState([])\r\n\r\n  const [nbLignesGrille,setNbLignesGrille] = useState(0)\r\n  const [nbColonnesGrille,setNbColonnesGrille ]= useState(0)\r\n\r\n  const [mursH, setMursH] = useState([\r\n    [1, 1, 1, 1, 1, 1, 2, 6, 1, 1, 1, 1, 2, 5, 1, 1],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 1, 1, 2, 6, 1, 6, 2, 1, 1, 1, 5, 2, 1, 1],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 6, 2, 1, 1, 1, 1, 1, 1, 1, 1]\r\n  ])\r\n\r\n  const [mursV, setMursV] = useState([\r\n    [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\r\n    [2, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\r\n    [5, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\r\n    [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n    [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1],\r\n    [1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 0, 0, 1],\r\n    [1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 0, 0, 2],\r\n    [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 5]\r\n  ])\r\n\r\n\r\n\r\n  // GET PLAY PARAMETERS \r\n  const getPlayState=async(session,equipe)=>{\r\n    if(!isLoading.current){\r\n      isLoading.current=true\r\n      const currentPlayState = await PlayAPI.getPlayState(session,equipe)\r\n    \r\n      if(Object.keys(currentPlayState).length>0 ){\r\n        // console.log(\"Get play state 2\")\r\n        // console.log(parseInt(JSON.parse(currentPlayState.currentTour.valeur)))\r\n\r\n        setCurrentTour(parseInt(JSON.parse(currentPlayState.currentTour.valeur)))\r\n        setCurrentCycle(parseInt(JSON.parse(currentPlayState.currentCycle.valeur)))\r\n        setCurrentSequence(parseInt(JSON.parse(currentPlayState.currentSequence.valeur)))\r\n\r\n        setMursH(JSON.parse(currentPlayState.mursH.valeur))\r\n        setMursV(JSON.parse(currentPlayState.mursV.valeur))\r\n        setCarte(JSON.parse(currentPlayState.carte.valeur))\r\n        setResultats({\r\n          Decedes:parseInt(JSON.parse(currentPlayState.resultatsDecedes.valeur)),\r\n          Sauves:parseInt(JSON.parse(currentPlayState.resultatsSauves.valeur)),\r\n        })\r\n      }\r\n      getPositionFromCarte(JSON.parse(currentPlayState.carte.valeur))\r\n      isLoading.current=false\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n    // console.log(carte)\r\n    if(carte.length>0){\r\n      setNbLignesGrille(carte.length)\r\n      setNbColonnesGrille(carte[0].length)\r\n      getPositionFromCarte(carte)\r\n    }\r\n\r\n  },[carte])\r\n\r\n  // useEffect(()=>{\r\n  //   console.log(currentTour)\r\n  // },[currentTour])\r\n\r\n\r\n  useEffect(()=>{\r\n    if(session!=null && equipe!=null && currentTour==null){\r\n      if(!isLoading.current) getPlayState(session,equipe)\r\n      getPlayParameters()\r\n      getPositionFromCarte()\r\n    }\r\n  },[session,equipe,numPompier])\r\n\r\n  const getPlayParameters = async () => {\r\n    const param = await PlayAPI.getConfiguration(session)\r\n    setConfiguration(param)\r\n  }\r\n\r\n  const getPositionFromCarte=(carte)=>{\r\n    // console.log(carte)\r\n    if(carte!=null && carte.length>0){\r\n      carte.forEach((ligne,indexI) => {\r\n        ligne.forEach((valeur,indexJ) => {\r\n  \r\n          if( Math.floor(valeur / 100) == 1 && Math.floor(valeur%100/10)==numPompier) setPosition([indexI,indexJ])\r\n          // console.log(valeur%100/10)\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  // const onTextChange = (e) => {\r\n  //   setNumPompier(e.target.value)\r\n  //   console.log(typeof (e.target.value))\r\n  // }\r\n\r\n  // const onXChange = (e) => {\r\n  //   e.preventDefault()\r\n  //   if (e.target.value.length > 0) {\r\n  //     updateCarte(position, 0)\r\n  //     setPosition(position => [position[0], parseInt(e.target.value)])\r\n  //   } else {\r\n  //     updateCarte(position, 0)\r\n  //     setPosition(position => [position[0], 0])\r\n  //   }\r\n\r\n  // }\r\n  // const onYChange = (e) => {\r\n  //   e.preventDefault()\r\n  //   if (e.target.value.length > 0) {\r\n  //     updateCarte(position, 0)\r\n  //     setPosition(position => [parseInt(e.target.value), position[1]])\r\n  //   } else {\r\n  //     updateCarte(position, 0)\r\n  //     setPosition(position => [0, position[1]])\r\n  //   }\r\n  // }\r\n\r\n\r\n  // UPDATES\r\n  const updateCarte = (coords, value) => {\r\n    if (coords[0] < nbLignesGrille && coords[1] < nbColonnesGrille) {\r\n      try {\r\n        var c = [...carte]\r\n        c[coords[0]][coords[1]] = value\r\n        setCarte(c)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  const updateMurH = (coords, value) => {\r\n    if (coords[0] < mursH.length && coords[1] < mursH[0].length) {\r\n      try {\r\n        var m = [...mursH]\r\n        m[coords[0]][coords[1]] = value\r\n        setMursH(m)\r\n\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n  }\r\n  const updateMurV = (coords, value) => {\r\n    if (coords[0] < mursV.length && coords[1] < mursV[0].length) {\r\n      try {\r\n        var m = [...mursV]\r\n        m[coords[0]][coords[1]] = value\r\n        setMursV(m)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // ACTIONS\r\n\r\n  const updateBudget = (action) => {\r\n    var depenses = 0\r\n    if (configuration[\"coutEq\" + action] != null) depenses += configuration[\"coutEq\" + action].valeur\r\n    if (configuration[\"coutInter\" + action] != null) depenses += configuration[\"coutInter\" + action].valeur\r\n    setBudget(budget => budget - depenses)\r\n  }\r\n\r\n\r\n  \r\n  \r\n  const addHistAction=()=>{\r\n    const h = [...histActions,{\r\n      carte:JSON.stringify(carte),\r\n      budget:JSON.stringify(budget),\r\n      mursH:JSON.stringify(mursH),\r\n      mursV:JSON.stringify(mursV),\r\n      stocks:JSON.stringify(stocks),\r\n      resultats:JSON.stringify(resultats),\r\n      interventions:JSON.stringify(interventions)\r\n    }]\r\n    setHistActions(h)\r\n  }\r\n\r\n  const retourAction=()=>{\r\n    var h = [...histActions]\r\n    h.pop()\r\n    const state = h[h.length-1]\r\n    // console.log(state)\r\n    \r\n    setCarte(JSON.parse(state.carte))\r\n    setMursH(JSON.parse(state.mursH))\r\n    setMursV(JSON.parse(state.mursV))\r\n    setStocks(JSON.parse(state.stocks))\r\n    setInterventions(JSON.parse(state.interventions))\r\n    setResultats(JSON.parse(state.resultats))\r\n    setBudget(JSON.parse(state.budget))\r\n\r\n    setHistActions(h)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(position!==null && histActions.length==0) addHistAction()\r\n  },[position])\r\n\r\n  useEffect(()=>{\r\n    console.log(\"hist Actions\")\r\n    console.log(histActions )\r\n  },[histActions])\r\n\r\n  useEffect(()=>{\r\n    if( position!==null){\r\n      if(budget<histActions[histActions.length-1].budget){\r\n        addHistAction()\r\n      }\r\n    }\r\n  },[budget])\r\n\r\n  const doAction = (action) => {\r\n    try {\r\n      if(Object.keys(stocks).includes(action)){\r\n        var s = stocks\r\n        s[action] = s[action] - 1\r\n        setStocks(s)\r\n      }\r\n      \r\n    } catch (error) { }\r\n\r\n    try {\r\n      if(Object.keys(interventions).includes(action)){\r\n        var i = interventions\r\n      i[action] = i[action] - 1\r\n      setInterventions(i)\r\n      }      \r\n    } catch (error) { }\r\n\r\n    // setTimeout(() => {\r\n      updateBudget(action)\r\n    // }, 1000);\r\n    \r\n  }\r\n\r\n  const updateResultats = (sauve) => {\r\n    var res = resultats\r\n    if (sauve) {\r\n      res.nbSauves += 1\r\n    } else {\r\n      res.nbDecedes += 1\r\n    }\r\n    setResultats(res)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setBtnClickedBottom(null)\r\n    revealHabitant()\r\n  }, [position])\r\n\r\n\r\n  useEffect(() => {\r\n    if(carte.length>0) relacherHabitant()\r\n\r\n  }, [position, mursH, mursV])\r\n\r\n  \r\n\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"Stocks\")\r\n  //   console.log(stocks)\r\n  // }, [stocks])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (configuration != null) {\r\n      var inter = interventions\r\n      const interKeys = Object.keys(inter)\r\n      interKeys.forEach(action => {\r\n        try {\r\n          if (configuration[\"coutInter\" + action].valeur > 0) {\r\n            inter[action] = Math.min(\r\n              configuration[\"coutEq\" + action] != null && configuration[\"coutEq\" + action] != undefined ? Math.floor(budget / (configuration[\"coutInter\" + action].valeur + configuration[\"coutEq\" + action].valeur)) : Math.floor(budget / configuration[\"coutInter\" + action].valeur),\r\n              stocks[action] != null && stocks[action] != undefined && stocks[action] !=\"NaN\" ? stocks[action] : 1000\r\n            )\r\n          }\r\n        } catch (error) {\r\n          console.log(error,action)\r\n        }\r\n\r\n      })\r\n      setInterventions(inter)\r\n      \r\n    } else {\r\n      // getPlayParameters()\r\n    }\r\n  }, [budget, configuration, numPompier])\r\n\r\n  // SOCKETS\r\n  const socket = PlayAPI.getSocket()\r\n\r\n  // SOCKETS \r\n  const onTourChange = async (e) => {\r\n    e.preventDefault()\r\n    console.log(\"nouveau tour todo\")\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    socket.on('changementTour', (data) => {\r\n      console.log(\"socket nouveau tour\")\r\n      setCurrentTour(data.numPompier + 1)\r\n      getPlayState(session,equipe)\r\n    })\r\n  });\r\n\r\n\r\n\r\n  // TESTS\r\n\r\n  const test = async () => {\r\n\r\n    console.log(\"test function\")\r\n  }\r\n\r\n  // const renderTests = () => {\r\n  //   return (\r\n  //     <div style={{ position: \"absolute\", top: 200 }}>\r\n  //       <div className=\"card\" style={{ flex: 1, flexDirection: \"column\" }}>\r\n  //         <form onSubmit={e => onTourChange(e)}>\r\n  //           <h1>Manual settings</h1>\r\n  //           <div className=\"name-field\">\r\n  //             <label htmlFor=\"numPompier\">Numéro pompier</label>\r\n  //             <input\r\n  //               type=\"number\"\r\n  //               name=\"numPompier\"\r\n  //               onChange={e => onTextChange(e)}\r\n  //               value={numPompier}\r\n  //               label=\"Numéro pompier\"\r\n  //             />\r\n  //           </div>\r\n  //           {currentTour == numPompier ?\r\n  //             <button>Fin du tour</button>\r\n  //             :\r\n  //             <button disabled>Fin du tour</button>\r\n\r\n  //           }\r\n\r\n  //         </form>\r\n\r\n  //       </div>\r\n  //       <div style={{ flex: 1, flexDirection: \"column\" }}>\r\n  //         <label htmlFor=\"numPompier\">Position x</label>\r\n  //         <input\r\n  //           type=\"number\"\r\n  //           name=\"xPompier\"\r\n  //           onChange={e => onXChange(e)}\r\n  //           value={position[1]}\r\n  //         />\r\n  //         <label htmlFor=\"numPompier\">Position y</label>\r\n  //         <input\r\n  //           type=\"number\"\r\n  //           name=\"yPompier\"\r\n  //           onChange={e => onYChange(e)}\r\n  //           value={position[0]}\r\n  //         />\r\n  //       </div>\r\n  //       <button onClick={() => test()} >test function</button>\r\n  //     </div>\r\n  //   )\r\n  // }\r\n\r\n\r\n\r\n\r\n  // AUTORISATIONS \r\n  const deplacementAutorise = (deplacement) => {\r\n    // return true\r\n    var dpl = [...deplacement]\r\n    if (dpl[0] == 0 && dpl[1] == 0) return false\r\n    if (position[0] + dpl[0] > carte.length - 1 || position[1] + dpl[1] > carte[0].length - 1 || position[0] + dpl[0] < 0 || position[1] + dpl[1] < 0) return false\r\n\r\n\r\n    const dplInterditsCases = [100, 20, 3, 4]\r\n    \r\n    try {\r\n      const valeurCaseDeplacement = carte[position[0] + dpl[0]][position[1] + dpl[1]]\r\n      if (Math.floor(valeurCaseDeplacement/100)==1) return false\r\n      if (Math.floor(valeurCaseDeplacement/10)==2) return false\r\n      if (dplInterditsCases.includes(valeurCaseDeplacement)) return false\r\n    } catch (error) { }\r\n\r\n    const dplInterditsMurs = [1, 2, 3, 5]\r\n    try {\r\n      if (dpl[0] != 0) { // haut bas\r\n        if (dpl[0] < 0) {\r\n          dpl[0] = 0\r\n        }\r\n        if (typeof (mursH[position[0] + dpl[0]][position[1]]) === 'undefined') return false\r\n        if (dplInterditsMurs.includes(mursH[position[0] + dpl[0]][position[1]])) return false\r\n      } else { // gauche droite\r\n        if (dpl[1] < 0) {\r\n          dpl[1] = 0\r\n        }\r\n        if (typeof (mursV[position[0]][position[1] + dpl[1]]) === 'undefined') return false\r\n        if (dplInterditsMurs.includes(mursV[position[0]][position[1] + dpl[1]])) return false\r\n      }\r\n    } catch (error) { }\r\n\r\n\r\n\r\n\r\n    return true\r\n  }\r\n  const testRelacherHabitant = () => {\r\n    if (carte[position[0]][position[1]]%10==0) return false // pas de transport d'habitant\r\n\r\n    const mursBloquants = [1, 2, 3, 5]\r\n\r\n    if (position[0] == 0 && !mursBloquants.includes(mursH[position[0]][position[1]])) return true // haut\r\n    if (position[0] == nbLignesGrille - 1 && !mursBloquants.includes(mursH[position[0] + 1][position[1]])) return true // bas\r\n\r\n    if (position[1] == 0 && !mursBloquants.includes(mursV[position[0]][position[1]])) return true // gauche\r\n    if (position[1] == nbColonnesGrille - 1 && !mursBloquants.includes(mursV[position[0]][position[1] + 1])) return true // droite\r\n\r\n    return false\r\n  }\r\n  const relacherHabitant = () => {\r\n    if (testRelacherHabitant()) {\r\n      setTimeout(() => {\r\n        updateResultats(true)\r\n        updateCarte(position, 100+numPompier*10)\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  const revealHabitant=()=>{\r\n    if(configuration!=null){\r\n      const casesAutour = getCasesAutour()\r\n      // console.log(configuration)\r\n      const nouvelHabitant = Math.random() <= configuration.txApparitionHab.valeur\r\n  \r\n      try {\r\n        if(casesAutour.dessus==20) updateCarte([position[0]-1,position[1]], nouvelHabitant ? 20+Math.floor(configuration.nbHabDifferents.valeur*Math.random())+1 : 0)\r\n      } catch (error) {}\r\n      try {\r\n        if(casesAutour.droite==20) updateCarte([position[0],position[1]+1], nouvelHabitant ? 20+Math.floor(configuration.nbHabDifferents.valeur*Math.random())+1 : 0)\r\n      } catch (error) {}\r\n      try {\r\n        if(casesAutour.dessous==20) updateCarte([position[0]+1,position[1]], nouvelHabitant ? 20+Math.floor(configuration.nbHabDifferents.valeur*Math.random())+1 : 0)\r\n      } catch (error) {}\r\n      try {\r\n        if(casesAutour.gauche==20) updateCarte([position[0],position[1]-1], nouvelHabitant ? 20+Math.floor(configuration.nbHabDifferents.valeur*Math.random())+1 : 0)\r\n      } catch (error) {}\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  const getCasesAutour = () => {\r\n    var cases = {}\r\n\r\n    try {\r\n      cases[\"dessus\"]=(carte[position[0] - 1][position[1]]) // dessus\r\n    } catch (error) { }\r\n    try {\r\n      cases[\"droite\"]=(carte[position[0]][position[1] + 1]) // droite\r\n    } catch (error) { }\r\n    try {\r\n      cases[\"dessous\"]=(carte[position[0] + 1][position[1]]) // dessous\r\n    } catch (error) { }\r\n    try {\r\n      cases[\"gauche\"]=(carte[position[0]][position[1] - 1]) // gauche\r\n    } catch (error) { }\r\n    return cases\r\n  }\r\n  const getMursAutour = () => {\r\n    var murs = []\r\n\r\n    try {\r\n      if (mursH[position[0]][position[1]] != 4 || (mursH[position[0]][position[1] - 1] < 6 && mursH[position[0]][position[1] + 1] < 6)) {\r\n        murs.push(mursH[position[0]][position[1]]) // dessus\r\n      } else {\r\n        murs.push(0)\r\n      }\r\n    } catch (error) { }\r\n\r\n    try {\r\n      if (mursV[position[0]][position[1] + 1] != 4 || (mursV[position[0] - 1][position[1] + 1] < 6 && mursV[position[0] + 1][position[1] + 1] < 6)) {\r\n        murs.push(mursV[position[0]][position[1] + 1])  // droite\r\n      } else {\r\n        murs.push(0)\r\n      }\r\n    } catch (error) { }\r\n\r\n    try {\r\n      if (mursH[position[0] + 1][position[1]] != 4 || (mursH[position[0] + 1][position[1] - 1] < 6 && mursH[position[0] + 1][position[1] + 1] < 6)) {\r\n        murs.push(mursH[position[0] + 1][position[1]]) // dessous\r\n      } else {\r\n        murs.push(0)\r\n      }\r\n\r\n    } catch (error) { }\r\n    try {\r\n      if (mursV[position[0]][position[1]] != 4 || (mursV[position[0] - 1][position[1]] < 6 && mursV[position[0] + 1][position[1]] < 6)) {\r\n        murs.push(mursV[position[0]][position[1]])  // gauche\r\n      } else {\r\n        murs.push(0)\r\n      }\r\n    } catch (error) { }\r\n    // console.log(murs)\r\n    return murs\r\n  }\r\n\r\n\r\n\r\n\r\n  const [btnClickedBottom, setBtnClickedBottom] = useState(null)\r\n  const [propositionsCase, setPropositionsCase] = useState([]) // Extincteurs\r\n  const [propositionMursDetruire, setPropositionMursDetruire] = useState([[], []]) // Horizontaux  , Verticaux\r\n  useEffect(() => {\r\n    if (btnClickedBottom != 3 || btnClickedBottom == null) {\r\n      setPropositionMursDetruire([[], []])\r\n    }\r\n    if ((btnClickedBottom > 2 && btnClickedBottom < 6) || btnClickedBottom == null) {\r\n      setPropositionsCase([])\r\n    }\r\n  }, [btnClickedBottom])\r\n\r\n\r\n\r\n\r\n  // HANDLERS CLIC GRILLE\r\n\r\n  const handleClicCase = (valeurAvant, valeurApres, coordX, coordY) => {\r\n\r\n    console.log(valeurAvant, valeurApres, coordX, coordY)\r\n    try {\r\n      updateCarte([coordY, coordX], valeurApres)\r\n      setPropositionsCase([])\r\n      setBtnClickedBottom(null)\r\n\r\n      if (valeurAvant == 4 && valeurApres == 0) { // Extincteur flamme\r\n        doAction(\"Feu\")\r\n      }\r\n      if (valeurAvant == 4 && valeurApres == 3) { // Feu Fumée\r\n        doAction(\"FeuFum\")\r\n      }\r\n      if (valeurAvant == 3 && valeurApres == 0) { // Fumée\r\n        doAction(\"Fum\")\r\n      }\r\n      if (Math.floor(valeurAvant/10)==2 && valeurApres == 0) { // Habitant\r\n        doAction(\"Habitant\")\r\n        updateCarte(position, 100+numPompier*10+valeurAvant%10)\r\n      }\r\n    } catch (error) { }\r\n  }\r\n\r\n  const handleClicMur = (num, valeurAvant, coordX, coordY) => { // marqueur dégat\r\n    if (propositionMursDetruire[0].length > 0 || propositionMursDetruire[1].length > 0) {\r\n\r\n      const checkInCoords = (index) => {\r\n        // console.log(\"coordx\",coordX,\"coordy\",coordY,\"position\",position)\r\n\r\n        let numClic = null\r\n\r\n        if (coordX == position[1] && (coordY < position[0] || (coordY == position[0] && num == 0))) { // top\r\n          numClic = 0  // case en question\r\n          // console.log(\"top\",numClic)\r\n        }\r\n        if (coordX == position[1] && (coordY > position[0] || (coordY == position[0] && num == 2))) { // bottom\r\n          numClic = 2  // case en question\r\n          // console.log(\"bottom\",numClic)\r\n        }\r\n        if (coordY == position[0] && (coordX < position[1] || (coordX == position[1] && num == 3))) { // left\r\n          numClic = 3  // case en question\r\n          // console.log(\"left\",numClic)\r\n        }\r\n        if (coordY == position[0] && (coordX > position[1] || (coordX == position[1] && num == 1))) { // right\r\n          numClic = 1  // case en question\r\n          // console.log(\"right\",numClic)\r\n        }\r\n\r\n        return numClic\r\n      }\r\n\r\n      var cote = checkInCoords(num % 2)\r\n      let valeurApres = 4\r\n      if (valeurAvant == 1) valeurApres = 3\r\n\r\n      if (cote != null) {\r\n        try {\r\n          switch (cote) {\r\n            case 0:\r\n              updateMurH([position[0], position[1]], valeurApres)\r\n              // if(valeurAvant==5 ||)\r\n              break;\r\n            case 1:\r\n              updateMurV([position[0], position[1] + 1], valeurApres)\r\n              break;\r\n            case 2:\r\n              updateMurH([position[0] + 1, position[1]], valeurApres)\r\n              break;\r\n            case 3:\r\n              updateMurV([position[0], position[1]], valeurApres)\r\n              break;\r\n          }\r\n\r\n          doAction(\"Marqueur\")\r\n\r\n\r\n        } catch (error) {\r\n        }\r\n\r\n\r\n\r\n        setPropositionMursDetruire([[], []])\r\n        setBtnClickedBottom(null)\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  // HANDLER CLICS BOUTONS\r\n\r\n\r\n  const handleClicFleche = (num) => {\r\n    // Position y x\r\n    let deplacement\r\n    switch (num) {\r\n      case 0: // haut\r\n        // console.log(\"haut\")\r\n        deplacement = [-1, 0]\r\n        break;\r\n\r\n      case 1: // droite\r\n        // console.log(\"droite\")\r\n        deplacement = [0, 1]\r\n        break;\r\n\r\n      case 2: // bas\r\n        // console.log(\"bas\")\r\n        deplacement = [1, 0]\r\n        break;\r\n\r\n      case 3: // gauche\r\n        // console.log(\"gauche\")\r\n        deplacement = [0, -1]\r\n\r\n        break;\r\n    }\r\n    if (deplacementAutorise(deplacement)) {\r\n      updateCarte([position[0] + deplacement[0], position[1] + deplacement[1]], carte[position[0]][position[1]])\r\n      // setPosition(position => [position[0] + deplacement[0], position[1] + deplacement[1]])\r\n      doAction(\"Deplacement\")\r\n      updateCarte(position, 0)\r\n    }\r\n  }\r\n\r\n  const handleChangePiece=()=>{\r\n    setTimeout(() => {\r\n      setHistActions([{\r\n        carte:JSON.stringify(carte),\r\n        budget:JSON.stringify(budget),\r\n        mursH:JSON.stringify(mursH),\r\n        mursV:JSON.stringify(mursV),\r\n        stocks:JSON.stringify(stocks),\r\n        resultats:JSON.stringify(resultats),\r\n        interventions:JSON.stringify(interventions)\r\n      }])\r\n    }, 300);\r\n    \r\n  }\r\n\r\n  const handleClicDoor = (ouvrir) => { // position, ouvert/fermé\r\n    setBtnClickedBottom(ouvrir ? 4 : 5)\r\n    let valueAvant\r\n    let valueApres\r\n\r\n    if (ouvrir) {\r\n      valueAvant = 5\r\n      valueApres = 6\r\n\r\n    } else {\r\n      valueAvant = 6\r\n      valueApres = 5\r\n    }\r\n    doAction(\"Porte\")\r\n    try {\r\n      if (mursH[position[0]][position[1]] == valueAvant) updateMurH([position[0], position[1]], valueApres)\r\n      if (mursH[position[0] + 1][position[1]] == valueAvant) updateMurH([position[0] + 1, position[1]], valueApres)\r\n      if (mursV[position[0]][position[1]] == valueAvant) updateMurV([position[0], position[1]], valueApres)\r\n      if (mursV[position[0]][position[1] + 1] == valueAvant) updateMurV([position[0], position[1] + 1], valueApres)\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  const handleClicExtincteur = (num) => {\r\n    // 0 FEU, 1 FEUFUM, 2 FUM\r\n    if (btnClickedBottom != num) {\r\n      var listeCasesAction = []\r\n      let valeurAvant = 4\r\n      let valeurApres = 0\r\n      setBtnClickedBottom(num)\r\n      switch (num) {\r\n        case 0: // ETEINDRE FEU\r\n          break;\r\n\r\n        case 1: // FEU FUM\r\n          valeurApres = 3\r\n          break;\r\n        case 2: // ETEINDRE FUMEE\r\n          valeurAvant = 3\r\n          break;\r\n      }\r\n\r\n      try {\r\n        if (carte[position[0] - 1][position[1]] == valeurAvant) listeCasesAction.push([position[0] - 1, position[1], valeurAvant, valeurApres]) // TOP\r\n      } catch (error) { }\r\n      try {\r\n        if (carte[position[0]][position[1] + 1] == valeurAvant) listeCasesAction.push([position[0], position[1] + 1, valeurAvant, valeurApres]) // RIGHT\r\n      } catch (error) { }\r\n      try {\r\n        if (carte[position[0] + 1][position[1]] == valeurAvant) listeCasesAction.push([position[0] + 1, position[1], valeurAvant, valeurApres]) // BOTTOM\r\n      } catch (error) { }\r\n      try {\r\n        if (carte[position[0]][position[1] - 1] == valeurAvant) listeCasesAction.push([position[0], position[1] - 1, valeurAvant, valeurApres]) // LEFT\r\n      } catch (error) { }\r\n\r\n      setPropositionsCase(listeCasesAction)\r\n    } else {\r\n      setBtnClickedBottom(null)\r\n    }\r\n\r\n  }\r\n\r\n  const handleClicMarqueur = () => {\r\n    if (btnClickedBottom != 3) {\r\n      setBtnClickedBottom(3)\r\n      if (propositionMursDetruire[0].length > 0 || propositionMursDetruire[1].length > 0) {\r\n        setPropositionMursDetruire([[], []])\r\n      } else {\r\n        const mursADetruire = [1, 3, 5, 6]\r\n        var propositions = [\r\n          [],\r\n          []\r\n        ]\r\n        const mursAutour = getMursAutour()\r\n\r\n        try {\r\n          if (mursADetruire.includes(mursAutour[0])) propositions[0].push([position[1], position[0]]) // top\r\n          if (mursADetruire.includes(mursAutour[1])) propositions[1].push([position[1] + 1, position[0]]) // right\r\n          if (mursADetruire.includes(mursAutour[2])) propositions[0].push([position[1], position[0] + 1]) // bottom\r\n          if (mursADetruire.includes(mursAutour[3])) propositions[1].push([position[1], position[0]]) // left\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n        setPropositionMursDetruire(propositions)\r\n\r\n      }\r\n    } else {\r\n      setBtnClickedBottom(null)\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const handleClicValidated =async (bool) => {\r\n    if(bool){\r\n      const response =  await PlayAPI.nouveauTour(numPompier,carte,mursH,mursV,currentCycle,currentTour+1,resultats.Decedes,resultats.Sauves,session,equipe)      \r\n    }else{\r\n      retourAction()\r\n    }\r\n  }\r\n\r\n  const handleNoClicked = () => {\r\n    setPropositionMursDetruire([[], []])\r\n    setPropositionsCase([])\r\n  }\r\n\r\n  const handleClicHabitant = () => {\r\n    if (btnClickedBottom != 6) {\r\n      setBtnClickedBottom(6)\r\n      const valeurApres = 0\r\n      var listeCasesAction = []\r\n      try {\r\n        const valeurDessus =  carte[position[0] - 1][position[1]]\r\n        if (Math.floor(valeurDessus/10)==2) listeCasesAction.push([position[0] - 1, position[1], valeurDessus, valeurApres]) // TOP\r\n      } catch (error) { }\r\n      try {\r\n        const valeurDroite =  carte[position[0]][position[1] + 1]\r\n        if (Math.floor(valeurDroite/10)==2) listeCasesAction.push([position[0], position[1] + 1, valeurDroite, valeurApres]) // RIGHT\r\n      } catch (error) { }\r\n      try {\r\n        const valeurDessous =  carte[position[0] + 1][position[1]] \r\n        if (Math.floor(valeurDessous/10)==2)  listeCasesAction.push([position[0] + 1, position[1], valeurDessous, valeurApres]) // BOTTOM\r\n      } catch (error) { }\r\n      try {\r\n        const valeurGauche = carte[position[0]][position[1] - 1]\r\n        if (Math.floor(valeurGauche/10)==2) listeCasesAction.push([position[0], position[1] - 1, valeurGauche, valeurApres]) // LEFT\r\n      } catch (error) { }\r\n\r\n      setPropositionsCase(listeCasesAction)\r\n\r\n\r\n      console.log(\"handle clic habitant\")\r\n    } else {\r\n      setBtnClickedBottom(null)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    \r\n      carte.length>0 && position!=null ?\r\n      \r\n        <div>\r\n            <Grille\r\n            nbColonnesGrille={nbColonnesGrille}\r\n            nbLignesGrille={nbLignesGrille}\r\n            carte={carte}\r\n            position={position}\r\n            mursH={mursH}\r\n            mursV={mursV}\r\n            propositionMursDetruire={propositionMursDetruire}\r\n            propositionsCase={propositionsCase}\r\n            handleClicMur={handleClicMur}\r\n            handleClicCase={handleClicCase}\r\n            handleChangePiece={handleChangePiece}\r\n\r\n          />\r\n\r\n          <TactBandeauTop\r\n            stocks={stocks}\r\n            resultats={resultats}\r\n            numeroPompier={numPompier}\r\n            sequence={currentSequence}\r\n            cycle={currentCycle}\r\n            tour={currentTour}\r\n            configuration={configuration}\r\n            budget={budget}\r\n          />\r\n\r\n          <TactBandeauBottom\r\n            interventions={interventions}\r\n            stocks={stocks}\r\n            numeroPompier={numPompier}\r\n            tour={currentTour}\r\n            handleClicFleche={handleClicFleche}\r\n            handleClicValidated={handleClicValidated}\r\n            handleClicDoor={handleClicDoor}\r\n            handleClicMarqueur={handleClicMarqueur}\r\n            handleClicExt={handleClicExtincteur}\r\n            handleNoClicked={handleNoClicked}\r\n            handleClicHabitant={handleClicHabitant}\r\n            btnClickedBottom={btnClickedBottom}\r\n            mursAutour={getMursAutour()}\r\n            casesAutour={getCasesAutour()}\r\n            currentCase={carte[position[0]][position[1]]}\r\n            histActions={histActions}\r\n          />\r\n        </div>\r\n      : null\r\n      \r\n      \r\n     \r\n    \r\n  );\r\n\r\n}\r\n\r\n// export default TactInterface;\r\n\r\n\r\nexport default React.memo(TactInterface)"]},"metadata":{},"sourceType":"module"}