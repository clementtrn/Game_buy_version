{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\d\\xE9citude\\\\client\\\\src\\\\components\\\\pieces\\\\Piece.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CasePiece from \"./CasePiece\";\nimport Grid from '@material-ui/core/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Piece = ({\n  carte,\n  position,\n  nbLignes,\n  nbColonnes,\n  maxColonnesPiece,\n  maxLignesPiece,\n  mursV,\n  mursH,\n  anchor\n}) => {\n  const renderRow = i => {\n    var row = [];\n\n    for (let j = 0; j < nbColonnes; j++) {\n      const anchori = i + anchor[0];\n      const anchorj = j + anchor[1];\n\n      if (anchori < maxLignesPiece && anchorj < maxColonnesPiece) {\n        row.push( /*#__PURE__*/_jsxDEV(CasePiece, {\n          murs: [mursH[anchori][anchorj], mursV[anchori][anchorj + 1], mursH[anchori + 1][anchorj], mursV[anchori][anchorj]],\n          type: carte[anchori][anchorj]\n        }, i + \",\" + j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this));\n      }\n    }\n\n    return row;\n  };\n\n  const renderGrille = () => {\n    var grille = [];\n\n    for (let i = 0; i < nbLignes; i++) {\n      grille.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row-piece\",\n        children: renderRow(i)\n      }, \"row\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this));\n    }\n\n    return grille;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"piece\",\n    style: {\n      width: nbColonnes / maxColonnesPiece * 80 + \"%\",\n      height: nbLignes / maxLignesPiece * 100 + \"%\"\n    },\n    children: renderGrille()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Piece;\nexport default Piece;\n\nvar _c;\n\n$RefreshReg$(_c, \"Piece\");","map":{"version":3,"sources":["C:/Users/hugod/dÃ©citude/client/src/components/pieces/Piece.js"],"names":["React","makeStyles","CasePiece","Grid","Piece","carte","position","nbLignes","nbColonnes","maxColonnesPiece","maxLignesPiece","mursV","mursH","anchor","renderRow","i","row","j","anchori","anchorj","push","renderGrille","grille","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;;AAMA,MAAMC,KAAK,GAAG,CAAC;AACXC,EAAAA,KADW;AAEXC,EAAAA,QAFW;AAGXC,EAAAA,QAHW;AAIXC,EAAAA,UAJW;AAKXC,EAAAA,gBALW;AAMXC,EAAAA,cANW;AAOXC,EAAAA,KAPW;AAQXC,EAAAA,KARW;AASXC,EAAAA;AATW,CAAD,KAWR;AAEF,QAAMC,SAAS,GAAEC,CAAD,IAAK;AACjB,QAAIC,GAAG,GAAC,EAAR;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACT,UAAd,EAAyBS,CAAC,EAA1B,EAA6B;AACzB,YAAMC,OAAO,GAAGH,CAAC,GAACF,MAAM,CAAC,CAAD,CAAxB;AACA,YAAMM,OAAO,GAAGF,CAAC,GAACJ,MAAM,CAAC,CAAD,CAAxB;;AACA,UAAIK,OAAO,GAACR,cAAR,IAA0BS,OAAO,GAACV,gBAAtC,EAAuD;AACnDO,QAAAA,GAAG,CAACI,IAAJ,eACI,QAAC,SAAD;AAEI,UAAA,IAAI,EAAE,CAACR,KAAK,CAACM,OAAD,CAAL,CAAeC,OAAf,CAAD,EAAyBR,KAAK,CAACO,OAAD,CAAL,CAAeC,OAAO,GAAC,CAAvB,CAAzB,EAAmDP,KAAK,CAACM,OAAO,GAAC,CAAT,CAAL,CAAiBC,OAAjB,CAAnD,EAA6ER,KAAK,CAACO,OAAD,CAAL,CAAeC,OAAf,CAA7E,CAFV;AAGI,UAAA,IAAI,EAAEd,KAAK,CAACa,OAAD,CAAL,CAAeC,OAAf;AAHV,WACSJ,CAAC,GAAC,GAAF,GAAME,CADf;AAAA;AAAA;AAAA;AAAA,gBADJ;AASH;AAEJ;;AACD,WAAOD,GAAP;AACH,GAnBD;;AAsBA,QAAMK,YAAY,GAAC,MAAI;AACnB,QAAIC,MAAM,GAAC,EAAX;;AACA,SAAK,IAAIP,CAAC,GAAC,CAAX,EAAaA,CAAC,GAACR,QAAf,EAAwBQ,CAAC,EAAzB,EAA4B;AACxBO,MAAAA,MAAM,CAACF,IAAP,eACI;AAAmB,QAAA,SAAS,EAAC,WAA7B;AAAA,kBACKN,SAAS,CAACC,CAAD;AADd,SAAU,QAAMA,CAAhB;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;;AACD,WAAOO,MAAP;AACH,GAXD;;AAeA,sBAEA;AACI,IAAA,SAAS,EAAC,OADd;AAEI,IAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAACf,UAAU,GAACC,gBAAX,GAA4B,EAA5B,GAA+B,GADlC;AAEHe,MAAAA,MAAM,EAACjB,QAAQ,GAACG,cAAT,GAAwB,GAAxB,GAA4B;AAFhC,KAFX;AAAA,cAQIW,YAAY;AARhB;AAAA;AAAA;AAAA;AAAA,UAFA;AAeH,CAjED;;KAAMjB,K;AAmEN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CasePiece from \"./CasePiece\"\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\n\r\n\r\n\r\nconst Piece = ({\r\n    carte,\r\n    position,\r\n    nbLignes,\r\n    nbColonnes,\r\n    maxColonnesPiece,\r\n    maxLignesPiece,\r\n    mursV,\r\n    mursH,\r\n    anchor\r\n\r\n}) => {\r\n\r\n    const renderRow=(i)=>{\r\n        var row=[]\r\n        for(let j=0;j<nbColonnes;j++){\r\n            const anchori = i+anchor[0]\r\n            const anchorj = j+anchor[1]\r\n            if (anchori<maxLignesPiece && anchorj<maxColonnesPiece){\r\n                row.push( \r\n                    <CasePiece \r\n                        key={i+\",\"+j}\r\n                        murs={[mursH[anchori][anchorj],mursV[anchori][anchorj+1],mursH[anchori+1][anchorj],mursV[anchori][anchorj]]}\r\n                        type={carte[anchori][anchorj]}\r\n                        \r\n                    />\r\n                       \r\n                )\r\n            }\r\n            \r\n        }\r\n        return row\r\n    }\r\n\r\n\r\n    const renderGrille=()=>{\r\n        var grille=[]\r\n        for (let i=0;i<nbLignes;i++){\r\n            grille.push(\r\n                <div key={\"row\"+i} className=\"row-piece\">\r\n                    {renderRow(i)}\r\n                </div>\r\n            )  \r\n            \r\n        }\r\n        return grille\r\n    }\r\n\r\n\r\n\r\n    return (  \r\n\r\n    <div\r\n        className=\"piece\"  \r\n        style={{\r\n            width:nbColonnes/maxColonnesPiece*80+\"%\",\r\n            height:nbLignes/maxLignesPiece*100+\"%\"\r\n        }} \r\n       \r\n    >\r\n       {renderGrille()}\r\n    </div>\r\n        \r\n        \r\n    );\r\n}\r\n \r\nexport default Piece;"]},"metadata":{},"sourceType":"module"}