{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hugod\\\\decitude\\\\client\\\\src\\\\routes\\\\TactInterface.js\",\n    _s = $RefreshSig$();\n\nimport \"../styles/App.css\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport PlayAPI from \"../API/PlayAPI\";\nimport TactBandeauTop from \"../components/interfaceJoueur/TactBandeauTop\";\nimport TactBandeauBottom from \"../components/interfaceJoueur/TactBandeauBottom\";\nimport Grille from \"../components/interfaceJoueur/Grille\";\nimport { useHistory } from 'react-router-dom';\nimport cookie from 'react-cookies';\nimport TactBandeauDroite from \"../components/interfaceJoueur/TactBandeauDroite\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TactInterface = () => {\n  _s();\n\n  const history = useHistory();\n  const user = cookie.load(\"user\");\n\n  const handleDisconnect = () => {\n    cookie.save('user', \"disconnected\", {\n      path: '/',\n      maxAge: 60 * 60 * 1.5 //sec\n\n    });\n    history.push('/login');\n  };\n\n  if (user === null || user === undefined || user == \"disconnected\") history.push(\"/login\");\n  if (user !== null && user !== undefined && user.role !== undefined && !user.role.includes(\"TACT\")) handleDisconnect();\n  const [numPompier, setNumPompier] = useState(user.role.replace(\"TACT\", \"\"));\n  const [currentPomp, setCurrentPomp] = useState(null);\n  const [currentTour, setCurrentTour] = useState(null);\n  const [currentCycle, setCurrentCycle] = useState(null);\n  const [currentSequence, setCurrentSequence] = useState(null);\n  const [session, setSession] = useState(user != null ? user.session : null);\n  const [equipe, setEquipe] = useState(user != null ? user.equipe : null);\n  const [position, setPosition] = useState(null);\n  const [deplacementEnCours, setDeplacementEnCours] = useState({\n    type: 0,\n    rotation: 1\n  });\n  const [histActions, setHistActions] = useState([]);\n  const [configuration, setConfiguration] = useState(null);\n  const [stocks, setStocks] = useState(null);\n  const [resultats, setResultats] = useState({\n    Decedes: 0,\n    Sauves: 0\n  });\n  const [interventions, setInterventions] = useState({\n    Deplacement: 0,\n    Feu: 0,\n    FeuFum: 0,\n    Fum: 0,\n    Marqueur: 0,\n    Porte: 0,\n    Habitant: 0\n  });\n  const [budget, setBudget] = useState(0);\n  const isLoading = useRef(false); // INITIALISATION DE LA CARTE\n  // const [carte, setCarte] = useState([\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\n  // ])\n\n  const [carte, setCarte] = useState([]);\n  const [nbLignesGrille, setNbLignesGrille] = useState(0);\n  const [nbColonnesGrille, setNbColonnesGrille] = useState(0);\n  const [mursH, setMursH] = useState([[1, 1, 1, 1, 1, 1, 2, 6, 1, 1, 1, 1, 2, 5, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 2, 6, 1, 6, 2, 1, 1, 1, 5, 2, 1, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 6, 2, 1, 1, 1, 1, 1, 1, 1, 1]]);\n  const [mursV, setMursV] = useState([[1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [2, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [5, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 0, 0, 2], [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 5]]); // GET PLAY PARAMETERS \n\n  const getPlayState = async (session, equipe) => {\n    if (!isLoading.current) {\n      isLoading.current = true;\n      const currentPlayState = await PlayAPI.getPlayState(session, equipe);\n\n      if (Object.keys(currentPlayState).length > 0) {\n        // console.log(\"Get play state 2\")\n        // console.log(parseInt(JSON.parse(currentPlayState.currentTour.valeur)))\n        setCurrentPomp(parseInt(JSON.parse(currentPlayState.currentPomp.valeur)));\n        setCurrentTour(parseInt(JSON.parse(currentPlayState.currentTour.valeur)));\n        setCurrentCycle(parseInt(JSON.parse(currentPlayState.currentCycle.valeur)));\n        setCurrentSequence(parseInt(JSON.parse(currentPlayState.currentSequence.valeur)));\n        setMursH(JSON.parse(currentPlayState.mursH.valeur));\n        setMursV(JSON.parse(currentPlayState.mursV.valeur));\n        setCarte(JSON.parse(currentPlayState.carte.valeur));\n        setResultats({\n          Decedes: parseInt(JSON.parse(currentPlayState.resultatsDecedes.valeur)),\n          Sauves: parseInt(JSON.parse(currentPlayState.resultatsSauves.valeur))\n        }); // if(parseInt(JSON.parse(currentPlayState.currentPomp.valeur))==1 && parseInt(JSON.parse(currentPlayState.currentTour.valeur))==1){\n\n        getBudget(parseInt(JSON.parse(currentPlayState.currentCycle.valeur)), parseInt(JSON.parse(currentPlayState.currentSequence.valeur))); //  }\n      }\n\n      getPositionFromCarte(JSON.parse(currentPlayState.carte.valeur));\n      isLoading.current = false;\n    }\n  };\n\n  useEffect(() => {\n    // console.log(carte)\n    if (carte.length > 0) {\n      setNbLignesGrille(carte.length);\n      setNbColonnesGrille(carte[0].length);\n      getPositionFromCarte(carte);\n    }\n  }, [carte]); // useEffect(()=>{\n  //   console.log(currentTour)\n  // },[currentTour])\n\n  useEffect(() => {\n    if (session != null && equipe != null && currentTour == null) {\n      if (!isLoading.current) getPlayState(session, equipe);\n      getPlayParameters();\n      getPositionFromCarte(carte);\n    }\n  }, [session, equipe, numPompier]);\n\n  const getPlayParameters = async () => {\n    const param = await PlayAPI.getConfiguration(session);\n    setConfiguration(param);\n  };\n\n  const getPositionFromCarte = carte => {\n    if (carte != null && carte.length > 0) {\n      carte.forEach((ligne, indexI) => {\n        ligne.forEach((valeur, indexJ) => {\n          if (Math.floor(valeur / 1000) == 1 && Math.floor(valeur % 1000 / 100) == numPompier) setPosition([indexI, indexJ]);\n        });\n      });\n    }\n  }; // const onTextChange = (e) => {\n  //   setNumPompier(e.target.value)\n  //   console.log(typeof (e.target.value))\n  // }\n  // const onXChange = (e) => {\n  //   e.preventDefault()\n  //   if (e.target.value.length > 0) {\n  //     updateCarte(position, 0)\n  //     setPosition(position => [position[0], parseInt(e.target.value)])\n  //   } else {\n  //     updateCarte(position, 0)\n  //     setPosition(position => [position[0], 0])\n  //   }\n  // }\n  // const onYChange = (e) => {\n  //   e.preventDefault()\n  //   if (e.target.value.length > 0) {\n  //     updateCarte(position, 0)\n  //     setPosition(position => [parseInt(e.target.value), position[1]])\n  //   } else {\n  //     updateCarte(position, 0)\n  //     setPosition(position => [0, position[1]])\n  //   }\n  // }\n  // UPDATES\n\n\n  const updateCarte = (coords, value) => {\n    if (coords[0] < nbLignesGrille && coords[1] < nbColonnesGrille) {\n      try {\n        var c = [...carte];\n        c[coords[0]][coords[1]] = value;\n        setCarte(c);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const updateMurH = (coords, value) => {\n    if (coords[0] < mursH.length && coords[1] < mursH[0].length) {\n      try {\n        var m = [...mursH];\n        m[coords[0]][coords[1]] = value;\n        setMursH(m);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const updateMurV = (coords, value) => {\n    if (coords[0] < mursV.length && coords[1] < mursV[0].length) {\n      try {\n        var m = [...mursV];\n        m[coords[0]][coords[1]] = value;\n        setMursV(m);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }; // ACTIONS\n\n\n  const updateBudget = action => {\n    var depenses = 0;\n    if (configuration[\"coutEq\" + action] != null) depenses += configuration[\"coutEq\" + action].valeur;\n    if (configuration[\"coutInter\" + action] != null) depenses += configuration[\"coutInter\" + action].valeur;\n    setBudget(budget => budget - depenses);\n  };\n\n  const addHistAction = budget => {\n    const h = [...histActions, {\n      carte: JSON.stringify(carte),\n      budget: JSON.stringify(budget),\n      mursH: JSON.stringify(mursH),\n      mursV: JSON.stringify(mursV),\n      stocks: JSON.stringify(stocks),\n      resultats: JSON.stringify(resultats),\n      interventions: JSON.stringify(interventions),\n      deplacementEnCours: JSON.stringify({\n        type: 0,\n        rotation: deplacementEnCours.rotation\n      })\n    }];\n    setHistActions(h);\n  };\n\n  const retourAction = () => {\n    var h = [...histActions];\n    h.pop();\n    const state = h[h.length - 1];\n    setCarte(JSON.parse(state.carte));\n    setMursH(JSON.parse(state.mursH));\n    setMursV(JSON.parse(state.mursV));\n    setStocks(JSON.parse(state.stocks));\n    setInterventions(JSON.parse(state.interventions));\n    setResultats(JSON.parse(state.resultats));\n    setBudget(JSON.parse(state.budget));\n    setDeplacementEnCours(JSON.parse(state.deplacementEnCours));\n    setHistActions(h);\n  };\n\n  useEffect(() => {\n    if (position !== null && budget > 0 && deplacementEnCours.type == 0 && (histActions[histActions.length - 1] == undefined || budget < histActions[histActions.length - 1].budget)) {\n      addHistAction(budget);\n    }\n  }, [deplacementEnCours, budget, stocks]);\n  useEffect(() => {\n    console.log(\"hist Actions\");\n    console.log(histActions);\n  }, [histActions]); // useEffect(()=>{\n  //   if( position!==null && budget>0){\n  //     if(histActions[histActions.length-1]!==undefined && budget<histActions[histActions.length-1].budget ){\n  //       addHistAction(budget)\n  //     }\n  //   }\n  // },[budget])\n\n  const doAction = action => {\n    try {\n      if (Object.keys(stocks).includes(action)) {\n        var s = stocks;\n        s[action] = s[action] - 1;\n        setStocks(s);\n      }\n    } catch (error) {}\n\n    try {\n      if (Object.keys(interventions).includes(action)) {\n        var i = interventions;\n        i[action] = i[action] - 1;\n        setInterventions(i);\n      }\n    } catch (error) {} // setTimeout(() => {\n\n\n    updateBudget(action); // }, 1000);\n  };\n\n  const updateResultats = sauve => {\n    var res = { ...resultats\n    };\n\n    if (sauve) {\n      res.Sauves += 1;\n    } else {\n      res.Decedes += 1;\n    }\n\n    console.log(res);\n    setResultats(res);\n  };\n\n  useEffect(() => {\n    setBtnClickedBottom(null);\n    revealHabitant();\n  }, [position]);\n  useEffect(() => {\n    if (carte.length > 0) relacherHabitant();\n  }, [position, mursH, mursV]); // useEffect(() => {\n  //   console.log(\"Stocks\")\n  //   console.log(stocks)\n  // }, [stocks])\n\n  useEffect(() => {\n    if (configuration != null) {\n      var inter = interventions;\n      const interKeys = Object.keys(inter);\n      interKeys.forEach(action => {\n        try {\n          if (configuration[\"coutInter\" + action].valeur > 0) {\n            inter[action] = Math.min(configuration[\"coutEq\" + action] != null && configuration[\"coutEq\" + action] != undefined ? Math.floor(budget / (configuration[\"coutInter\" + action].valeur + configuration[\"coutEq\" + action].valeur)) : Math.floor(budget / configuration[\"coutInter\" + action].valeur), stocks[action] != null && stocks[action] != undefined && stocks[action] != \"NaN\" ? stocks[action] : 1000);\n          }\n        } catch (error) {\n          console.log(error, action);\n        }\n      });\n      setInterventions(inter);\n    } else {// getPlayParameters()\n    }\n  }, [budget, configuration, numPompier]); // SOCKETS\n\n  const socket = PlayAPI.getSocket(); // SOCKETS \n\n  const onTourChange = async e => {\n    e.preventDefault();\n    console.log(\"nouveau tour todo\");\n  };\n\n  const modifyBudgetsFin = async (cycle, sequence) => {\n    var budgetsFin = await PlayAPI.getBudgetsPompFin(session, equipe);\n    budgetsFin = JSON.parse(budgetsFin.valeur);\n\n    try {\n      budgetsFin.interventions.forEach((b, index) => {\n        if (b.numCycle == cycle && b.numSeq == sequence) {\n          budgetsFin[\"interventions\"][index][\"pomp\" + numPompier] = budget;\n        }\n      });\n    } catch (error) {}\n\n    try {\n      budgetsFin.equipements.forEach((e, index) => {\n        if (e.numCycle == cycle && e.numSeq == sequence) {\n          budgetsFin[\"equipements\"][index][\"Feu\"][\"pomp\" + numPompier] = stocks.Feu;\n          budgetsFin[\"equipements\"][index][\"FeuFum\"][\"pomp\" + numPompier] = stocks.FeuFum;\n          budgetsFin[\"equipements\"][index][\"Fum\"][\"pomp\" + numPompier] = stocks.Fum;\n          budgetsFin[\"equipements\"][index][\"Marqueur\"][\"pomp\" + numPompier] = stocks.Marqueur;\n        }\n      });\n    } catch (error) {}\n\n    PlayAPI.saveBudgetsPompFin(budgetsFin, session, equipe);\n    console.log(\"budgets modified\");\n    return budgetsFin;\n  };\n\n  const getBudget = async (cycle, sequence) => {\n    var nouveauBudget = await PlayAPI.getBudgetsPompFin(session, equipe);\n    nouveauBudget = nouveauBudget.valeur;\n    nouveauBudget = JSON.parse(nouveauBudget);\n    let budgetInter = 0;\n    let stocksEq = { ...stocks\n    };\n\n    try {\n      nouveauBudget.interventions.forEach(b => {\n        if (b.numCycle == cycle && b.numSeq == sequence) {\n          budgetInter = b[\"pomp\" + numPompier];\n        }\n      });\n    } catch (error) {}\n\n    try {\n      nouveauBudget.equipements.forEach(e => {\n        if (e.numCycle == cycle && e.numSeq == sequence) {\n          stocksEq.Feu += e.Feu[\"pomp\" + numPompier];\n          stocksEq.FeuFum += e.FeuFum[\"pomp\" + numPompier];\n          stocksEq.Fum += e.Fum[\"pomp\" + numPompier];\n          stocksEq.Marqueur += e.Marqueur[\"pomp\" + numPompier];\n        }\n      });\n    } catch (error) {}\n\n    if (budgetInter !== budget) {\n      setBudget(budgetInter);\n      setStocks(stocksEq);\n    }\n  };\n\n  useEffect(() => {\n    socket.on('changementTour', data => {\n      if (currentPomp != data.currentPomp || currentCycle !== data.currentCycle || currentTour !== data.currentTour || currentSequence !== data.currentSequence) {\n        console.log(\"changement tour\");\n        getPlayState(session, equipe);\n      }\n    });\n    socket.on('revealHabitant', data => {\n      if (carte !== null && carte.length > 0) {\n        // console.log(carte[data.y][data.x])\n        // console.log(carte[data.y])\n        if (carte[data.y][data.x] == 20) {\n          // console.log([data.y,data.x])\n          updateCarte([data.y, data.x], data.type); // console.log(\"socket hab\")\n          // console.log(data)\n        }\n      }\n    });\n  }); // TESTS\n\n  const test = async () => {\n    console.log(\"test function\");\n  }; // AUTORISATIONS \n\n\n  const deplacementAutorise = deplacement => {\n    // return true\n    var dpl = [...deplacement];\n    if (dpl[0] == 0 && dpl[1] == 0) return false;\n    if (position[0] + dpl[0] > carte.length - 1 || position[1] + dpl[1] > carte[0].length - 1 || position[0] + dpl[0] < 0 || position[1] + dpl[1] < 0) return false;\n    const dplInterditsCases = [1000, 20, 3, 4];\n\n    try {\n      const valeurCaseDeplacement = carte[position[0] + dpl[0]][position[1] + dpl[1]];\n      if (Math.floor(valeurCaseDeplacement / 1000) == 1) return false;\n      if (Math.floor(valeurCaseDeplacement / 10) == 2) return false;\n      if (dplInterditsCases.includes(valeurCaseDeplacement)) return false;\n    } catch (error) {}\n\n    const dplInterditsMurs = [1, 2, 3, 5];\n\n    try {\n      if (dpl[0] != 0) {\n        // haut bas\n        if (dpl[0] < 0) {\n          dpl[0] = 0;\n        }\n\n        if (typeof mursH[position[0] + dpl[0]][position[1]] === 'undefined') return false;\n        if (dplInterditsMurs.includes(mursH[position[0] + dpl[0]][position[1]])) return false;\n      } else {\n        // gauche droite\n        if (dpl[1] < 0) {\n          dpl[1] = 0;\n        }\n\n        if (typeof mursV[position[0]][position[1] + dpl[1]] === 'undefined') return false;\n        if (dplInterditsMurs.includes(mursV[position[0]][position[1] + dpl[1]])) return false;\n      }\n    } catch (error) {}\n\n    return true;\n  };\n\n  const testRelacherHabitant = () => {\n    if (carte[position[0]][position[1]] % 100 < 10) return false; // pas de transport d'habitant\n\n    const mursBloquants = [1, 2, 3, 5];\n    if (position[0] == 0 && !mursBloquants.includes(mursH[position[0]][position[1]])) return true; // haut\n\n    if (position[0] == nbLignesGrille - 1 && !mursBloquants.includes(mursH[position[0] + 1][position[1]])) return true; // bas\n\n    if (position[1] == 0 && !mursBloquants.includes(mursV[position[0]][position[1]])) return true; // gauche\n\n    if (position[1] == nbColonnesGrille - 1 && !mursBloquants.includes(mursV[position[0]][position[1] + 1])) return true; // droite\n\n    return false;\n  };\n\n  const relacherHabitant = () => {\n    if (testRelacherHabitant()) {\n      setTimeout(() => {\n        updateResultats(true);\n        updateCarte(position, (carte[position[0]][position[1]] % 100 - carte[position[0]][position[1]] % 10) / 10);\n      }, 1000);\n    }\n  };\n\n  const revealHabitant = async () => {\n    if (configuration != null) {\n      const casesAutour = getCasesAutour(); // console.log(configuration)\n\n      const nouvelHabitant = Math.random() <= configuration.txApparitionHab.valeur;\n      const typeHabitant = 20 + Math.floor(configuration.nbHabDifferents.valeur * Math.random()) + 1;\n\n      try {\n        if (casesAutour.dessus == 20) {\n          updateCarte([position[0] - 1, position[1]], nouvelHabitant ? typeHabitant : 0);\n          resetHistAction();\n          const response = await PlayAPI.revealHabitant([position[0] - 1, position[1]], nouvelHabitant ? typeHabitant : 0);\n        }\n      } catch (error) {}\n\n      try {\n        if (casesAutour.droite == 20) {\n          updateCarte([position[0], position[1] + 1], nouvelHabitant ? typeHabitant : 0);\n          resetHistAction();\n          const response = await PlayAPI.revealHabitant([position[0], position[1] + 1], nouvelHabitant ? typeHabitant : 0);\n        }\n      } catch (error) {}\n\n      try {\n        if (casesAutour.dessous == 20) {\n          updateCarte([position[0] + 1, position[1]], nouvelHabitant ? typeHabitant : 0);\n          resetHistAction();\n          const response = await PlayAPI.revealHabitant([position[0] + 1, position[1]], nouvelHabitant ? typeHabitant : 0);\n        }\n      } catch (error) {}\n\n      try {\n        if (casesAutour.gauche == 20) {\n          updateCarte([position[0], position[1] - 1], nouvelHabitant ? typeHabitant : 0);\n          resetHistAction();\n          const response = await PlayAPI.revealHabitant([position[0], position[1] - 1], nouvelHabitant ? typeHabitant : 0);\n        }\n      } catch (error) {}\n    }\n  };\n\n  const getCasesAutour = () => {\n    var cases = {};\n\n    try {\n      cases[\"dessus\"] = carte[position[0] - 1][position[1]]; // dessus\n    } catch (error) {}\n\n    try {\n      cases[\"droite\"] = carte[position[0]][position[1] + 1]; // droite\n    } catch (error) {}\n\n    try {\n      cases[\"dessous\"] = carte[position[0] + 1][position[1]]; // dessous\n    } catch (error) {}\n\n    try {\n      cases[\"gauche\"] = carte[position[0]][position[1] - 1]; // gauche\n    } catch (error) {}\n\n    return cases;\n  };\n\n  const getMursAutour = () => {\n    var murs = [];\n\n    try {\n      if (mursH[position[0]][position[1]] != 4 || mursH[position[0]][position[1] - 1] < 6 && mursH[position[0]][position[1] + 1] < 6) {\n        murs.push(mursH[position[0]][position[1]]); // dessus\n      } else {\n        murs.push(0);\n      }\n    } catch (error) {}\n\n    try {\n      if (mursV[position[0]][position[1] + 1] != 4 || mursV[position[0] - 1][position[1] + 1] < 6 && mursV[position[0] + 1][position[1] + 1] < 6) {\n        murs.push(mursV[position[0]][position[1] + 1]); // droite\n      } else {\n        murs.push(0);\n      }\n    } catch (error) {}\n\n    try {\n      if (mursH[position[0] + 1][position[1]] != 4 || mursH[position[0] + 1][position[1] - 1] < 6 && mursH[position[0] + 1][position[1] + 1] < 6) {\n        murs.push(mursH[position[0] + 1][position[1]]); // dessous\n      } else {\n        murs.push(0);\n      }\n    } catch (error) {}\n\n    try {\n      if (mursV[position[0]][position[1]] != 4 || mursV[position[0] - 1][position[1]] < 6 && mursV[position[0] + 1][position[1]] < 6) {\n        murs.push(mursV[position[0]][position[1]]); // gauche\n      } else {\n        murs.push(0);\n      }\n    } catch (error) {} // console.log(murs)\n\n\n    return murs;\n  };\n\n  const resetHistAction = () => {\n    setTimeout(() => {\n      setHistActions([{\n        carte: JSON.stringify(carte),\n        budget: JSON.stringify(budget),\n        mursH: JSON.stringify(mursH),\n        mursV: JSON.stringify(mursV),\n        stocks: JSON.stringify(stocks),\n        resultats: JSON.stringify(resultats),\n        interventions: JSON.stringify(interventions)\n      }]);\n    }, 300);\n  };\n\n  const [btnClickedBottom, setBtnClickedBottom] = useState(null);\n  const [propositionsCase, setPropositionsCase] = useState([]); // Extincteurs\n\n  const [propositionMursDetruire, setPropositionMursDetruire] = useState([[], []]); // Horizontaux  , Verticaux\n\n  useEffect(() => {\n    if (btnClickedBottom != 3 || btnClickedBottom == null) {\n      setPropositionMursDetruire([[], []]);\n    }\n\n    if (btnClickedBottom > 2 && btnClickedBottom < 6 || btnClickedBottom == null) {\n      setPropositionsCase([]);\n    }\n  }, [btnClickedBottom]); // HANDLERS CLIC GRILLE\n\n  const handleClicCase = (valeurAvant, valeurApres, coordX, coordY) => {\n    console.log(valeurAvant, valeurApres, coordX, coordY);\n\n    try {\n      updateCarte([coordY, coordX], valeurApres);\n      setPropositionsCase([]);\n      setBtnClickedBottom(null);\n\n      if (valeurAvant == 4 && valeurApres == 0) {\n        // Extincteur flamme\n        doAction(\"Feu\");\n      }\n\n      if (valeurAvant == 4 && valeurApres == 3) {\n        // Feu Fumée\n        doAction(\"FeuFum\");\n      }\n\n      if (valeurAvant == 3 && valeurApres == 0) {\n        // Fumée\n        doAction(\"Fum\");\n      }\n\n      if (Math.floor(valeurAvant / 10) == 2 && valeurApres == 0) {\n        // Habitant\n        doAction(\"Habitant\");\n        updateCarte(position, carte[position[0]][position[1]] + valeurAvant % 10);\n      }\n    } catch (error) {}\n  };\n\n  const handleClicMur = (num, valeurAvant, coordX, coordY) => {\n    // marqueur dégat\n    if (propositionMursDetruire[0].length > 0 || propositionMursDetruire[1].length > 0) {\n      const checkInCoords = index => {\n        // console.log(\"coordx\",coordX,\"coordy\",coordY,\"position\",position)\n        let numClic = null;\n\n        if (coordX == position[1] && (coordY < position[0] || coordY == position[0] && num == 0)) {\n          // top\n          numClic = 0; // case en question\n          // console.log(\"top\",numClic)\n        }\n\n        if (coordX == position[1] && (coordY > position[0] || coordY == position[0] && num == 2)) {\n          // bottom\n          numClic = 2; // case en question\n          // console.log(\"bottom\",numClic)\n        }\n\n        if (coordY == position[0] && (coordX < position[1] || coordX == position[1] && num == 3)) {\n          // left\n          numClic = 3; // case en question\n          // console.log(\"left\",numClic)\n        }\n\n        if (coordY == position[0] && (coordX > position[1] || coordX == position[1] && num == 1)) {\n          // right\n          numClic = 1; // case en question\n          // console.log(\"right\",numClic)\n        }\n\n        return numClic;\n      };\n\n      var cote = checkInCoords(num % 2);\n      let valeurApres = 4;\n      if (valeurAvant == 1) valeurApres = 3;\n\n      if (cote != null) {\n        try {\n          switch (cote) {\n            case 0:\n              updateMurH([position[0], position[1]], valeurApres); // if(valeurAvant==5 ||)\n\n              break;\n\n            case 1:\n              updateMurV([position[0], position[1] + 1], valeurApres);\n              break;\n\n            case 2:\n              updateMurH([position[0] + 1, position[1]], valeurApres);\n              break;\n\n            case 3:\n              updateMurV([position[0], position[1]], valeurApres);\n              break;\n          }\n\n          doAction(\"Marqueur\");\n        } catch (error) {}\n\n        setPropositionMursDetruire([[], []]);\n        setBtnClickedBottom(null);\n      }\n    }\n  }; // HANDLER CLICS BOUTONS\n\n\n  const handleClicFleche = num => {\n    // Position y x\n    let deplacement;\n    let rotation;\n\n    switch (num) {\n      case 0:\n        // haut\n        // console.log(\"haut\")\n        deplacement = [-1, 0];\n        rotation = 1;\n        break;\n\n      case 1:\n        // droite\n        // console.log(\"droite\")\n        deplacement = [0, 1];\n        rotation = 2;\n        break;\n\n      case 2:\n        // bas\n        // console.log(\"bas\")\n        deplacement = [1, 0];\n        rotation = 3;\n        break;\n\n      case 3:\n        // gauche\n        // console.log(\"gauche\")\n        deplacement = [0, -1];\n        rotation = 4;\n        break;\n    }\n\n    if (deplacementAutorise(deplacement)) {\n      // ANIMATION MARCHE\n      setDeplacementEnCours({\n        type: 1,\n        rotation: rotation\n      });\n      setTimeout(() => {\n        updateCarte([position[0] + deplacement[0], position[1] + deplacement[1]], carte[position[0]][position[1]] - carte[position[0]][position[1]] % 10 + rotation); // setPosition(position => [position[0] + deplacement[0], position[1] + deplacement[1]])\n\n        doAction(\"Deplacement\");\n        updateCarte(position, 0);\n        setDeplacementEnCours({\n          type: 2,\n          rotation: rotation\n        });\n        setTimeout(() => {\n          setDeplacementEnCours({\n            type: 0,\n            rotation: rotation\n          });\n        }, 500);\n      }, 500);\n    }\n  };\n\n  const handleChangePiece = () => {\n    resetHistAction();\n  };\n\n  const handleClicDoor = ouvrir => {\n    // position, ouvert/fermé\n    setBtnClickedBottom(ouvrir ? 4 : 5);\n    let valueAvant;\n    let valueApres;\n\n    if (ouvrir) {\n      valueAvant = 5;\n      valueApres = 6;\n    } else {\n      valueAvant = 6;\n      valueApres = 5;\n    }\n\n    doAction(\"Porte\");\n\n    try {\n      if (mursH[position[0]][position[1]] == valueAvant) updateMurH([position[0], position[1]], valueApres);\n      if (mursH[position[0] + 1][position[1]] == valueAvant) updateMurH([position[0] + 1, position[1]], valueApres);\n      if (mursV[position[0]][position[1]] == valueAvant) updateMurV([position[0], position[1]], valueApres);\n      if (mursV[position[0]][position[1] + 1] == valueAvant) updateMurV([position[0], position[1] + 1], valueApres);\n    } catch (error) {}\n  };\n\n  const handleClicExtincteur = num => {\n    // 0 FEU, 1 FEUFUM, 2 FUM\n    if (btnClickedBottom != num) {\n      var listeCasesAction = [];\n      let valeurAvant = 4;\n      let valeurApres = 0;\n      setBtnClickedBottom(num);\n\n      switch (num) {\n        case 0:\n          // ETEINDRE FEU\n          break;\n\n        case 1:\n          // FEU FUM\n          valeurApres = 3;\n          break;\n\n        case 2:\n          // ETEINDRE FUMEE\n          valeurAvant = 3;\n          break;\n      }\n\n      try {\n        if (carte[position[0] - 1][position[1]] == valeurAvant) listeCasesAction.push([position[0] - 1, position[1], valeurAvant, valeurApres]); // TOP\n      } catch (error) {}\n\n      try {\n        if (carte[position[0]][position[1] + 1] == valeurAvant) listeCasesAction.push([position[0], position[1] + 1, valeurAvant, valeurApres]); // RIGHT\n      } catch (error) {}\n\n      try {\n        if (carte[position[0] + 1][position[1]] == valeurAvant) listeCasesAction.push([position[0] + 1, position[1], valeurAvant, valeurApres]); // BOTTOM\n      } catch (error) {}\n\n      try {\n        if (carte[position[0]][position[1] - 1] == valeurAvant) listeCasesAction.push([position[0], position[1] - 1, valeurAvant, valeurApres]); // LEFT\n      } catch (error) {}\n\n      setPropositionsCase(listeCasesAction);\n    } else {\n      setBtnClickedBottom(null);\n    }\n  };\n\n  const handleClicMarqueur = () => {\n    if (btnClickedBottom != 3) {\n      setBtnClickedBottom(3);\n\n      if (propositionMursDetruire[0].length > 0 || propositionMursDetruire[1].length > 0) {\n        setPropositionMursDetruire([[], []]);\n      } else {\n        const mursADetruire = [1, 3, 5, 6];\n        var propositions = [[], []];\n        const mursAutour = getMursAutour();\n\n        try {\n          if (mursADetruire.includes(mursAutour[0])) propositions[0].push([position[1], position[0]]); // top\n\n          if (mursADetruire.includes(mursAutour[1])) propositions[1].push([position[1] + 1, position[0]]); // right\n\n          if (mursADetruire.includes(mursAutour[2])) propositions[0].push([position[1], position[0] + 1]); // bottom\n\n          if (mursADetruire.includes(mursAutour[3])) propositions[1].push([position[1], position[0]]); // left\n        } catch (error) {}\n\n        setPropositionMursDetruire(propositions);\n      }\n    } else {\n      setBtnClickedBottom(null);\n    }\n  };\n\n  const handleClicValidated = async bool => {\n    if (configuration != null) {\n      if (bool) {\n        let prochainPomp = currentPomp + 1;\n        let prochainTour = currentTour;\n        let prochainCycle = currentCycle;\n        let prochaineSequence = currentSequence;\n\n        if (numPompier == configuration.nbPompEquipe.valeur) {\n          // DERNIER POMP DU TOUR\n          if (currentTour == configuration.nbToursParCycle.valeur) {\n            // SEND TO INTER\n            prochainTour = 1;\n            prochainPomp = 0; // A CHANGER AVEC STRATEGIQUE\n\n            if (prochainCycle == configuration.nbCyclesParSequence.valeur) {\n              prochainCycle = 1;\n              prochaineSequence = prochaineSequence + 1;\n            } else {\n              prochainCycle = prochainCycle + 1;\n            }\n          } else {\n            // PAS DERNIER TOUR DU CYCLE\n            console.log(\"pas dernier tour\");\n            prochainPomp = 1;\n            prochainTour = prochainTour + 1;\n          }\n        } // console.log(prochainPomp,prochainTour,prochainCycle)\n\n\n        const budgetsFin = await modifyBudgetsFin(currentCycle, currentSequence);\n        PlayAPI.nouveauTour(prochainPomp, carte, mursH, mursV, prochaineSequence, prochainCycle, prochainTour, resultats.Decedes, resultats.Sauves, session, equipe);\n        console.log(\"validé\");\n      } else {\n        retourAction();\n        console.log(\"retour\");\n      }\n    }\n  };\n\n  const handleNoClicked = () => {\n    setPropositionMursDetruire([[], []]);\n    setPropositionsCase([]);\n  };\n\n  const handleClicHabitant = () => {\n    if (btnClickedBottom != 6) {\n      setBtnClickedBottom(6);\n      const valeurApres = 0;\n      var listeCasesAction = [];\n\n      try {\n        const valeurDessus = carte[position[0] - 1][position[1]];\n        if (Math.floor(valeurDessus / 10) == 2) listeCasesAction.push([position[0] - 1, position[1], valeurDessus, valeurApres]); // TOP\n      } catch (error) {}\n\n      try {\n        const valeurDroite = carte[position[0]][position[1] + 1];\n        if (Math.floor(valeurDroite / 10) == 2) listeCasesAction.push([position[0], position[1] + 1, valeurDroite, valeurApres]); // RIGHT\n      } catch (error) {}\n\n      try {\n        const valeurDessous = carte[position[0] + 1][position[1]];\n        if (Math.floor(valeurDessous / 10) == 2) listeCasesAction.push([position[0] + 1, position[1], valeurDessous, valeurApres]); // BOTTOM\n      } catch (error) {}\n\n      try {\n        const valeurGauche = carte[position[0]][position[1] - 1];\n        if (Math.floor(valeurGauche / 10) == 2) listeCasesAction.push([position[0], position[1] - 1, valeurGauche, valeurApres]); // LEFT\n      } catch (error) {}\n\n      setPropositionsCase(listeCasesAction);\n      console.log(\"handle clic habitant\");\n    } else {\n      setBtnClickedBottom(null);\n    }\n  };\n\n  return carte.length > 0 && position != null ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"absolute\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flex: 1,\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grille, {\n      nbColonnesGrille: nbColonnesGrille,\n      nbLignesGrille: nbLignesGrille,\n      carte: carte,\n      position: position,\n      mursH: mursH,\n      mursV: mursV,\n      propositionMursDetruire: propositionMursDetruire,\n      propositionsCase: propositionsCase,\n      handleClicMur: handleClicMur,\n      handleClicCase: handleClicCase,\n      handleChangePiece: handleChangePiece,\n      deplacementEnCours: deplacementEnCours\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1088,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TactBandeauTop, {\n      stocks: stocks,\n      resultats: resultats,\n      numeroPompier: numPompier,\n      sequence: currentSequence,\n      cycle: currentCycle,\n      tour: currentTour,\n      pomp: currentPomp,\n      configuration: configuration,\n      budget: budget,\n      equipe: equipe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1104,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TactBandeauBottom, {\n      interventions: interventions,\n      stocks: stocks,\n      numeroPompier: numPompier,\n      tour: currentTour,\n      pomp: currentPomp,\n      handleClicFleche: handleClicFleche,\n      handleClicValidated: handleClicValidated,\n      handleClicDoor: handleClicDoor,\n      handleClicMarqueur: handleClicMarqueur,\n      handleClicExt: handleClicExtincteur,\n      handleNoClicked: handleNoClicked,\n      handleClicHabitant: handleClicHabitant,\n      btnClickedBottom: btnClickedBottom,\n      mursAutour: getMursAutour(),\n      casesAutour: getCasesAutour(),\n      currentCase: carte[position[0]][position[1]],\n      histActions: histActions,\n      configuration: configuration,\n      deplacementEnCours: deplacementEnCours\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1117,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TactBandeauDroite, {\n      handleDisconnect: handleDisconnect,\n      configuration: configuration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1138,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1087,\n    columnNumber: 9\n  }, this) : null;\n};\n\n_s(TactInterface, \"49cdcel2sYr3hnuyhcqDYpYkKbs=\", false, function () {\n  return [useHistory];\n});\n\n_c = TactInterface;\nexport default TactInterface; // export default React.memo(TactInterface)\n\nvar _c;\n\n$RefreshReg$(_c, \"TactInterface\");","map":{"version":3,"sources":["C:/Users/hugod/decitude/client/src/routes/TactInterface.js"],"names":["React","useState","useEffect","useRef","PlayAPI","TactBandeauTop","TactBandeauBottom","Grille","useHistory","cookie","TactBandeauDroite","TactInterface","history","user","load","handleDisconnect","save","path","maxAge","push","undefined","role","includes","numPompier","setNumPompier","replace","currentPomp","setCurrentPomp","currentTour","setCurrentTour","currentCycle","setCurrentCycle","currentSequence","setCurrentSequence","session","setSession","equipe","setEquipe","position","setPosition","deplacementEnCours","setDeplacementEnCours","type","rotation","histActions","setHistActions","configuration","setConfiguration","stocks","setStocks","resultats","setResultats","Decedes","Sauves","interventions","setInterventions","Deplacement","Feu","FeuFum","Fum","Marqueur","Porte","Habitant","budget","setBudget","isLoading","carte","setCarte","nbLignesGrille","setNbLignesGrille","nbColonnesGrille","setNbColonnesGrille","mursH","setMursH","mursV","setMursV","getPlayState","current","currentPlayState","Object","keys","length","parseInt","JSON","parse","valeur","resultatsDecedes","resultatsSauves","getBudget","getPositionFromCarte","getPlayParameters","param","getConfiguration","forEach","ligne","indexI","indexJ","Math","floor","updateCarte","coords","value","c","error","console","log","updateMurH","m","updateMurV","updateBudget","action","depenses","addHistAction","h","stringify","retourAction","pop","state","doAction","s","i","updateResultats","sauve","res","setBtnClickedBottom","revealHabitant","relacherHabitant","inter","interKeys","min","socket","getSocket","onTourChange","e","preventDefault","modifyBudgetsFin","cycle","sequence","budgetsFin","getBudgetsPompFin","b","index","numCycle","numSeq","equipements","saveBudgetsPompFin","nouveauBudget","budgetInter","stocksEq","on","data","y","x","test","deplacementAutorise","deplacement","dpl","dplInterditsCases","valeurCaseDeplacement","dplInterditsMurs","testRelacherHabitant","mursBloquants","setTimeout","casesAutour","getCasesAutour","nouvelHabitant","random","txApparitionHab","typeHabitant","nbHabDifferents","dessus","resetHistAction","response","droite","dessous","gauche","cases","getMursAutour","murs","btnClickedBottom","propositionsCase","setPropositionsCase","propositionMursDetruire","setPropositionMursDetruire","handleClicCase","valeurAvant","valeurApres","coordX","coordY","handleClicMur","num","checkInCoords","numClic","cote","handleClicFleche","handleChangePiece","handleClicDoor","ouvrir","valueAvant","valueApres","handleClicExtincteur","listeCasesAction","handleClicMarqueur","mursADetruire","propositions","mursAutour","handleClicValidated","bool","prochainPomp","prochainTour","prochainCycle","prochaineSequence","nbPompEquipe","nbToursParCycle","nbCyclesParSequence","nouveauTour","handleNoClicked","handleClicHabitant","valeurDessus","valeurDroite","valeurDessous","valeurGauche","display","alignItems","justifyContent","flex","width","height"],"mappings":"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","sourcesContent":["import \"../styles/App.css\"\r\nimport React, { useState, useEffect,useRef } from 'react'\r\nimport PlayAPI from \"../API/PlayAPI\"\r\nimport TactBandeauTop from \"../components/interfaceJoueur/TactBandeauTop\"\r\nimport TactBandeauBottom from \"../components/interfaceJoueur/TactBandeauBottom\"\r\nimport Grille from \"../components/interfaceJoueur/Grille\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nimport cookie from 'react-cookies'\r\nimport TactBandeauDroite from \"../components/interfaceJoueur/TactBandeauDroite\"\r\n\r\n\r\nconst TactInterface = () => {\r\n\r\n  const history = useHistory()\r\n  const user = cookie.load(\"user\")\r\n\r\n  const handleDisconnect = () => {\r\n    cookie.save('user', \"disconnected\", {\r\n      path: '/',\r\n      maxAge: 60 * 60 * 1.5, //sec\r\n    })\r\n    history.push('/login');\r\n  }\r\n\r\n  if (user === null || user === undefined || user==\"disconnected\") history.push(\"/login\");\r\n  if(user !== null && user !== undefined && user.role!==undefined && !user.role.includes(\"TACT\")) handleDisconnect()\r\n\r\n\r\n\r\n\r\n  const [numPompier, setNumPompier] = useState(user.role.replace(\"TACT\", \"\"))\r\n  const [currentPomp,setCurrentPomp]=useState(null)\r\n  const [currentTour, setCurrentTour] = useState(null)\r\n  const [currentCycle, setCurrentCycle] = useState(null)\r\n  const [currentSequence, setCurrentSequence] = useState(null)\r\n  const [session,setSession]=useState(user !=null ? user.session : null)\r\n  const [equipe,setEquipe]=useState(user !=null ? user.equipe : null)\r\n  const [position, setPosition] = useState(null)\r\n  const [deplacementEnCours,setDeplacementEnCours]=useState({\r\n      type:0,\r\n      rotation:1\r\n  })\r\n  const [histActions,setHistActions]=useState([])\r\n\r\n\r\n\r\n\r\n\r\n  const [configuration, setConfiguration] = useState(null)\r\n\r\n  const [stocks, setStocks] = useState(null)\r\n\r\n  const [resultats, setResultats] = useState({\r\n    Decedes: 0,\r\n    Sauves: 0\r\n  })\r\n\r\n  const [interventions, setInterventions] = useState({\r\n    Deplacement: 0,\r\n    Feu: 0,\r\n    FeuFum: 0,\r\n    Fum: 0,\r\n    Marqueur: 0,\r\n    Porte: 0,\r\n    Habitant: 0\r\n  })\r\n\r\n  const [budget, setBudget] = useState(0)\r\n\r\n\r\n  const isLoading=useRef(false)\r\n\r\n  // INITIALISATION DE LA CARTE\r\n\r\n  // const [carte, setCarte] = useState([\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  //   [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0],\r\n  // ])\r\n  \r\n  const [carte, setCarte] = useState([])\r\n\r\n  const [nbLignesGrille,setNbLignesGrille] = useState(0)\r\n  const [nbColonnesGrille,setNbColonnesGrille ]= useState(0)\r\n\r\n  const [mursH, setMursH] = useState([\r\n    [1, 1, 1, 1, 1, 1, 2, 6, 1, 1, 1, 1, 2, 5, 1, 1],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 1, 1, 2, 6, 1, 6, 2, 1, 1, 1, 5, 2, 1, 1],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    [1, 1, 1, 1, 1, 1, 6, 2, 1, 1, 1, 1, 1, 1, 1, 1]\r\n  ])\r\n\r\n  const [mursV, setMursV] = useState([\r\n    [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\r\n    [2, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\r\n    [5, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1],\r\n    [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1],\r\n    [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1],\r\n    [1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 0, 0, 1],\r\n    [1, 0, 0, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 0, 0, 2],\r\n    [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 5]\r\n  ])\r\n\r\n\r\n\r\n  // GET PLAY PARAMETERS \r\n  const getPlayState=async(session,equipe)=>{\r\n    if(!isLoading.current){\r\n      isLoading.current=true\r\n      const currentPlayState = await PlayAPI.getPlayState(session,equipe)\r\n\r\n      if(Object.keys(currentPlayState).length>0 ){\r\n        // console.log(\"Get play state 2\")\r\n        // console.log(parseInt(JSON.parse(currentPlayState.currentTour.valeur)))\r\n\r\n        setCurrentPomp(parseInt(JSON.parse(currentPlayState.currentPomp.valeur)))\r\n        setCurrentTour(parseInt(JSON.parse(currentPlayState.currentTour.valeur)))\r\n        setCurrentCycle(parseInt(JSON.parse(currentPlayState.currentCycle.valeur)))\r\n        setCurrentSequence(parseInt(JSON.parse(currentPlayState.currentSequence.valeur)))\r\n\r\n        setMursH(JSON.parse(currentPlayState.mursH.valeur))\r\n        setMursV(JSON.parse(currentPlayState.mursV.valeur))\r\n        setCarte(JSON.parse(currentPlayState.carte.valeur))\r\n        setResultats({\r\n          Decedes:parseInt(JSON.parse(currentPlayState.resultatsDecedes.valeur)),\r\n          Sauves:parseInt(JSON.parse(currentPlayState.resultatsSauves.valeur)),\r\n        })\r\n\r\n        // if(parseInt(JSON.parse(currentPlayState.currentPomp.valeur))==1 && parseInt(JSON.parse(currentPlayState.currentTour.valeur))==1){\r\n          getBudget(parseInt(JSON.parse(currentPlayState.currentCycle.valeur)),parseInt(JSON.parse(currentPlayState.currentSequence.valeur)))\r\n      //  }\r\n      }\r\n      getPositionFromCarte(JSON.parse(currentPlayState.carte.valeur))\r\n      isLoading.current=false\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n    // console.log(carte)\r\n    if(carte.length>0){\r\n      setNbLignesGrille(carte.length)\r\n      setNbColonnesGrille(carte[0].length)\r\n      getPositionFromCarte(carte)\r\n    }\r\n\r\n  },[carte])\r\n\r\n  // useEffect(()=>{\r\n  //   console.log(currentTour)\r\n  // },[currentTour])\r\n\r\n\r\n  useEffect(()=>{\r\n    if(session!=null && equipe!=null && currentTour==null){\r\n      if(!isLoading.current) getPlayState(session,equipe)\r\n      getPlayParameters()\r\n      getPositionFromCarte(carte)\r\n    }\r\n  },[session,equipe,numPompier])\r\n\r\n  const getPlayParameters = async () => {\r\n    const param = await PlayAPI.getConfiguration(session)\r\n    setConfiguration(param)\r\n  }\r\n\r\n  const getPositionFromCarte=(carte)=>{\r\n    if(carte!=null && carte.length>0){\r\n      carte.forEach((ligne,indexI) => {\r\n        ligne.forEach((valeur,indexJ) => {\r\n  \r\n          if( Math.floor(valeur / 1000) == 1 && Math.floor(valeur%1000/100)==numPompier) setPosition([indexI,indexJ])\r\n\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  // const onTextChange = (e) => {\r\n  //   setNumPompier(e.target.value)\r\n  //   console.log(typeof (e.target.value))\r\n  // }\r\n\r\n  // const onXChange = (e) => {\r\n  //   e.preventDefault()\r\n  //   if (e.target.value.length > 0) {\r\n  //     updateCarte(position, 0)\r\n  //     setPosition(position => [position[0], parseInt(e.target.value)])\r\n  //   } else {\r\n  //     updateCarte(position, 0)\r\n  //     setPosition(position => [position[0], 0])\r\n  //   }\r\n\r\n  // }\r\n  // const onYChange = (e) => {\r\n  //   e.preventDefault()\r\n  //   if (e.target.value.length > 0) {\r\n  //     updateCarte(position, 0)\r\n  //     setPosition(position => [parseInt(e.target.value), position[1]])\r\n  //   } else {\r\n  //     updateCarte(position, 0)\r\n  //     setPosition(position => [0, position[1]])\r\n  //   }\r\n  // }\r\n\r\n\r\n  // UPDATES\r\n  const updateCarte = (coords, value) => {\r\n    if (coords[0] < nbLignesGrille && coords[1] < nbColonnesGrille) {\r\n      try {\r\n        var c = [...carte]\r\n        c[coords[0]][coords[1]] = value\r\n        setCarte(c)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  const updateMurH = (coords, value) => {\r\n    if (coords[0] < mursH.length && coords[1] < mursH[0].length) {\r\n      try {\r\n        var m = [...mursH]\r\n        m[coords[0]][coords[1]] = value\r\n        setMursH(m)\r\n\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n  }\r\n  const updateMurV = (coords, value) => {\r\n    if (coords[0] < mursV.length && coords[1] < mursV[0].length) {\r\n      try {\r\n        var m = [...mursV]\r\n        m[coords[0]][coords[1]] = value\r\n        setMursV(m)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  // ACTIONS\r\n\r\n  const updateBudget = (action) => {\r\n    var depenses = 0\r\n    if (configuration[\"coutEq\" + action] != null) depenses += configuration[\"coutEq\" + action].valeur\r\n    if (configuration[\"coutInter\" + action] != null) depenses += configuration[\"coutInter\" + action].valeur\r\n    setBudget(budget => budget - depenses)\r\n  }\r\n\r\n\r\n  \r\n  \r\n  const addHistAction=(budget)=>{\r\n    \r\n    const h = [...histActions,{\r\n      carte:JSON.stringify(carte),\r\n      budget:JSON.stringify(budget),\r\n      mursH:JSON.stringify(mursH),\r\n      mursV:JSON.stringify(mursV),\r\n      stocks:JSON.stringify(stocks),\r\n      resultats:JSON.stringify(resultats),\r\n      interventions:JSON.stringify(interventions),\r\n      deplacementEnCours:JSON.stringify({\r\n        type:0,\r\n        rotation:deplacementEnCours.rotation\r\n    })\r\n    }]\r\n    setHistActions(h)\r\n  }\r\n\r\n  const retourAction=()=>{\r\n    var h = [...histActions]\r\n    h.pop()\r\n    const state = h[h.length-1]\r\n    \r\n    \r\n    setCarte(JSON.parse(state.carte))\r\n    setMursH(JSON.parse(state.mursH))\r\n    setMursV(JSON.parse(state.mursV))\r\n    setStocks(JSON.parse(state.stocks))\r\n    setInterventions(JSON.parse(state.interventions))\r\n    setResultats(JSON.parse(state.resultats))\r\n    setBudget(JSON.parse(state.budget))\r\n    setDeplacementEnCours(JSON.parse(state.deplacementEnCours))\r\n    setHistActions(h)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(position!==null &&  budget>0 && deplacementEnCours.type==0 && (histActions[histActions.length-1]==undefined || budget<histActions[histActions.length-1].budget) ){ \r\n      addHistAction(budget)\r\n    }\r\n  },[deplacementEnCours,budget,stocks])\r\n\r\n  useEffect(()=>{\r\n    console.log(\"hist Actions\")\r\n    console.log(histActions )\r\n  },[histActions])\r\n\r\n  // useEffect(()=>{\r\n  //   if( position!==null && budget>0){\r\n      \r\n  //     if(histActions[histActions.length-1]!==undefined && budget<histActions[histActions.length-1].budget ){\r\n\r\n  //       addHistAction(budget)\r\n  //     }\r\n  //   }\r\n  // },[budget])\r\n\r\n  const doAction = (action) => {\r\n    try {\r\n      if(Object.keys(stocks).includes(action)){\r\n        var s = stocks\r\n        s[action] = s[action] - 1\r\n        setStocks(s)\r\n      }\r\n      \r\n    } catch (error) { }\r\n\r\n    try {\r\n      if(Object.keys(interventions).includes(action)){\r\n        var i = interventions\r\n      i[action] = i[action] - 1\r\n      setInterventions(i)\r\n      }      \r\n    } catch (error) { }\r\n\r\n    // setTimeout(() => {\r\n      updateBudget(action)\r\n    // }, 1000);\r\n    \r\n  }\r\n\r\n  const updateResultats = (sauve) => {\r\n    var res = {...resultats}\r\n    if (sauve) {\r\n      res.Sauves += 1\r\n    } else {\r\n      res.Decedes += 1\r\n    }\r\n    console.log(res)\r\n    setResultats(res)\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setBtnClickedBottom(null)\r\n    revealHabitant()\r\n  }, [position])\r\n\r\n\r\n  useEffect(() => {\r\n    if(carte.length>0) relacherHabitant()\r\n\r\n  }, [position, mursH, mursV])\r\n\r\n  \r\n\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"Stocks\")\r\n  //   console.log(stocks)\r\n  // }, [stocks])\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (configuration != null) {\r\n      var inter = interventions\r\n      const interKeys = Object.keys(inter)\r\n      interKeys.forEach(action => {\r\n        try {\r\n          if (configuration[\"coutInter\" + action].valeur > 0) {\r\n            inter[action] = Math.min(\r\n              configuration[\"coutEq\" + action] != null && configuration[\"coutEq\" + action] != undefined ? Math.floor(budget / (configuration[\"coutInter\" + action].valeur + configuration[\"coutEq\" + action].valeur)) : Math.floor(budget / configuration[\"coutInter\" + action].valeur),\r\n              stocks[action] != null && stocks[action] != undefined && stocks[action] !=\"NaN\" ? stocks[action] : 1000\r\n            )\r\n          }\r\n        } catch (error) {\r\n          console.log(error,action)\r\n        }\r\n\r\n      })\r\n      setInterventions(inter)\r\n      \r\n    } else {\r\n      // getPlayParameters()\r\n    }\r\n  }, [budget, configuration, numPompier])\r\n\r\n  // SOCKETS\r\n  const socket = PlayAPI.getSocket()\r\n\r\n  // SOCKETS \r\n  const onTourChange = async (e) => {\r\n    e.preventDefault()\r\n    console.log(\"nouveau tour todo\")\r\n  }\r\n\r\n  const modifyBudgetsFin=async(cycle,sequence)=>{\r\n    var budgetsFin = await PlayAPI.getBudgetsPompFin(session,equipe)\r\n    budgetsFin=JSON.parse(budgetsFin.valeur)\r\n\r\n    try {\r\n      budgetsFin.interventions.forEach((b,index)=>{\r\n          if(b.numCycle==cycle && b.numSeq ==sequence){\r\n            \r\n            budgetsFin[\"interventions\"][index][\"pomp\"+numPompier]=budget\r\n          }\r\n    \r\n        })\r\n      } catch (error) {\r\n        \r\n      }\r\n  \r\n      try {\r\n        budgetsFin.equipements.forEach((e,index)=>{\r\n          if(e.numCycle==cycle && e.numSeq == sequence){\r\n            budgetsFin[\"equipements\"][index][\"Feu\"][\"pomp\"+numPompier]=stocks.Feu\r\n            budgetsFin[\"equipements\"][index][\"FeuFum\"][\"pomp\"+numPompier]=stocks.FeuFum\r\n            budgetsFin[\"equipements\"][index][\"Fum\"][\"pomp\"+numPompier]=stocks.Fum\r\n            budgetsFin[\"equipements\"][index][\"Marqueur\"][\"pomp\"+numPompier]=stocks.Marqueur\r\n          }\r\n    \r\n        })\r\n      } catch (error) {\r\n        \r\n      }\r\n    PlayAPI.saveBudgetsPompFin(budgetsFin,session,equipe)\r\n    console.log(\"budgets modified\")\r\n    return budgetsFin\r\n  }\r\n\r\n  const getBudget=async(cycle,sequence)=>{\r\n    var nouveauBudget = await PlayAPI.getBudgetsPompFin(session,equipe)\r\n    nouveauBudget=nouveauBudget.valeur\r\n    nouveauBudget=JSON.parse(nouveauBudget)\r\n    \r\n    let budgetInter = 0\r\n    let stocksEq ={ ...stocks}\r\n    \r\n    try {\r\n      nouveauBudget.interventions.forEach((b)=>{\r\n        if(b.numCycle==cycle && b.numSeq ==sequence){\r\n          \r\n          budgetInter=b[\"pomp\"+numPompier]\r\n        }\r\n  \r\n      })\r\n    } catch (error) {\r\n      \r\n    }\r\n\r\n    try {\r\n      nouveauBudget.equipements.forEach((e)=>{\r\n        if(e.numCycle==cycle && e.numSeq == sequence){\r\n          stocksEq.Feu+= e.Feu[\"pomp\"+numPompier]\r\n          stocksEq.FeuFum+= e.FeuFum[\"pomp\"+numPompier]\r\n          stocksEq.Fum+= e.Fum[\"pomp\"+numPompier]\r\n          stocksEq.Marqueur+= e.Marqueur[\"pomp\"+numPompier]\r\n        }\r\n  \r\n      })\r\n    } catch (error) {\r\n      \r\n    }\r\n\r\n    if(budgetInter!==budget){\r\n      setBudget(budgetInter)\r\n      setStocks(stocksEq)\r\n    }\r\n\r\n   \r\n   \r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    socket.on('changementTour', (data) => {\r\n     \r\n      \r\n      \r\n      if(currentPomp!=data.currentPomp || currentCycle!==data.currentCycle || currentTour!==data.currentTour || currentSequence!==data.currentSequence){\r\n        console.log(\"changement tour\") \r\n        getPlayState(session,equipe)\r\n      }\r\n\r\n     \r\n      \r\n    })\r\n\r\n\r\n    socket.on('revealHabitant',(data)=>{\r\n      if(carte!==null && carte.length>0){\r\n        // console.log(carte[data.y][data.x])\r\n        // console.log(carte[data.y])\r\n        if(carte[data.y][data.x]==20){\r\n          // console.log([data.y,data.x])\r\n          updateCarte([data.y,data.x],data.type)\r\n          // console.log(\"socket hab\")\r\n          // console.log(data)\r\n        }\r\n      }\r\n    })\r\n  });\r\n\r\n\r\n\r\n  // TESTS\r\n\r\n  const test = async () => {\r\n\r\n    console.log(\"test function\")\r\n  }\r\n\r\n\r\n\r\n\r\n  // AUTORISATIONS \r\n  const deplacementAutorise = (deplacement) => {\r\n    // return true\r\n    var dpl = [...deplacement]\r\n    if (dpl[0] == 0 && dpl[1] == 0) return false\r\n    if (position[0] + dpl[0] > carte.length - 1 || position[1] + dpl[1] > carte[0].length - 1 || position[0] + dpl[0] < 0 || position[1] + dpl[1] < 0) return false\r\n\r\n\r\n    const dplInterditsCases = [1000, 20, 3, 4]\r\n    \r\n    try {\r\n      const valeurCaseDeplacement = carte[position[0] + dpl[0]][position[1] + dpl[1]]\r\n      if (Math.floor(valeurCaseDeplacement/1000)==1) return false\r\n      if (Math.floor(valeurCaseDeplacement/10)==2) return false\r\n      if (dplInterditsCases.includes(valeurCaseDeplacement)) return false\r\n    } catch (error) { }\r\n\r\n    const dplInterditsMurs = [1, 2, 3, 5]\r\n    try {\r\n      if (dpl[0] != 0) { // haut bas\r\n        if (dpl[0] < 0) {\r\n          dpl[0] = 0\r\n        }\r\n        if (typeof (mursH[position[0] + dpl[0]][position[1]]) === 'undefined') return false\r\n        if (dplInterditsMurs.includes(mursH[position[0] + dpl[0]][position[1]])) return false\r\n      } else { // gauche droite\r\n        if (dpl[1] < 0) {\r\n          dpl[1] = 0\r\n        }\r\n        if (typeof (mursV[position[0]][position[1] + dpl[1]]) === 'undefined') return false\r\n        if (dplInterditsMurs.includes(mursV[position[0]][position[1] + dpl[1]])) return false\r\n      }\r\n    } catch (error) { }\r\n\r\n\r\n\r\n\r\n    return true\r\n  }\r\n  const testRelacherHabitant = () => {\r\n    if (carte[position[0]][position[1]]%100<10) return false // pas de transport d'habitant\r\n\r\n    const mursBloquants = [1, 2, 3, 5]\r\n\r\n    if (position[0] == 0 && !mursBloquants.includes(mursH[position[0]][position[1]])) return true // haut\r\n    if (position[0] == nbLignesGrille - 1 && !mursBloquants.includes(mursH[position[0] + 1][position[1]])) return true // bas\r\n\r\n    if (position[1] == 0 && !mursBloquants.includes(mursV[position[0]][position[1]])) return true // gauche\r\n    if (position[1] == nbColonnesGrille - 1 && !mursBloquants.includes(mursV[position[0]][position[1] + 1])) return true // droite\r\n\r\n    return false\r\n  }\r\n  const relacherHabitant = () => {\r\n    if (testRelacherHabitant()) {\r\n      setTimeout(() => {\r\n        updateResultats(true)\r\n        updateCarte(position, (carte[position[0]][position[1]]%100 - carte[position[0]][position[1]]%10)/10)\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  const revealHabitant=async()=>{\r\n    if(configuration!=null){\r\n      const casesAutour = getCasesAutour()\r\n      // console.log(configuration)\r\n      const nouvelHabitant = Math.random() <= configuration.txApparitionHab.valeur\r\n      const typeHabitant = 20+Math.floor(configuration.nbHabDifferents.valeur*Math.random())+1 \r\n      try {\r\n        if(casesAutour.dessus==20) {\r\n          updateCarte([position[0]-1,position[1]], nouvelHabitant ? typeHabitant : 0)\r\n          resetHistAction()\r\n          const response =  await PlayAPI.revealHabitant([position[0]-1,position[1]],nouvelHabitant ? typeHabitant : 0)      \r\n\r\n        }\r\n      } catch (error) {}\r\n      try {\r\n        if(casesAutour.droite==20) {\r\n          updateCarte([position[0],position[1]+1], nouvelHabitant ? typeHabitant : 0)\r\n          resetHistAction()\r\n          const response =  await PlayAPI.revealHabitant([position[0],position[1]+1],nouvelHabitant ? typeHabitant : 0)      \r\n\r\n        }\r\n      } catch (error) {}\r\n      try {\r\n        if(casesAutour.dessous==20){ \r\n          updateCarte([position[0]+1,position[1]], nouvelHabitant ? typeHabitant : 0)\r\n          resetHistAction()\r\n          const response =  await PlayAPI.revealHabitant([position[0]+1,position[1]],nouvelHabitant ? typeHabitant : 0)      \r\n\r\n        }\r\n      } catch (error) {}\r\n      try {\r\n        if(casesAutour.gauche==20) {\r\n          updateCarte([position[0],position[1]-1], nouvelHabitant ? typeHabitant : 0)\r\n          resetHistAction()\r\n          const response =  await PlayAPI.revealHabitant([position[0],position[1]-1],nouvelHabitant ? typeHabitant : 0)      \r\n\r\n        }\r\n      } catch (error) {}\r\n      \r\n    }\r\n    \r\n  }\r\n\r\n  const getCasesAutour = () => {\r\n    var cases = {}\r\n\r\n    try {\r\n      cases[\"dessus\"]=(carte[position[0] - 1][position[1]]) // dessus\r\n    } catch (error) { }\r\n    try {\r\n      cases[\"droite\"]=(carte[position[0]][position[1] + 1]) // droite\r\n    } catch (error) { }\r\n    try {\r\n      cases[\"dessous\"]=(carte[position[0] + 1][position[1]]) // dessous\r\n    } catch (error) { }\r\n    try {\r\n      cases[\"gauche\"]=(carte[position[0]][position[1] - 1]) // gauche\r\n    } catch (error) { }\r\n    return cases\r\n  }\r\n  const getMursAutour = () => {\r\n    var murs = []\r\n\r\n    try {\r\n      if (mursH[position[0]][position[1]] != 4 || (mursH[position[0]][position[1] - 1] < 6 && mursH[position[0]][position[1] + 1] < 6)) {\r\n        murs.push(mursH[position[0]][position[1]]) // dessus\r\n      } else {\r\n        murs.push(0)\r\n      }\r\n    } catch (error) { }\r\n\r\n    try {\r\n      if (mursV[position[0]][position[1] + 1] != 4 || (mursV[position[0] - 1][position[1] + 1] < 6 && mursV[position[0] + 1][position[1] + 1] < 6)) {\r\n        murs.push(mursV[position[0]][position[1] + 1])  // droite\r\n      } else {\r\n        murs.push(0)\r\n      }\r\n    } catch (error) { }\r\n\r\n    try {\r\n      if (mursH[position[0] + 1][position[1]] != 4 || (mursH[position[0] + 1][position[1] - 1] < 6 && mursH[position[0] + 1][position[1] + 1] < 6)) {\r\n        murs.push(mursH[position[0] + 1][position[1]]) // dessous\r\n      } else {\r\n        murs.push(0)\r\n      }\r\n\r\n    } catch (error) { }\r\n    try {\r\n      if (mursV[position[0]][position[1]] != 4 || (mursV[position[0] - 1][position[1]] < 6 && mursV[position[0] + 1][position[1]] < 6)) {\r\n        murs.push(mursV[position[0]][position[1]])  // gauche\r\n      } else {\r\n        murs.push(0)\r\n      }\r\n    } catch (error) { }\r\n    // console.log(murs)\r\n    return murs\r\n  }\r\n\r\n  const resetHistAction=()=>{\r\n    setTimeout(() => {\r\n      setHistActions([{\r\n        carte:JSON.stringify(carte),\r\n        budget:JSON.stringify(budget),\r\n        mursH:JSON.stringify(mursH),\r\n        mursV:JSON.stringify(mursV),\r\n        stocks:JSON.stringify(stocks),\r\n        resultats:JSON.stringify(resultats),\r\n        interventions:JSON.stringify(interventions)\r\n      }])\r\n    }, 300);\r\n  }\r\n\r\n\r\n  const [btnClickedBottom, setBtnClickedBottom] = useState(null)\r\n  const [propositionsCase, setPropositionsCase] = useState([]) // Extincteurs\r\n  const [propositionMursDetruire, setPropositionMursDetruire] = useState([[], []]) // Horizontaux  , Verticaux\r\n  useEffect(() => {\r\n    if (btnClickedBottom != 3 || btnClickedBottom == null) {\r\n      setPropositionMursDetruire([[], []])\r\n    }\r\n    if ((btnClickedBottom > 2 && btnClickedBottom < 6) || btnClickedBottom == null) {\r\n      setPropositionsCase([])\r\n    }\r\n  }, [btnClickedBottom])\r\n\r\n\r\n\r\n\r\n  // HANDLERS CLIC GRILLE\r\n\r\n  const handleClicCase = (valeurAvant, valeurApres, coordX, coordY) => {\r\n\r\n    console.log(valeurAvant, valeurApres, coordX, coordY)\r\n    try {\r\n      updateCarte([coordY, coordX], valeurApres)\r\n      setPropositionsCase([])\r\n      setBtnClickedBottom(null)\r\n\r\n      if (valeurAvant == 4 && valeurApres == 0) { // Extincteur flamme\r\n        doAction(\"Feu\")\r\n      }\r\n      if (valeurAvant == 4 && valeurApres == 3) { // Feu Fumée\r\n        doAction(\"FeuFum\")\r\n      }\r\n      if (valeurAvant == 3 && valeurApres == 0) { // Fumée\r\n        doAction(\"Fum\")\r\n      }\r\n      if (Math.floor(valeurAvant/10)==2 && valeurApres == 0) { // Habitant\r\n        doAction(\"Habitant\")\r\n        updateCarte(position, carte[position[0]][position[1]] +valeurAvant%10)\r\n      }\r\n    } catch (error) { }\r\n  }\r\n\r\n  const handleClicMur = (num, valeurAvant, coordX, coordY) => { // marqueur dégat\r\n    if (propositionMursDetruire[0].length > 0 || propositionMursDetruire[1].length > 0) {\r\n\r\n      const checkInCoords = (index) => {\r\n        // console.log(\"coordx\",coordX,\"coordy\",coordY,\"position\",position)\r\n\r\n        let numClic = null\r\n\r\n        if (coordX == position[1] && (coordY < position[0] || (coordY == position[0] && num == 0))) { // top\r\n          numClic = 0  // case en question\r\n          // console.log(\"top\",numClic)\r\n        }\r\n        if (coordX == position[1] && (coordY > position[0] || (coordY == position[0] && num == 2))) { // bottom\r\n          numClic = 2  // case en question\r\n          // console.log(\"bottom\",numClic)\r\n        }\r\n        if (coordY == position[0] && (coordX < position[1] || (coordX == position[1] && num == 3))) { // left\r\n          numClic = 3  // case en question\r\n          // console.log(\"left\",numClic)\r\n        }\r\n        if (coordY == position[0] && (coordX > position[1] || (coordX == position[1] && num == 1))) { // right\r\n          numClic = 1  // case en question\r\n          // console.log(\"right\",numClic)\r\n        }\r\n\r\n        return numClic\r\n      }\r\n\r\n      var cote = checkInCoords(num % 2)\r\n      let valeurApres = 4\r\n      if (valeurAvant == 1) valeurApres = 3\r\n\r\n      if (cote != null) {\r\n        try {\r\n          switch (cote) {\r\n            case 0:\r\n              updateMurH([position[0], position[1]], valeurApres)\r\n              // if(valeurAvant==5 ||)\r\n              break;\r\n            case 1:\r\n              updateMurV([position[0], position[1] + 1], valeurApres)\r\n              break;\r\n            case 2:\r\n              updateMurH([position[0] + 1, position[1]], valeurApres)\r\n              break;\r\n            case 3:\r\n              updateMurV([position[0], position[1]], valeurApres)\r\n              break;\r\n          }\r\n\r\n          doAction(\"Marqueur\")\r\n\r\n\r\n        } catch (error) {\r\n        }\r\n\r\n\r\n\r\n        setPropositionMursDetruire([[], []])\r\n        setBtnClickedBottom(null)\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  // HANDLER CLICS BOUTONS\r\n\r\n  const handleClicFleche = (num) => {\r\n    // Position y x\r\n    let deplacement\r\n    let rotation\r\n    switch (num) {\r\n      case 0: // haut\r\n        // console.log(\"haut\")\r\n        deplacement = [-1, 0]\r\n        rotation=1\r\n        break;\r\n\r\n      case 1: // droite\r\n        // console.log(\"droite\")\r\n        deplacement = [0, 1]\r\n        rotation=2\r\n        break;\r\n\r\n      case 2: // bas\r\n        // console.log(\"bas\")\r\n        deplacement = [1, 0]\r\n        rotation=3\r\n        break;\r\n\r\n      case 3: // gauche\r\n        // console.log(\"gauche\")\r\n        deplacement = [0, -1]\r\n        rotation=4\r\n        break;\r\n    }\r\n    if (deplacementAutorise(deplacement)) {\r\n\r\n      // ANIMATION MARCHE\r\n\r\n      setDeplacementEnCours({\r\n        type:1,\r\n        rotation:rotation\r\n      })\r\n      setTimeout(() => {\r\n        updateCarte([position[0] + deplacement[0], position[1] + deplacement[1]], carte[position[0]][position[1]]-carte[position[0]][position[1]]%10+rotation)\r\n        // setPosition(position => [position[0] + deplacement[0], position[1] + deplacement[1]])\r\n        doAction(\"Deplacement\")\r\n        updateCarte(position, 0)\r\n\r\n\r\n        setDeplacementEnCours({\r\n          type:2,\r\n          rotation:rotation\r\n        })\r\n        setTimeout(() => {\r\n          setDeplacementEnCours({\r\n            type:0,\r\n            rotation:rotation\r\n          })\r\n        }, 500);\r\n\r\n      }, 500);\r\n      \r\n      \r\n    }\r\n  }\r\n\r\n  const handleChangePiece=()=>{\r\n    resetHistAction()\r\n  }\r\n\r\n  const handleClicDoor = (ouvrir) => { // position, ouvert/fermé\r\n    setBtnClickedBottom(ouvrir ? 4 : 5)\r\n    let valueAvant\r\n    let valueApres\r\n\r\n    if (ouvrir) {\r\n      valueAvant = 5\r\n      valueApres = 6\r\n\r\n    } else {\r\n      valueAvant = 6\r\n      valueApres = 5\r\n    }\r\n    doAction(\"Porte\")\r\n    try {\r\n      if (mursH[position[0]][position[1]] == valueAvant) updateMurH([position[0], position[1]], valueApres)\r\n      if (mursH[position[0] + 1][position[1]] == valueAvant) updateMurH([position[0] + 1, position[1]], valueApres)\r\n      if (mursV[position[0]][position[1]] == valueAvant) updateMurV([position[0], position[1]], valueApres)\r\n      if (mursV[position[0]][position[1] + 1] == valueAvant) updateMurV([position[0], position[1] + 1], valueApres)\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  const handleClicExtincteur = (num) => {\r\n    // 0 FEU, 1 FEUFUM, 2 FUM\r\n    if (btnClickedBottom != num) {\r\n      var listeCasesAction = []\r\n      let valeurAvant = 4\r\n      let valeurApres = 0\r\n      setBtnClickedBottom(num)\r\n      switch (num) {\r\n        case 0: // ETEINDRE FEU\r\n          break;\r\n\r\n        case 1: // FEU FUM\r\n          valeurApres = 3\r\n          break;\r\n        case 2: // ETEINDRE FUMEE\r\n          valeurAvant = 3\r\n          break;\r\n      }\r\n\r\n      try {\r\n        if (carte[position[0] - 1][position[1]] == valeurAvant) listeCasesAction.push([position[0] - 1, position[1], valeurAvant, valeurApres]) // TOP\r\n      } catch (error) { }\r\n      try {\r\n        if (carte[position[0]][position[1] + 1] == valeurAvant) listeCasesAction.push([position[0], position[1] + 1, valeurAvant, valeurApres]) // RIGHT\r\n      } catch (error) { }\r\n      try {\r\n        if (carte[position[0] + 1][position[1]] == valeurAvant) listeCasesAction.push([position[0] + 1, position[1], valeurAvant, valeurApres]) // BOTTOM\r\n      } catch (error) { }\r\n      try {\r\n        if (carte[position[0]][position[1] - 1] == valeurAvant) listeCasesAction.push([position[0], position[1] - 1, valeurAvant, valeurApres]) // LEFT\r\n      } catch (error) { }\r\n\r\n      setPropositionsCase(listeCasesAction)\r\n    } else {\r\n      setBtnClickedBottom(null)\r\n    }\r\n\r\n  }\r\n\r\n  const handleClicMarqueur = () => {\r\n    if (btnClickedBottom != 3) {\r\n      setBtnClickedBottom(3)\r\n      if (propositionMursDetruire[0].length > 0 || propositionMursDetruire[1].length > 0) {\r\n        setPropositionMursDetruire([[], []])\r\n      } else {\r\n        const mursADetruire = [1, 3, 5, 6]\r\n        var propositions = [\r\n          [],\r\n          []\r\n        ]\r\n        const mursAutour = getMursAutour()\r\n\r\n        try {\r\n          if (mursADetruire.includes(mursAutour[0])) propositions[0].push([position[1], position[0]]) // top\r\n          if (mursADetruire.includes(mursAutour[1])) propositions[1].push([position[1] + 1, position[0]]) // right\r\n          if (mursADetruire.includes(mursAutour[2])) propositions[0].push([position[1], position[0] + 1]) // bottom\r\n          if (mursADetruire.includes(mursAutour[3])) propositions[1].push([position[1], position[0]]) // left\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n        setPropositionMursDetruire(propositions)\r\n\r\n      }\r\n    } else {\r\n      setBtnClickedBottom(null)\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const handleClicValidated =async (bool) => {\r\n    if(configuration!=null){\r\n      if(bool){\r\n\r\n        \r\n        let prochainPomp = currentPomp + 1\r\n        let prochainTour = currentTour\r\n        let prochainCycle = currentCycle\r\n        let prochaineSequence=currentSequence\r\n\r\n\r\n\r\n        if(numPompier==configuration.nbPompEquipe.valeur){ // DERNIER POMP DU TOUR\r\n          if(currentTour==configuration.nbToursParCycle.valeur){ // SEND TO INTER\r\n            prochainTour = 1\r\n            prochainPomp=0 // A CHANGER AVEC STRATEGIQUE\r\n\r\n            if(prochainCycle==configuration.nbCyclesParSequence.valeur){\r\n              prochainCycle=1\r\n              prochaineSequence=prochaineSequence+1\r\n            }else{\r\n              prochainCycle=prochainCycle+1\r\n            }\r\n\r\n\r\n          }else{ // PAS DERNIER TOUR DU CYCLE\r\n            console.log(\"pas dernier tour\")\r\n            prochainPomp=1\r\n            prochainTour=prochainTour+1\r\n\r\n\r\n          }\r\n\r\n        }\r\n\r\n        // console.log(prochainPomp,prochainTour,prochainCycle)\r\n  \r\n  \r\n  \r\n\r\n        const budgetsFin = await modifyBudgetsFin(currentCycle,currentSequence)\r\n       \r\n        \r\n        PlayAPI.nouveauTour(prochainPomp,carte,mursH,mursV,prochaineSequence,prochainCycle,prochainTour,resultats.Decedes,resultats.Sauves,session,equipe)      \r\n        console.log(\"validé\")\r\n      \r\n      }else{\r\n        retourAction()\r\n        console.log(\"retour\")\r\n      }\r\n    }\r\n   \r\n  }\r\n\r\n  const handleNoClicked = () => {\r\n    setPropositionMursDetruire([[], []])\r\n    setPropositionsCase([])\r\n  }\r\n\r\n  const handleClicHabitant = () => {\r\n    if (btnClickedBottom != 6) {\r\n      setBtnClickedBottom(6)\r\n      const valeurApres = 0\r\n      var listeCasesAction = []\r\n      try {\r\n        const valeurDessus =  carte[position[0] - 1][position[1]]\r\n        if (Math.floor(valeurDessus/10)==2) listeCasesAction.push([position[0] - 1, position[1], valeurDessus, valeurApres]) // TOP\r\n      } catch (error) { }\r\n      try {\r\n        const valeurDroite =  carte[position[0]][position[1] + 1]\r\n        if (Math.floor(valeurDroite/10)==2) listeCasesAction.push([position[0], position[1] + 1, valeurDroite, valeurApres]) // RIGHT\r\n      } catch (error) { }\r\n      try {\r\n        const valeurDessous =  carte[position[0] + 1][position[1]] \r\n        if (Math.floor(valeurDessous/10)==2)  listeCasesAction.push([position[0] + 1, position[1], valeurDessous, valeurApres]) // BOTTOM\r\n      } catch (error) { }\r\n      try {\r\n        const valeurGauche = carte[position[0]][position[1] - 1]\r\n        if (Math.floor(valeurGauche/10)==2) listeCasesAction.push([position[0], position[1] - 1, valeurGauche, valeurApres]) // LEFT\r\n      } catch (error) { }\r\n\r\n      setPropositionsCase(listeCasesAction)\r\n\r\n\r\n      console.log(\"handle clic habitant\")\r\n    } else {\r\n      setBtnClickedBottom(null)\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    \r\n      carte.length>0 && position!=null ?\r\n      \r\n        <div style={{position:\"absolute\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",flex:1,width:\"100%\",height:\"100%\"}}>\r\n            <Grille\r\n            nbColonnesGrille={nbColonnesGrille}\r\n            nbLignesGrille={nbLignesGrille}\r\n            carte={carte}\r\n            position={position}\r\n            mursH={mursH}\r\n            mursV={mursV}\r\n            propositionMursDetruire={propositionMursDetruire}\r\n            propositionsCase={propositionsCase}\r\n            handleClicMur={handleClicMur}\r\n            handleClicCase={handleClicCase}\r\n            handleChangePiece={handleChangePiece}\r\n            deplacementEnCours={deplacementEnCours}\r\n\r\n          />\r\n\r\n          <TactBandeauTop\r\n            stocks={stocks}\r\n            resultats={resultats}\r\n            numeroPompier={numPompier}\r\n            sequence={currentSequence}\r\n            cycle={currentCycle}\r\n            tour={currentTour}\r\n            pomp={currentPomp}\r\n            configuration={configuration}\r\n            budget={budget}\r\n            equipe={equipe}\r\n          />\r\n\r\n          <TactBandeauBottom\r\n            interventions={interventions}\r\n            stocks={stocks}\r\n            numeroPompier={numPompier}\r\n            tour={currentTour}\r\n            pomp={currentPomp}\r\n            handleClicFleche={handleClicFleche}\r\n            handleClicValidated={handleClicValidated}\r\n            handleClicDoor={handleClicDoor}\r\n            handleClicMarqueur={handleClicMarqueur}\r\n            handleClicExt={handleClicExtincteur}\r\n            handleNoClicked={handleNoClicked}\r\n            handleClicHabitant={handleClicHabitant}\r\n            btnClickedBottom={btnClickedBottom}\r\n            mursAutour={getMursAutour()}\r\n            casesAutour={getCasesAutour()}\r\n            currentCase={carte[position[0]][position[1]]}\r\n            histActions={histActions}\r\n            configuration={configuration}\r\n            deplacementEnCours={deplacementEnCours}\r\n          />\r\n          <TactBandeauDroite\r\n            handleDisconnect={handleDisconnect}\r\n            configuration={configuration}\r\n          />\r\n        </div>\r\n      : null\r\n      \r\n      \r\n     \r\n    \r\n  );\r\n\r\n}\r\n\r\nexport default TactInterface;\r\n\r\n\r\n// export default React.memo(TactInterface)"]},"metadata":{},"sourceType":"module"}